<?php
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InactiveScopeException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
class appDevProjectContainer extends Container
{
    private $parameters;
    private $targetDirs = array();
    public function __construct()
    {
        $dir = __DIR__;
        for ($i = 1; $i <= 5; ++$i) {
            $this->targetDirs[$i] = $dir = dirname($dir);
        }
        $this->parameters = $this->getDefaultParameters();
        $this->services =
        $this->scopedServices =
        $this->scopeStacks = array();
        $this->scopes = array('request' => 'container');
        $this->scopeChildren = array('request' => array());
        $this->methodMap = array(
            'akeneo_batch.job.job_parameters.constraint_collection_provider_registry' => 'getAkeneoBatch_Job_JobParameters_ConstraintCollectionProviderRegistryService',
            'akeneo_batch.job.job_parameters.default_values_provider_registry' => 'getAkeneoBatch_Job_JobParameters_DefaultValuesProviderRegistryService',
            'akeneo_batch.job.job_parameters_validator' => 'getAkeneoBatch_Job_JobParametersValidatorService',
            'akeneo_batch.job.job_registry' => 'getAkeneoBatch_Job_JobRegistryService',
            'akeneo_batch.job_instance_factory' => 'getAkeneoBatch_JobInstanceFactoryService',
            'akeneo_batch.job_parameters_factory' => 'getAkeneoBatch_JobParametersFactoryService',
            'akeneo_batch.job_repository' => 'getAkeneoBatch_JobRepositoryService',
            'akeneo_batch.launcher.simple_job_launcher' => 'getAkeneoBatch_Launcher_SimpleJobLauncherService',
            'akeneo_batch.logger.batch_log_handler' => 'getAkeneoBatch_Logger_BatchLogHandlerService',
            'akeneo_batch.logger_subscriber' => 'getAkeneoBatch_LoggerSubscriberService',
            'akeneo_batch.mail_notifier' => 'getAkeneoBatch_MailNotifierService',
            'akeneo_batch.manager.job_execution' => 'getAkeneoBatch_Manager_JobExecutionService',
            'akeneo_batch.notification_subscriber' => 'getAkeneoBatch_NotificationSubscriberService',
            'akeneo_batch.remover.job_instance' => 'getAkeneoBatch_Remover_JobInstanceService',
            'akeneo_batch.saver.job_instance' => 'getAkeneoBatch_Saver_JobInstanceService',
            'akeneo_batch.set_job_execution_log_file_subscriber' => 'getAkeneoBatch_SetJobExecutionLogFileSubscriberService',
            'akeneo_batch.updater.job_instance' => 'getAkeneoBatch_Updater_JobInstanceService',
            'akeneo_batch.validator.job_instance' => 'getAkeneoBatch_Validator_JobInstanceService',
            'akeneo_buffer.factory.array_buffer' => 'getAkeneoBuffer_Factory_ArrayBufferService',
            'akeneo_buffer.factory.json_file_buffer' => 'getAkeneoBuffer_Factory_JsonFileBufferService',
            'akeneo_file_storage.file_storage.file.file_fetcher' => 'getAkeneoFileStorage_FileStorage_File_FileFetcherService',
            'akeneo_file_storage.file_storage.file.file_storer' => 'getAkeneoFileStorage_FileStorage_File_FileStorerService',
            'akeneo_file_storage.file_storage.file.output_file_fetcher' => 'getAkeneoFileStorage_FileStorage_File_OutputFileFetcherService',
            'akeneo_file_storage.file_storage.file_info_factory' => 'getAkeneoFileStorage_FileStorage_FileInfoFactoryService',
            'akeneo_file_storage.file_storage.filesystem_provider' => 'getAkeneoFileStorage_FileStorage_FilesystemProviderService',
            'akeneo_file_storage.file_storage.formater.bytes' => 'getAkeneoFileStorage_FileStorage_Formater_BytesService',
            'akeneo_file_storage.file_storage.path_generator' => 'getAkeneoFileStorage_FileStorage_PathGeneratorService',
            'akeneo_file_storage.form.type.file_info' => 'getAkeneoFileStorage_Form_Type_FileInfoService',
            'akeneo_file_storage.repository.file_info' => 'getAkeneoFileStorage_Repository_FileInfoService',
            'akeneo_file_storage.saver.file' => 'getAkeneoFileStorage_Saver_FileService',
            'akeneo_measure.manager' => 'getAkeneoMeasure_ManagerService',
            'akeneo_measure.measure_converter' => 'getAkeneoMeasure_MeasureConverterService',
            'akeneo_storage_utils.doctrine.object_detacher' => 'getAkeneoStorageUtils_Doctrine_ObjectDetacherService',
            'akeneo_storage_utils.doctrine.orm_mappings_override_configurator' => 'getAkeneoStorageUtils_Doctrine_OrmMappingsOverrideConfiguratorService',
            'akeneo_storage_utils.doctrine.smart_manager_registry' => 'getAkeneoStorageUtils_Doctrine_SmartManagerRegistryService',
            'akeneo_storage_utils.doctrine.table_name_builder' => 'getAkeneoStorageUtils_Doctrine_TableNameBuilderService',
            'akeneo_storage_utils.event_subscriber.configure_orm_mappings' => 'getAkeneoStorageUtils_EventSubscriber_ConfigureOrmMappingsService',
            'akeneo_storage_utils.event_subscriber.resolve_target_repository' => 'getAkeneoStorageUtils_EventSubscriber_ResolveTargetRepositoryService',
            'akeneo_storage_utils.factory.referenced_collection' => 'getAkeneoStorageUtils_Factory_ReferencedCollectionService',
            'akeneo_storage_utils.remover.base_options_resolver' => 'getAkeneoStorageUtils_Remover_BaseOptionsResolverService',
            'akeneo_storage_utils.saver.base_options_resolver' => 'getAkeneoStorageUtils_Saver_BaseOptionsResolverService',
            'annotation_reader' => 'getAnnotationReaderService',
            'assetic.asset_factory' => 'getAssetic_AssetFactoryService',
            'assetic.asset_manager' => 'getAssetic_AssetManagerService',
            'assetic.filter.cssrewrite' => 'getAssetic_Filter_CssrewriteService',
            'assetic.filter.lessphp' => 'getAssetic_Filter_LessphpService',
            'assetic.filter_manager' => 'getAssetic_FilterManagerService',
            'assetic.helper.static' => 'getAssetic_Helper_StaticService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'data_collector.dump' => 'getDataCollector_DumpService',
            'data_collector.form' => 'getDataCollector_FormService',
            'data_collector.form.extractor' => 'getDataCollector_Form_ExtractorService',
            'data_collector.request' => 'getDataCollector_RequestService',
            'data_collector.router' => 'getDataCollector_RouterService',
            'data_collector.translation' => 'getDataCollector_TranslationService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.dump_listener' => 'getDebug_DumpListenerService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default.wrapped_connection' => 'getDoctrine_Dbal_Default_WrappedConnectionService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.dbal.session_connection' => 'getDoctrine_Dbal_SessionConnectionService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.listeners.resolve_target_entity' => 'getDoctrine_Orm_Listeners_ResolveTargetEntityService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'escape_wsse_authentication.encoder' => 'getEscapeWsseAuthentication_EncoderService',
            'escape_wsse_authentication.entry_point' => 'getEscapeWsseAuthentication_EntryPointService',
            'escape_wsse_authentication.listener' => 'getEscapeWsseAuthentication_ListenerService',
            'escape_wsse_authentication.nonce_cache' => 'getEscapeWsseAuthentication_NonceCacheService',
            'escape_wsse_authentication.provider' => 'getEscapeWsseAuthentication_ProviderService',
            'event_dispatcher' => 'getEventDispatcherService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.csrf_provider' => 'getForm_CsrfProviderService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.data_collector' => 'getForm_TypeExtension_Form_DataCollectorService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.repeated_field_parameters' => 'getForm_TypeExtension_RepeatedFieldParametersService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_extension.validation_groups' => 'getForm_TypeExtension_ValidationGroupsService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_js_routing.controller' => 'getFosJsRouting_ControllerService',
            'fos_js_routing.extractor' => 'getFosJsRouting_ExtractorService',
            'fos_js_routing.serializer' => 'getFosJsRouting_SerializerService',
            'fos_rest.body_listener' => 'getFosRest_BodyListenerService',
            'fos_rest.decoder.json' => 'getFosRest_Decoder_JsonService',
            'fos_rest.decoder.jsontoform' => 'getFosRest_Decoder_JsontoformService',
            'fos_rest.decoder.xml' => 'getFosRest_Decoder_XmlService',
            'fos_rest.decoder_provider' => 'getFosRest_DecoderProviderService',
            'fos_rest.exception.codes_map' => 'getFosRest_Exception_CodesMapService',
            'fos_rest.exception.controller' => 'getFosRest_Exception_ControllerService',
            'fos_rest.exception.twig_controller' => 'getFosRest_Exception_TwigControllerService',
            'fos_rest.exception_listener' => 'getFosRest_ExceptionListenerService',
            'fos_rest.format_listener' => 'getFosRest_FormatListenerService',
            'fos_rest.format_negotiator' => 'getFosRest_FormatNegotiatorService',
            'fos_rest.inflector' => 'getFosRest_InflectorService',
            'fos_rest.normalizer.camel_keys' => 'getFosRest_Normalizer_CamelKeysService',
            'fos_rest.normalizer.camel_keys_with_leading_underscore' => 'getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService',
            'fos_rest.request.param_fetcher' => 'getFosRest_Request_ParamFetcherService',
            'fos_rest.request.param_fetcher.reader' => 'getFosRest_Request_ParamFetcher_ReaderService',
            'fos_rest.serializer' => 'getFosRest_SerializerService',
            'fos_rest.serializer.exception_normalizer.jms' => 'getFosRest_Serializer_ExceptionNormalizer_JmsService',
            'fos_rest.serializer.jms_handler_registry' => 'getFosRest_Serializer_JmsHandlerRegistryService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.listener' => 'getFragment_ListenerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'gedmo.listener.timestampable' => 'getGedmo_Listener_TimestampableService',
            'gedmo.listener.tree' => 'getGedmo_Listener_TreeService',
            'http_kernel' => 'getHttpKernelService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.unserialize_object_constructor' => 'getJmsSerializer_UnserializeObjectConstructorService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'jsfv.controller' => 'getJsfv_ControllerService',
            'jsfv.generator' => 'getJsfv_GeneratorService',
            'jsfv.repeated_field_listener' => 'getJsfv_RepeatedFieldListenerService',
            'jsfv.validation_groups_listener' => 'getJsfv_ValidationGroupsListenerService',
            'kernel' => 'getKernelService',
            'kernel.cache_warmer.jsformvalidation' => 'getKernel_CacheWarmer_JsformvalidationService',
            'kernel.listener.hashnav_response' => 'getKernel_Listener_HashnavResponseService',
            'kernel.listener.nav_history_response' => 'getKernel_Listener_NavHistoryResponseService',
            'kernel.listener.title_service.request_listener' => 'getKernel_Listener_TitleService_RequestListenerService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.helper' => 'getKnpMenu_HelperService',
            'knp_menu.listener.voters' => 'getKnpMenu_Listener_VotersService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer.twig' => 'getKnpMenu_Renderer_TwigService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'knp_menu.voter.router' => 'getKnpMenu_Voter_RouterService',
            'knp_voter_request' => 'getKnpVoterRequestService',
            'liip_imagine' => 'getLiipImagineService',
            'liip_imagine.binary.loader.default' => 'getLiipImagine_Binary_Loader_DefaultService',
            'liip_imagine.binary.loader.prototype.filesystem' => 'getLiipImagine_Binary_Loader_Prototype_FilesystemService',
            'liip_imagine.binary.loader.prototype.stream' => 'getLiipImagine_Binary_Loader_Prototype_StreamService',
            'liip_imagine.binary.mime_type_guesser' => 'getLiipImagine_Binary_MimeTypeGuesserService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.default' => 'getLiipImagine_Cache_Resolver_DefaultService',
            'liip_imagine.cache.resolver.no_cache_web_path' => 'getLiipImagine_Cache_Resolver_NoCacheWebPathService',
            'liip_imagine.cache.signer' => 'getLiipImagine_Cache_SignerService',
            'liip_imagine.controller' => 'getLiipImagine_ControllerService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.extension_guesser' => 'getLiipImagine_ExtensionGuesserService',
            'liip_imagine.filter.configuration' => 'getLiipImagine_Filter_ConfigurationService',
            'liip_imagine.filter.loader.auto_rotate' => 'getLiipImagine_Filter_Loader_AutoRotateService',
            'liip_imagine.filter.loader.background' => 'getLiipImagine_Filter_Loader_BackgroundService',
            'liip_imagine.filter.loader.crop' => 'getLiipImagine_Filter_Loader_CropService',
            'liip_imagine.filter.loader.interlace' => 'getLiipImagine_Filter_Loader_InterlaceService',
            'liip_imagine.filter.loader.paste' => 'getLiipImagine_Filter_Loader_PasteService',
            'liip_imagine.filter.loader.relative_resize' => 'getLiipImagine_Filter_Loader_RelativeResizeService',
            'liip_imagine.filter.loader.resize' => 'getLiipImagine_Filter_Loader_ResizeService',
            'liip_imagine.filter.loader.rotate' => 'getLiipImagine_Filter_Loader_RotateService',
            'liip_imagine.filter.loader.strip' => 'getLiipImagine_Filter_Loader_StripService',
            'liip_imagine.filter.loader.thumbnail' => 'getLiipImagine_Filter_Loader_ThumbnailService',
            'liip_imagine.filter.loader.upscale' => 'getLiipImagine_Filter_Loader_UpscaleService',
            'liip_imagine.filter.loader.watermark' => 'getLiipImagine_Filter_Loader_WatermarkService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'liip_imagine.filter.post_processor.jpegoptim' => 'getLiipImagine_Filter_PostProcessor_JpegoptimService',
            'liip_imagine.form.type.image' => 'getLiipImagine_Form_Type_ImageService',
            'liip_imagine.mime_type_guesser' => 'getLiipImagine_MimeTypeGuesserService',
            'liip_imagine.templating.helper' => 'getLiipImagine_Templating_HelperService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'monolog.handler.firephp' => 'getMonolog_Handler_FirephpService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.logger.batch' => 'getMonolog_Logger_BatchService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.profiler' => 'getMonolog_Logger_ProfilerService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'oneup_flysystem.archivist_filesystem' => 'getOneupFlysystem_ArchivistFilesystemService',
            'oneup_flysystem.catalog_storage_filesystem' => 'getOneupFlysystem_CatalogStorageFilesystemService',
            'oneup_flysystem.mount_manager' => 'getOneupFlysystem_MountManagerService',
            'oneup_flysystem.plugin.empty_dir' => 'getOneupFlysystem_Plugin_EmptyDirService',
            'oneup_flysystem.plugin.get_with_metadata' => 'getOneupFlysystem_Plugin_GetWithMetadataService',
            'oneup_flysystem.plugin.list_files' => 'getOneupFlysystem_Plugin_ListFilesService',
            'oneup_flysystem.plugin.list_paths' => 'getOneupFlysystem_Plugin_ListPathsService',
            'oneup_flysystem.plugin.list_with' => 'getOneupFlysystem_Plugin_ListWithService',
            'oneup_flysystem.tmp_storage_filesystem' => 'getOneupFlysystem_TmpStorageFilesystemService',
            'oro_assetic.asset_manager' => 'getOroAssetic_AssetManagerService',
            'oro_assetic.twig.extension' => 'getOroAssetic_Twig_ExtensionService',
            'oro_config.controller.configuration' => 'getOroConfig_Controller_ConfigurationService',
            'oro_config.form.config_subscriber' => 'getOroConfig_Form_ConfigSubscriberService',
            'oro_config.global' => 'getOroConfig_GlobalService',
            'oro_config.twig.config_extension' => 'getOroConfig_Twig_ConfigExtensionService',
            'oro_config.user' => 'getOroConfig_UserService',
            'oro_datagrid.configuration.provider' => 'getOroDatagrid_Configuration_ProviderService',
            'oro_datagrid.configuration.provider.chain' => 'getOroDatagrid_Configuration_Provider_ChainService',
            'oro_datagrid.datagrid.builder' => 'getOroDatagrid_Datagrid_BuilderService',
            'oro_datagrid.datagrid.manager' => 'getOroDatagrid_Datagrid_ManagerService',
            'oro_datagrid.datagrid.request_params' => 'getOroDatagrid_Datagrid_RequestParamsService',
            'oro_datagrid.datasource.orm' => 'getOroDatagrid_Datasource_OrmService',
            'oro_datagrid.extension.action' => 'getOroDatagrid_Extension_ActionService',
            'oro_datagrid.extension.action.type.ajax' => 'getOroDatagrid_Extension_Action_Type_AjaxService',
            'oro_datagrid.extension.action.type.delete' => 'getOroDatagrid_Extension_Action_Type_DeleteService',
            'oro_datagrid.extension.action.type.navigate' => 'getOroDatagrid_Extension_Action_Type_NavigateService',
            'oro_datagrid.extension.formatter' => 'getOroDatagrid_Extension_FormatterService',
            'oro_datagrid.extension.formatter.field_property' => 'getOroDatagrid_Extension_Formatter_FieldPropertyService',
            'oro_datagrid.extension.formatter.property.callback_property' => 'getOroDatagrid_Extension_Formatter_Property_CallbackPropertyService',
            'oro_datagrid.extension.formatter.property.translateable_property' => 'getOroDatagrid_Extension_Formatter_Property_TranslateablePropertyService',
            'oro_datagrid.extension.formatter.property.twig_property' => 'getOroDatagrid_Extension_Formatter_Property_TwigPropertyService',
            'oro_datagrid.extension.formatter.property.url_property' => 'getOroDatagrid_Extension_Formatter_Property_UrlPropertyService',
            'oro_datagrid.extension.mass_action' => 'getOroDatagrid_Extension_MassActionService',
            'oro_datagrid.extension.mass_action.handler.delete' => 'getOroDatagrid_Extension_MassAction_Handler_DeleteService',
            'oro_datagrid.extension.mass_action.type.ajax' => 'getOroDatagrid_Extension_MassAction_Type_AjaxService',
            'oro_datagrid.extension.mass_action.type.delete' => 'getOroDatagrid_Extension_MassAction_Type_DeleteService',
            'oro_datagrid.extension.mass_action.type.redirect' => 'getOroDatagrid_Extension_MassAction_Type_RedirectService',
            'oro_datagrid.extension.mass_action.type.widget' => 'getOroDatagrid_Extension_MassAction_Type_WidgetService',
            'oro_datagrid.extension.mass_action.type.window' => 'getOroDatagrid_Extension_MassAction_Type_WindowService',
            'oro_datagrid.extension.orm_pager' => 'getOroDatagrid_Extension_OrmPagerService',
            'oro_datagrid.extension.orm_sorter' => 'getOroDatagrid_Extension_OrmSorterService',
            'oro_datagrid.extension.pager.orm.pager' => 'getOroDatagrid_Extension_Pager_Orm_PagerService',
            'oro_datagrid.extension.toolbar' => 'getOroDatagrid_Extension_ToolbarService',
            'oro_datagrid.extension.views' => 'getOroDatagrid_Extension_ViewsService',
            'oro_datagrid.mass_action.dispatcher' => 'getOroDatagrid_MassAction_DispatcherService',
            'oro_datagrid.mass_action.parameters_parser' => 'getOroDatagrid_MassAction_ParametersParserService',
            'oro_datagrid.provider.resolver' => 'getOroDatagrid_Provider_ResolverService',
            'oro_datagrid.twig.metadata' => 'getOroDatagrid_Twig_MetadataService',
            'oro_filter.boolean_filter' => 'getOroFilter_BooleanFilterService',
            'oro_filter.choice_filter' => 'getOroFilter_ChoiceFilterService',
            'oro_filter.date_range_filter' => 'getOroFilter_DateRangeFilterService',
            'oro_filter.datetime_range_filter' => 'getOroFilter_DatetimeRangeFilterService',
            'oro_filter.entity_filter' => 'getOroFilter_EntityFilterService',
            'oro_filter.extension.orm_filter' => 'getOroFilter_Extension_OrmFilterService',
            'oro_filter.filter_utility' => 'getOroFilter_FilterUtilityService',
            'oro_filter.form.type.filter' => 'getOroFilter_Form_Type_FilterService',
            'oro_filter.form.type.filter.boolean' => 'getOroFilter_Form_Type_Filter_BooleanService',
            'oro_filter.form.type.filter.choice' => 'getOroFilter_Form_Type_Filter_ChoiceService',
            'oro_filter.form.type.filter.date_range' => 'getOroFilter_Form_Type_Filter_DateRangeService',
            'oro_filter.form.type.filter.datetime_range' => 'getOroFilter_Form_Type_Filter_DatetimeRangeService',
            'oro_filter.form.type.filter.entity' => 'getOroFilter_Form_Type_Filter_EntityService',
            'oro_filter.form.type.filter.number' => 'getOroFilter_Form_Type_Filter_NumberService',
            'oro_filter.form.type.filter.selectrow' => 'getOroFilter_Form_Type_Filter_SelectrowService',
            'oro_filter.form.type.filter.text' => 'getOroFilter_Form_Type_Filter_TextService',
            'oro_filter.number_filter' => 'getOroFilter_NumberFilterService',
            'oro_filter.percent_filter' => 'getOroFilter_PercentFilterService',
            'oro_filter.select_row_filter' => 'getOroFilter_SelectRowFilterService',
            'oro_filter.string_filter' => 'getOroFilter_StringFilterService',
            'oro_filter.twig.extension.render_header' => 'getOroFilter_Twig_Extension_RenderHeaderService',
            'oro_filter.twig.extension.render_layout' => 'getOroFilter_Twig_Extension_RenderLayoutService',
            'oro_menu.builder_chain' => 'getOroMenu_BuilderChainService',
            'oro_menu.cache' => 'getOroMenu_CacheService',
            'oro_menu.configuration_builder' => 'getOroMenu_ConfigurationBuilderService',
            'oro_menu.factory' => 'getOroMenu_FactoryService',
            'oro_menu.twig.extension' => 'getOroMenu_Twig_ExtensionService',
            'oro_menu_acl_extension' => 'getOroMenuAclExtensionService',
            'oro_navigation.breadcrumb_manager' => 'getOroNavigation_BreadcrumbManagerService',
            'oro_navigation.favorites_menu.builder' => 'getOroNavigation_FavoritesMenu_BuilderService',
            'oro_navigation.form.handler.pagestate' => 'getOroNavigation_Form_Handler_PagestateService',
            'oro_navigation.form.pagestate' => 'getOroNavigation_Form_PagestateService',
            'oro_navigation.form.type.pagestate' => 'getOroNavigation_Form_Type_PagestateService',
            'oro_navigation.history_menu.builder' => 'getOroNavigation_HistoryMenu_BuilderService',
            'oro_navigation.item.builder.favorite' => 'getOroNavigation_Item_Builder_FavoriteService',
            'oro_navigation.item.builder.history' => 'getOroNavigation_Item_Builder_HistoryService',
            'oro_navigation.item.builder.mostviewed' => 'getOroNavigation_Item_Builder_MostviewedService',
            'oro_navigation.item.builder.pinbar' => 'getOroNavigation_Item_Builder_PinbarService',
            'oro_navigation.item.factory' => 'getOroNavigation_Item_FactoryService',
            'oro_navigation.item.pinbar.post_persist_listener' => 'getOroNavigation_Item_Pinbar_PostPersistListenerService',
            'oro_navigation.mostviewed_menu.builder' => 'getOroNavigation_MostviewedMenu_BuilderService',
            'oro_navigation.pinbar_menu.builder' => 'getOroNavigation_PinbarMenu_BuilderService',
            'oro_navigation.title_annotations_reader' => 'getOroNavigation_TitleAnnotationsReaderService',
            'oro_navigation.title_config_reader' => 'getOroNavigation_TitleConfigReaderService',
            'oro_navigation.title_service' => 'getOroNavigation_TitleServiceService',
            'oro_navigation.title_service.twig.extension' => 'getOroNavigation_TitleService_Twig_ExtensionService',
            'oro_navigation.translation.extractor' => 'getOroNavigation_Translation_ExtractorService',
            'oro_navigation.twig.hash_nav_extension' => 'getOroNavigation_Twig_HashNavExtensionService',
            'oro_requirejs.cache' => 'getOroRequirejs_CacheService',
            'oro_requirejs.twig.requirejs_extension' => 'getOroRequirejs_Twig_RequirejsExtensionService',
            'oro_requirejs_config_provider' => 'getOroRequirejsConfigProviderService',
            'oro_security.acl.annotation_provider' => 'getOroSecurity_Acl_AnnotationProviderService',
            'oro_security.acl.entity_class_resolver' => 'getOroSecurity_Acl_EntityClassResolverService',
            'oro_security.acl.extension_selector' => 'getOroSecurity_Acl_ExtensionSelectorService',
            'oro_security.acl.manager' => 'getOroSecurity_Acl_ManagerService',
            'oro_security.acl.object_identity_factory' => 'getOroSecurity_Acl_ObjectIdentityFactoryService',
            'oro_security.acl.permission_granting_strategy' => 'getOroSecurity_Acl_PermissionGrantingStrategyService',
            'oro_security.acl.sid_manager' => 'getOroSecurity_Acl_SidManagerService',
            'oro_security.acl.voter_link' => 'getOroSecurity_Acl_VoterLinkService',
            'oro_security.action_metadata_provider' => 'getOroSecurity_ActionMetadataProviderService',
            'oro_security.form.type.object_label_type' => 'getOroSecurity_Form_Type_ObjectLabelTypeService',
            'oro_security.link.sid_manager' => 'getOroSecurity_Link_SidManagerService',
            'oro_security.listener.controller' => 'getOroSecurity_Listener_ControllerService',
            'oro_security.security_facade' => 'getOroSecurity_SecurityFacadeService',
            'oro_security.twig.security_extension' => 'getOroSecurity_Twig_SecurityExtensionService',
            'oro_translation.controller' => 'getOroTranslation_ControllerService',
            'oro_user.change_password.subscriber' => 'getOroUser_ChangePassword_SubscriberService',
            'oro_user.entity_with_image.subscriber' => 'getOroUser_EntityWithImage_SubscriberService',
            'oro_user.form.group' => 'getOroUser_Form_GroupService',
            'oro_user.form.group.api' => 'getOroUser_Form_Group_ApiService',
            'oro_user.form.handler.acl_role' => 'getOroUser_Form_Handler_AclRoleService',
            'oro_user.form.handler.group' => 'getOroUser_Form_Handler_GroupService',
            'oro_user.form.handler.group.api' => 'getOroUser_Form_Handler_Group_ApiService',
            'oro_user.form.handler.reset' => 'getOroUser_Form_Handler_ResetService',
            'oro_user.form.handler.role.api' => 'getOroUser_Form_Handler_Role_ApiService',
            'oro_user.form.handler.user' => 'getOroUser_Form_Handler_UserService',
            'oro_user.form.handler.user.api' => 'getOroUser_Form_Handler_User_ApiService',
            'oro_user.form.reset' => 'getOroUser_Form_ResetService',
            'oro_user.form.role' => 'getOroUser_Form_RoleService',
            'oro_user.form.role.api' => 'getOroUser_Form_Role_ApiService',
            'oro_user.form.type.change_password' => 'getOroUser_Form_Type_ChangePasswordService',
            'oro_user.form.type.group' => 'getOroUser_Form_Type_GroupService',
            'oro_user.form.type.group.api' => 'getOroUser_Form_Type_Group_ApiService',
            'oro_user.form.type.reset' => 'getOroUser_Form_Type_ResetService',
            'oro_user.form.type.role.api' => 'getOroUser_Form_Type_Role_ApiService',
            'oro_user.form.type.user.api' => 'getOroUser_Form_Type_User_ApiService',
            'oro_user.form.user' => 'getOroUser_Form_UserService',
            'oro_user.form.user.api' => 'getOroUser_Form_User_ApiService',
            'oro_user.manager' => 'getOroUser_ManagerService',
            'oro_user.role.listener' => 'getOroUser_Role_ListenerService',
            'oro_user.security.login' => 'getOroUser_Security_LoginService',
            'oro_user.security.provider' => 'getOroUser_Security_ProviderService',
            'oro_user.user_menu' => 'getOroUser_UserMenuService',
            'pim_analytics.controller.data' => 'getPimAnalytics_Controller_DataService',
            'pim_analytics.controller.system_info' => 'getPimAnalytics_Controller_SystemInfoService',
            'pim_analytics.data_collector.bundles' => 'getPimAnalytics_DataCollector_BundlesService',
            'pim_analytics.data_collector.chained' => 'getPimAnalytics_DataCollector_ChainedService',
            'pim_analytics.data_collector.database' => 'getPimAnalytics_DataCollector_DatabaseService',
            'pim_analytics.data_collector.operating_system' => 'getPimAnalytics_DataCollector_OperatingSystemService',
            'pim_analytics.data_collector.request' => 'getPimAnalytics_DataCollector_RequestService',
            'pim_analytics.data_collector.storage' => 'getPimAnalytics_DataCollector_StorageService',
            'pim_analytics.data_collector.token_storage' => 'getPimAnalytics_DataCollector_TokenStorageService',
            'pim_analytics.data_collector.version' => 'getPimAnalytics_DataCollector_VersionService',
            'pim_analytics.twig.update_extension' => 'getPimAnalytics_Twig_UpdateExtensionService',
            'pim_catalog.applier.product_template' => 'getPimCatalog_Applier_ProductTemplateService',
            'pim_catalog.attributetype.boolean' => 'getPimCatalog_Attributetype_BooleanService',
            'pim_catalog.attributetype.date' => 'getPimCatalog_Attributetype_DateService',
            'pim_catalog.attributetype.file' => 'getPimCatalog_Attributetype_FileService',
            'pim_catalog.attributetype.identifier' => 'getPimCatalog_Attributetype_IdentifierService',
            'pim_catalog.attributetype.image' => 'getPimCatalog_Attributetype_ImageService',
            'pim_catalog.attributetype.metric' => 'getPimCatalog_Attributetype_MetricService',
            'pim_catalog.attributetype.multiselect' => 'getPimCatalog_Attributetype_MultiselectService',
            'pim_catalog.attributetype.number' => 'getPimCatalog_Attributetype_NumberService',
            'pim_catalog.attributetype.pricecollection' => 'getPimCatalog_Attributetype_PricecollectionService',
            'pim_catalog.attributetype.simpleselect' => 'getPimCatalog_Attributetype_SimpleselectService',
            'pim_catalog.attributetype.text' => 'getPimCatalog_Attributetype_TextService',
            'pim_catalog.attributetype.textarea' => 'getPimCatalog_Attributetype_TextareaService',
            'pim_catalog.builder.choices' => 'getPimCatalog_Builder_ChoicesService',
            'pim_catalog.builder.product' => 'getPimCatalog_Builder_ProductService',
            'pim_catalog.builder.product_template' => 'getPimCatalog_Builder_ProductTemplateService',
            'pim_catalog.command_launcher' => 'getPimCatalog_CommandLauncherService',
            'pim_catalog.comparator.filter.product' => 'getPimCatalog_Comparator_Filter_ProductService',
            'pim_catalog.comparator.filter.product_association' => 'getPimCatalog_Comparator_Filter_ProductAssociationService',
            'pim_catalog.comparator.registry' => 'getPimCatalog_Comparator_RegistryService',
            'pim_catalog.completeness.checker.chained' => 'getPimCatalog_Completeness_Checker_ChainedService',
            'pim_catalog.completeness.checker.empty' => 'getPimCatalog_Completeness_Checker_EmptyService',
            'pim_catalog.completeness.checker.media' => 'getPimCatalog_Completeness_Checker_MediaService',
            'pim_catalog.completeness.checker.metric' => 'getPimCatalog_Completeness_Checker_MetricService',
            'pim_catalog.completeness.checker.price' => 'getPimCatalog_Completeness_Checker_PriceService',
            'pim_catalog.context.catalog' => 'getPimCatalog_Context_CatalogService',
            'pim_catalog.converter.metric' => 'getPimCatalog_Converter_MetricService',
            'pim_catalog.data_collector.database' => 'getPimCatalog_DataCollector_DatabaseService',
            'pim_catalog.denormalizer.standard.attribute_option' => 'getPimCatalog_Denormalizer_Standard_AttributeOptionService',
            'pim_catalog.denormalizer.standard.attribute_options' => 'getPimCatalog_Denormalizer_Standard_AttributeOptionsService',
            'pim_catalog.denormalizer.standard.base_value' => 'getPimCatalog_Denormalizer_Standard_BaseValueService',
            'pim_catalog.denormalizer.standard.boolean' => 'getPimCatalog_Denormalizer_Standard_BooleanService',
            'pim_catalog.denormalizer.standard.datetime' => 'getPimCatalog_Denormalizer_Standard_DatetimeService',
            'pim_catalog.denormalizer.standard.file' => 'getPimCatalog_Denormalizer_Standard_FileService',
            'pim_catalog.denormalizer.standard.metric' => 'getPimCatalog_Denormalizer_Standard_MetricService',
            'pim_catalog.denormalizer.standard.number' => 'getPimCatalog_Denormalizer_Standard_NumberService',
            'pim_catalog.denormalizer.standard.prices' => 'getPimCatalog_Denormalizer_Standard_PricesService',
            'pim_catalog.denormalizer.standard.product_value' => 'getPimCatalog_Denormalizer_Standard_ProductValueService',
            'pim_catalog.denormalizer.standard.product_values' => 'getPimCatalog_Denormalizer_Standard_ProductValuesService',
            'pim_catalog.doctrine.completeness_generator' => 'getPimCatalog_Doctrine_CompletenessGeneratorService',
            'pim_catalog.doctrine.query.filter.boolean' => 'getPimCatalog_Doctrine_Query_Filter_BooleanService',
            'pim_catalog.doctrine.query.filter.category' => 'getPimCatalog_Doctrine_Query_Filter_CategoryService',
            'pim_catalog.doctrine.query.filter.completeness' => 'getPimCatalog_Doctrine_Query_Filter_CompletenessService',
            'pim_catalog.doctrine.query.filter.date' => 'getPimCatalog_Doctrine_Query_Filter_DateService',
            'pim_catalog.doctrine.query.filter.datetime' => 'getPimCatalog_Doctrine_Query_Filter_DatetimeService',
            'pim_catalog.doctrine.query.filter.dummy' => 'getPimCatalog_Doctrine_Query_Filter_DummyService',
            'pim_catalog.doctrine.query.filter.family' => 'getPimCatalog_Doctrine_Query_Filter_FamilyService',
            'pim_catalog.doctrine.query.filter.groups' => 'getPimCatalog_Doctrine_Query_Filter_GroupsService',
            'pim_catalog.doctrine.query.filter.identifier' => 'getPimCatalog_Doctrine_Query_Filter_IdentifierService',
            'pim_catalog.doctrine.query.filter.media' => 'getPimCatalog_Doctrine_Query_Filter_MediaService',
            'pim_catalog.doctrine.query.filter.metric' => 'getPimCatalog_Doctrine_Query_Filter_MetricService',
            'pim_catalog.doctrine.query.filter.number' => 'getPimCatalog_Doctrine_Query_Filter_NumberService',
            'pim_catalog.doctrine.query.filter.object_code_resolver' => 'getPimCatalog_Doctrine_Query_Filter_ObjectCodeResolverService',
            'pim_catalog.doctrine.query.filter.object_id_resolver' => 'getPimCatalog_Doctrine_Query_Filter_ObjectIdResolverService',
            'pim_catalog.doctrine.query.filter.option' => 'getPimCatalog_Doctrine_Query_Filter_OptionService',
            'pim_catalog.doctrine.query.filter.options' => 'getPimCatalog_Doctrine_Query_Filter_OptionsService',
            'pim_catalog.doctrine.query.filter.price' => 'getPimCatalog_Doctrine_Query_Filter_PriceService',
            'pim_catalog.doctrine.query.filter.product_id' => 'getPimCatalog_Doctrine_Query_Filter_ProductIdService',
            'pim_catalog.doctrine.query.filter.string' => 'getPimCatalog_Doctrine_Query_Filter_StringService',
            'pim_catalog.doctrine.query.sorter.base' => 'getPimCatalog_Doctrine_Query_Sorter_BaseService',
            'pim_catalog.doctrine.query.sorter.completeness' => 'getPimCatalog_Doctrine_Query_Sorter_CompletenessService',
            'pim_catalog.doctrine.query.sorter.entity' => 'getPimCatalog_Doctrine_Query_Sorter_EntityService',
            'pim_catalog.doctrine.query.sorter.family' => 'getPimCatalog_Doctrine_Query_Sorter_FamilyService',
            'pim_catalog.doctrine.query.sorter.in_group' => 'getPimCatalog_Doctrine_Query_Sorter_InGroupService',
            'pim_catalog.doctrine.query.sorter.is_associated' => 'getPimCatalog_Doctrine_Query_Sorter_IsAssociatedService',
            'pim_catalog.event_subscriber.category.check_channels' => 'getPimCatalog_EventSubscriber_Category_CheckChannelsService',
            'pim_catalog.event_subscriber.create_attribute_requirement' => 'getPimCatalog_EventSubscriber_CreateAttributeRequirementService',
            'pim_catalog.event_subscriber.currency_disabling' => 'getPimCatalog_EventSubscriber_CurrencyDisablingService',
            'pim_catalog.event_subscriber.localizable' => 'getPimCatalog_EventSubscriber_LocalizableService',
            'pim_catalog.event_subscriber.metric_base_values' => 'getPimCatalog_EventSubscriber_MetricBaseValuesService',
            'pim_catalog.event_subscriber.orm.inject_product_reference' => 'getPimCatalog_EventSubscriber_Orm_InjectProductReferenceService',
            'pim_catalog.event_subscriber.outdate_indexed_values' => 'getPimCatalog_EventSubscriber_OutdateIndexedValuesService',
            'pim_catalog.event_subscriber.product_category' => 'getPimCatalog_EventSubscriber_ProductCategoryService',
            'pim_catalog.event_subscriber.product_template_attribute' => 'getPimCatalog_EventSubscriber_ProductTemplateAttributeService',
            'pim_catalog.event_subscriber.reset_unique_validation' => 'getPimCatalog_EventSubscriber_ResetUniqueValidationService',
            'pim_catalog.event_subscriber.scopable' => 'getPimCatalog_EventSubscriber_ScopableService',
            'pim_catalog.event_subscriber.timestampable' => 'getPimCatalog_EventSubscriber_TimestampableService',
            'pim_catalog.factory.association_type' => 'getPimCatalog_Factory_AssociationTypeService',
            'pim_catalog.factory.attribute' => 'getPimCatalog_Factory_AttributeService',
            'pim_catalog.factory.attribute_group' => 'getPimCatalog_Factory_AttributeGroupService',
            'pim_catalog.factory.attribute_option' => 'getPimCatalog_Factory_AttributeOptionService',
            'pim_catalog.factory.attribute_option_value' => 'getPimCatalog_Factory_AttributeOptionValueService',
            'pim_catalog.factory.attribute_requirement' => 'getPimCatalog_Factory_AttributeRequirementService',
            'pim_catalog.factory.category' => 'getPimCatalog_Factory_CategoryService',
            'pim_catalog.factory.channel' => 'getPimCatalog_Factory_ChannelService',
            'pim_catalog.factory.currency' => 'getPimCatalog_Factory_CurrencyService',
            'pim_catalog.factory.family' => 'getPimCatalog_Factory_FamilyService',
            'pim_catalog.factory.group' => 'getPimCatalog_Factory_GroupService',
            'pim_catalog.factory.group_type' => 'getPimCatalog_Factory_GroupTypeService',
            'pim_catalog.factory.locale' => 'getPimCatalog_Factory_LocaleService',
            'pim_catalog.factory.metric' => 'getPimCatalog_Factory_MetricService',
            'pim_catalog.factory.product_cursor' => 'getPimCatalog_Factory_ProductCursorService',
            'pim_catalog.factory.product_template' => 'getPimCatalog_Factory_ProductTemplateService',
            'pim_catalog.factory.product_value' => 'getPimCatalog_Factory_ProductValueService',
            'pim_catalog.filter.chained' => 'getPimCatalog_Filter_ChainedService',
            'pim_catalog.helper.locale' => 'getPimCatalog_Helper_LocaleService',
            'pim_catalog.localization.factory.currency' => 'getPimCatalog_Localization_Factory_CurrencyService',
            'pim_catalog.localization.factory.date' => 'getPimCatalog_Localization_Factory_DateService',
            'pim_catalog.localization.factory.datetime' => 'getPimCatalog_Localization_Factory_DatetimeService',
            'pim_catalog.localization.factory.number' => 'getPimCatalog_Localization_Factory_NumberService',
            'pim_catalog.localization.localizer.converter' => 'getPimCatalog_Localization_Localizer_ConverterService',
            'pim_catalog.localization.localizer.date' => 'getPimCatalog_Localization_Localizer_DateService',
            'pim_catalog.localization.localizer.metric' => 'getPimCatalog_Localization_Localizer_MetricService',
            'pim_catalog.localization.localizer.number' => 'getPimCatalog_Localization_Localizer_NumberService',
            'pim_catalog.localization.localizer.price' => 'getPimCatalog_Localization_Localizer_PriceService',
            'pim_catalog.localization.localizer.registry' => 'getPimCatalog_Localization_Localizer_RegistryService',
            'pim_catalog.localization.presenter.date' => 'getPimCatalog_Localization_Presenter_DateService',
            'pim_catalog.localization.presenter.date.attribute_option' => 'getPimCatalog_Localization_Presenter_Date_AttributeOptionService',
            'pim_catalog.localization.presenter.datetime' => 'getPimCatalog_Localization_Presenter_DatetimeService',
            'pim_catalog.localization.presenter.metric' => 'getPimCatalog_Localization_Presenter_MetricService',
            'pim_catalog.localization.presenter.number' => 'getPimCatalog_Localization_Presenter_NumberService',
            'pim_catalog.localization.presenter.number.attribute_option' => 'getPimCatalog_Localization_Presenter_Number_AttributeOptionService',
            'pim_catalog.localization.presenter.prices' => 'getPimCatalog_Localization_Presenter_PricesService',
            'pim_catalog.localization.presenter.product_field.boolean' => 'getPimCatalog_Localization_Presenter_ProductField_BooleanService',
            'pim_catalog.localization.presenter.product_value.boolean' => 'getPimCatalog_Localization_Presenter_ProductValue_BooleanService',
            'pim_catalog.localization.presenter.registry' => 'getPimCatalog_Localization_Presenter_RegistryService',
            'pim_catalog.localization.translator.proxy' => 'getPimCatalog_Localization_Translator_ProxyService',
            'pim_catalog.localization.validator.constraint.date_format' => 'getPimCatalog_Localization_Validator_Constraint_DateFormatService',
            'pim_catalog.localization.validator.constraint.number_format' => 'getPimCatalog_Localization_Validator_Constraint_NumberFormatService',
            'pim_catalog.manager.attribute_group' => 'getPimCatalog_Manager_AttributeGroupService',
            'pim_catalog.manager.attribute_options_sorter' => 'getPimCatalog_Manager_AttributeOptionsSorterService',
            'pim_catalog.manager.completeness' => 'getPimCatalog_Manager_CompletenessService',
            'pim_catalog.manager.product_template_media' => 'getPimCatalog_Manager_ProductTemplateMediaService',
            'pim_catalog.normalizer.standard.association_type' => 'getPimCatalog_Normalizer_Standard_AssociationTypeService',
            'pim_catalog.normalizer.standard.attribute' => 'getPimCatalog_Normalizer_Standard_AttributeService',
            'pim_catalog.normalizer.standard.attribute_group' => 'getPimCatalog_Normalizer_Standard_AttributeGroupService',
            'pim_catalog.normalizer.standard.attribute_option' => 'getPimCatalog_Normalizer_Standard_AttributeOptionService',
            'pim_catalog.normalizer.standard.category' => 'getPimCatalog_Normalizer_Standard_CategoryService',
            'pim_catalog.normalizer.standard.channel' => 'getPimCatalog_Normalizer_Standard_ChannelService',
            'pim_catalog.normalizer.standard.currency' => 'getPimCatalog_Normalizer_Standard_CurrencyService',
            'pim_catalog.normalizer.standard.datetime' => 'getPimCatalog_Normalizer_Standard_DatetimeService',
            'pim_catalog.normalizer.standard.family' => 'getPimCatalog_Normalizer_Standard_FamilyService',
            'pim_catalog.normalizer.standard.file' => 'getPimCatalog_Normalizer_Standard_FileService',
            'pim_catalog.normalizer.standard.group' => 'getPimCatalog_Normalizer_Standard_GroupService',
            'pim_catalog.normalizer.standard.group_type' => 'getPimCatalog_Normalizer_Standard_GroupTypeService',
            'pim_catalog.normalizer.standard.job_instance' => 'getPimCatalog_Normalizer_Standard_JobInstanceService',
            'pim_catalog.normalizer.standard.locale' => 'getPimCatalog_Normalizer_Standard_LocaleService',
            'pim_catalog.normalizer.standard.product' => 'getPimCatalog_Normalizer_Standard_ProductService',
            'pim_catalog.normalizer.standard.product.associations' => 'getPimCatalog_Normalizer_Standard_Product_AssociationsService',
            'pim_catalog.normalizer.standard.product.metric' => 'getPimCatalog_Normalizer_Standard_Product_MetricService',
            'pim_catalog.normalizer.standard.product.price' => 'getPimCatalog_Normalizer_Standard_Product_PriceService',
            'pim_catalog.normalizer.standard.product.product_value' => 'getPimCatalog_Normalizer_Standard_Product_ProductValueService',
            'pim_catalog.normalizer.standard.product.product_values' => 'getPimCatalog_Normalizer_Standard_Product_ProductValuesService',
            'pim_catalog.normalizer.standard.product.properties' => 'getPimCatalog_Normalizer_Standard_Product_PropertiesService',
            'pim_catalog.normalizer.standard.proxy_group' => 'getPimCatalog_Normalizer_Standard_ProxyGroupService',
            'pim_catalog.normalizer.standard.translation' => 'getPimCatalog_Normalizer_Standard_TranslationService',
            'pim_catalog.normalizer.standard.variant_group' => 'getPimCatalog_Normalizer_Standard_VariantGroupService',
            'pim_catalog.query.filter.attribute_dumper' => 'getPimCatalog_Query_Filter_AttributeDumperService',
            'pim_catalog.query.filter.field_dumper' => 'getPimCatalog_Query_Filter_FieldDumperService',
            'pim_catalog.query.filter.registry' => 'getPimCatalog_Query_Filter_RegistryService',
            'pim_catalog.query.product_query_builder_factory' => 'getPimCatalog_Query_ProductQueryBuilderFactoryService',
            'pim_catalog.query.sorter.registry' => 'getPimCatalog_Query_Sorter_RegistryService',
            'pim_catalog.registry.attribute_type' => 'getPimCatalog_Registry_AttributeTypeService',
            'pim_catalog.remover.association_type' => 'getPimCatalog_Remover_AssociationTypeService',
            'pim_catalog.remover.attribute' => 'getPimCatalog_Remover_AttributeService',
            'pim_catalog.remover.attribute_group' => 'getPimCatalog_Remover_AttributeGroupService',
            'pim_catalog.remover.attribute_option' => 'getPimCatalog_Remover_AttributeOptionService',
            'pim_catalog.remover.base_options_resolver' => 'getPimCatalog_Remover_BaseOptionsResolverService',
            'pim_catalog.remover.category' => 'getPimCatalog_Remover_CategoryService',
            'pim_catalog.remover.channel' => 'getPimCatalog_Remover_ChannelService',
            'pim_catalog.remover.family' => 'getPimCatalog_Remover_FamilyService',
            'pim_catalog.remover.group' => 'getPimCatalog_Remover_GroupService',
            'pim_catalog.remover.group_type' => 'getPimCatalog_Remover_GroupTypeService',
            'pim_catalog.remover.product' => 'getPimCatalog_Remover_ProductService',
            'pim_catalog.repository.association' => 'getPimCatalog_Repository_AssociationService',
            'pim_catalog.repository.association_type' => 'getPimCatalog_Repository_AssociationTypeService',
            'pim_catalog.repository.attribute' => 'getPimCatalog_Repository_AttributeService',
            'pim_catalog.repository.attribute_group' => 'getPimCatalog_Repository_AttributeGroupService',
            'pim_catalog.repository.attribute_option' => 'getPimCatalog_Repository_AttributeOptionService',
            'pim_catalog.repository.attribute_requirement' => 'getPimCatalog_Repository_AttributeRequirementService',
            'pim_catalog.repository.cached_attribute' => 'getPimCatalog_Repository_CachedAttributeService',
            'pim_catalog.repository.cached_attribute_option' => 'getPimCatalog_Repository_CachedAttributeOptionService',
            'pim_catalog.repository.cached_category' => 'getPimCatalog_Repository_CachedCategoryService',
            'pim_catalog.repository.cached_channel' => 'getPimCatalog_Repository_CachedChannelService',
            'pim_catalog.repository.cached_family' => 'getPimCatalog_Repository_CachedFamilyService',
            'pim_catalog.repository.cached_locale' => 'getPimCatalog_Repository_CachedLocaleService',
            'pim_catalog.repository.category' => 'getPimCatalog_Repository_CategoryService',
            'pim_catalog.repository.channel' => 'getPimCatalog_Repository_ChannelService',
            'pim_catalog.repository.completeness' => 'getPimCatalog_Repository_CompletenessService',
            'pim_catalog.repository.currency' => 'getPimCatalog_Repository_CurrencyService',
            'pim_catalog.repository.family' => 'getPimCatalog_Repository_FamilyService',
            'pim_catalog.repository.group' => 'getPimCatalog_Repository_GroupService',
            'pim_catalog.repository.group_type' => 'getPimCatalog_Repository_GroupTypeService',
            'pim_catalog.repository.locale' => 'getPimCatalog_Repository_LocaleService',
            'pim_catalog.repository.product' => 'getPimCatalog_Repository_ProductService',
            'pim_catalog.repository.product_category' => 'getPimCatalog_Repository_ProductCategoryService',
            'pim_catalog.repository.product_mass_action' => 'getPimCatalog_Repository_ProductMassActionService',
            'pim_catalog.repository.product_template' => 'getPimCatalog_Repository_ProductTemplateService',
            'pim_catalog.repository.product_value_counter' => 'getPimCatalog_Repository_ProductValueCounterService',
            'pim_catalog.resolver.attribute_values' => 'getPimCatalog_Resolver_AttributeValuesService',
            'pim_catalog.resolver.fqcn' => 'getPimCatalog_Resolver_FqcnService',
            'pim_catalog.resolver.variant_group_attributes' => 'getPimCatalog_Resolver_VariantGroupAttributesService',
            'pim_catalog.saver.association_type' => 'getPimCatalog_Saver_AssociationTypeService',
            'pim_catalog.saver.attribute' => 'getPimCatalog_Saver_AttributeService',
            'pim_catalog.saver.attribute_group' => 'getPimCatalog_Saver_AttributeGroupService',
            'pim_catalog.saver.attribute_option' => 'getPimCatalog_Saver_AttributeOptionService',
            'pim_catalog.saver.category' => 'getPimCatalog_Saver_CategoryService',
            'pim_catalog.saver.channel' => 'getPimCatalog_Saver_ChannelService',
            'pim_catalog.saver.currency' => 'getPimCatalog_Saver_CurrencyService',
            'pim_catalog.saver.family' => 'getPimCatalog_Saver_FamilyService',
            'pim_catalog.saver.group' => 'getPimCatalog_Saver_GroupService',
            'pim_catalog.saver.group_options_resolver' => 'getPimCatalog_Saver_GroupOptionsResolverService',
            'pim_catalog.saver.group_type' => 'getPimCatalog_Saver_GroupTypeService',
            'pim_catalog.saver.locale' => 'getPimCatalog_Saver_LocaleService',
            'pim_catalog.saver.product' => 'getPimCatalog_Saver_ProductService',
            'pim_catalog.updater.adder.association_field' => 'getPimCatalog_Updater_Adder_AssociationFieldService',
            'pim_catalog.updater.adder.category_field' => 'getPimCatalog_Updater_Adder_CategoryFieldService',
            'pim_catalog.updater.adder.group_field' => 'getPimCatalog_Updater_Adder_GroupFieldService',
            'pim_catalog.updater.adder.multiselect_value' => 'getPimCatalog_Updater_Adder_MultiselectValueService',
            'pim_catalog.updater.adder.price_collection_value' => 'getPimCatalog_Updater_Adder_PriceCollectionValueService',
            'pim_catalog.updater.adder.registry' => 'getPimCatalog_Updater_Adder_RegistryService',
            'pim_catalog.updater.association_type' => 'getPimCatalog_Updater_AssociationTypeService',
            'pim_catalog.updater.attribute' => 'getPimCatalog_Updater_AttributeService',
            'pim_catalog.updater.attribute_group' => 'getPimCatalog_Updater_AttributeGroupService',
            'pim_catalog.updater.attribute_option' => 'getPimCatalog_Updater_AttributeOptionService',
            'pim_catalog.updater.category_translatable' => 'getPimCatalog_Updater_CategoryTranslatableService',
            'pim_catalog.updater.channel' => 'getPimCatalog_Updater_ChannelService',
            'pim_catalog.updater.copier.registry' => 'getPimCatalog_Updater_Copier_RegistryService',
            'pim_catalog.updater.currency' => 'getPimCatalog_Updater_CurrencyService',
            'pim_catalog.updater.family' => 'getPimCatalog_Updater_FamilyService',
            'pim_catalog.updater.group' => 'getPimCatalog_Updater_GroupService',
            'pim_catalog.updater.group_type' => 'getPimCatalog_Updater_GroupTypeService',
            'pim_catalog.updater.locale' => 'getPimCatalog_Updater_LocaleService',
            'pim_catalog.updater.product' => 'getPimCatalog_Updater_ProductService',
            'pim_catalog.updater.product_property_adder' => 'getPimCatalog_Updater_ProductPropertyAdderService',
            'pim_catalog.updater.product_property_copier' => 'getPimCatalog_Updater_ProductPropertyCopierService',
            'pim_catalog.updater.product_property_remover' => 'getPimCatalog_Updater_ProductPropertyRemoverService',
            'pim_catalog.updater.product_property_setter' => 'getPimCatalog_Updater_ProductPropertySetterService',
            'pim_catalog.updater.product_template' => 'getPimCatalog_Updater_ProductTemplateService',
            'pim_catalog.updater.remover.category_field' => 'getPimCatalog_Updater_Remover_CategoryFieldService',
            'pim_catalog.updater.remover.group_field' => 'getPimCatalog_Updater_Remover_GroupFieldService',
            'pim_catalog.updater.remover.multiselect_value' => 'getPimCatalog_Updater_Remover_MultiselectValueService',
            'pim_catalog.updater.remover.price_collection_value' => 'getPimCatalog_Updater_Remover_PriceCollectionValueService',
            'pim_catalog.updater.remover.registry' => 'getPimCatalog_Updater_Remover_RegistryService',
            'pim_catalog.updater.setter.association_field' => 'getPimCatalog_Updater_Setter_AssociationFieldService',
            'pim_catalog.updater.setter.category_field' => 'getPimCatalog_Updater_Setter_CategoryFieldService',
            'pim_catalog.updater.setter.enabled_field' => 'getPimCatalog_Updater_Setter_EnabledFieldService',
            'pim_catalog.updater.setter.family_field' => 'getPimCatalog_Updater_Setter_FamilyFieldService',
            'pim_catalog.updater.setter.group_field' => 'getPimCatalog_Updater_Setter_GroupFieldService',
            'pim_catalog.updater.setter.registry' => 'getPimCatalog_Updater_Setter_RegistryService',
            'pim_catalog.updater.setter.variant_group_field' => 'getPimCatalog_Updater_Setter_VariantGroupFieldService',
            'pim_catalog.updater.variant_group' => 'getPimCatalog_Updater_VariantGroupService',
            'pim_catalog.validator.constraint.attribute_type_for_option' => 'getPimCatalog_Validator_Constraint_AttributeTypeForOptionService',
            'pim_catalog.validator.constraint.currency' => 'getPimCatalog_Validator_Constraint_CurrencyService',
            'pim_catalog.validator.constraint.family_requirements' => 'getPimCatalog_Validator_Constraint_FamilyRequirementsService',
            'pim_catalog.validator.constraint.has_variant_axes' => 'getPimCatalog_Validator_Constraint_HasVariantAxesService',
            'pim_catalog.validator.constraint.immutable' => 'getPimCatalog_Validator_Constraint_ImmutableService',
            'pim_catalog.validator.constraint.is_reference_data_configured' => 'getPimCatalog_Validator_Constraint_IsReferenceDataConfiguredService',
            'pim_catalog.validator.constraint.localizable_value' => 'getPimCatalog_Validator_Constraint_LocalizableValueService',
            'pim_catalog.validator.constraint.scopable_value' => 'getPimCatalog_Validator_Constraint_ScopableValueService',
            'pim_catalog.validator.constraint.single_identifier' => 'getPimCatalog_Validator_Constraint_SingleIdentifierService',
            'pim_catalog.validator.constraint.unique_value' => 'getPimCatalog_Validator_Constraint_UniqueValueService',
            'pim_catalog.validator.constraint.unique_variant_axis' => 'getPimCatalog_Validator_Constraint_UniqueVariantAxisService',
            'pim_catalog.validator.constraint.unique_variant_group' => 'getPimCatalog_Validator_Constraint_UniqueVariantGroupService',
            'pim_catalog.validator.constraint.unique_variant_group_type' => 'getPimCatalog_Validator_Constraint_UniqueVariantGroupTypeService',
            'pim_catalog.validator.constraint.valid_metric' => 'getPimCatalog_Validator_Constraint_ValidMetricService',
            'pim_catalog.validator.constraint.variant_group_axis' => 'getPimCatalog_Validator_Constraint_VariantGroupAxisService',
            'pim_catalog.validator.constraint.variant_group_values' => 'getPimCatalog_Validator_Constraint_VariantGroupValuesService',
            'pim_catalog.validator.constraint_guesser.chained_attribute' => 'getPimCatalog_Validator_ConstraintGuesser_ChainedAttributeService',
            'pim_catalog.validator.helper.attribute' => 'getPimCatalog_Validator_Helper_AttributeService',
            'pim_catalog.validator.product' => 'getPimCatalog_Validator_ProductService',
            'pim_catalog.validator.unique_value_set' => 'getPimCatalog_Validator_UniqueValueSetService',
            'pim_catalog.version_provider' => 'getPimCatalog_VersionProviderService',
            'pim_comment.builder.comment' => 'getPimComment_Builder_CommentService',
            'pim_comment.controller.comment' => 'getPimComment_Controller_CommentService',
            'pim_comment.form.attribute_group' => 'getPimComment_Form_AttributeGroupService',
            'pim_comment.form.type.comment' => 'getPimComment_Form_Type_CommentService',
            'pim_comment.normalizer.standard.comment' => 'getPimComment_Normalizer_Standard_CommentService',
            'pim_comment.remover.comment' => 'getPimComment_Remover_CommentService',
            'pim_comment.repository.comment' => 'getPimComment_Repository_CommentService',
            'pim_comment.saver.comment' => 'getPimComment_Saver_CommentService',
            'pim_connector.analyzer.product' => 'getPimConnector_Analyzer_ProductService',
            'pim_connector.archiver.archivable_file_writer_archiver' => 'getPimConnector_Archiver_ArchivableFileWriterArchiverService',
            'pim_connector.archiver.file_reader_archiver' => 'getPimConnector_Archiver_FileReaderArchiverService',
            'pim_connector.archiver.file_writer_archiver' => 'getPimConnector_Archiver_FileWriterArchiverService',
            'pim_connector.archiver.invalid_item_csv_writer' => 'getPimConnector_Archiver_InvalidItemCsvWriterService',
            'pim_connector.archiver.invalid_item_xlsx_writer' => 'getPimConnector_Archiver_InvalidItemXlsxWriterService',
            'pim_connector.array_converter.dummy' => 'getPimConnector_ArrayConverter_DummyService',
            'pim_connector.array_converter.flat_to_standard.association_type' => 'getPimConnector_ArrayConverter_FlatToStandard_AssociationTypeService',
            'pim_connector.array_converter.flat_to_standard.attribute' => 'getPimConnector_ArrayConverter_FlatToStandard_AttributeService',
            'pim_connector.array_converter.flat_to_standard.attribute_group' => 'getPimConnector_ArrayConverter_FlatToStandard_AttributeGroupService',
            'pim_connector.array_converter.flat_to_standard.attribute_option' => 'getPimConnector_ArrayConverter_FlatToStandard_AttributeOptionService',
            'pim_connector.array_converter.flat_to_standard.category' => 'getPimConnector_ArrayConverter_FlatToStandard_CategoryService',
            'pim_connector.array_converter.flat_to_standard.channel' => 'getPimConnector_ArrayConverter_FlatToStandard_ChannelService',
            'pim_connector.array_converter.flat_to_standard.currency' => 'getPimConnector_ArrayConverter_FlatToStandard_CurrencyService',
            'pim_connector.array_converter.flat_to_standard.family' => 'getPimConnector_ArrayConverter_FlatToStandard_FamilyService',
            'pim_connector.array_converter.flat_to_standard.group' => 'getPimConnector_ArrayConverter_FlatToStandard_GroupService',
            'pim_connector.array_converter.flat_to_standard.group_type' => 'getPimConnector_ArrayConverter_FlatToStandard_GroupTypeService',
            'pim_connector.array_converter.flat_to_standard.locale' => 'getPimConnector_ArrayConverter_FlatToStandard_LocaleService',
            'pim_connector.array_converter.flat_to_standard.product' => 'getPimConnector_ArrayConverter_FlatToStandard_ProductService',
            'pim_connector.array_converter.flat_to_standard.product.association_columns_resolver' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_AssociationColumnsResolverService',
            'pim_connector.array_converter.flat_to_standard.product.attribute_column_info_extractor' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_AttributeColumnInfoExtractorService',
            'pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_AttributeColumnsResolverService',
            'pim_connector.array_converter.flat_to_standard.product.columns_mapper' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ColumnsMapperService',
            'pim_connector.array_converter.flat_to_standard.product.columns_merger' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ColumnsMergerService',
            'pim_connector.array_converter.flat_to_standard.product.field_converter' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_FieldConverterService',
            'pim_connector.array_converter.flat_to_standard.product.field_splitter' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_FieldSplitterService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.abstract' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_AbstractService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.boolean' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_BooleanService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.date' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_DateService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.media' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MediaService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.metric' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MetricService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.multiselect' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MultiselectService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.number' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_NumberService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.price' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_PriceService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.registry' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_RegistryService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.simpleselect' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_SimpleselectService',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.text' => 'getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_TextService',
            'pim_connector.array_converter.flat_to_standard.product_association' => 'getPimConnector_ArrayConverter_FlatToStandard_ProductAssociationService',
            'pim_connector.array_converter.flat_to_standard.product_delocalized' => 'getPimConnector_ArrayConverter_FlatToStandard_ProductDelocalizedService',
            'pim_connector.array_converter.flat_to_standard.product_value' => 'getPimConnector_ArrayConverter_FlatToStandard_ProductValueService',
            'pim_connector.array_converter.flat_to_standard.user' => 'getPimConnector_ArrayConverter_FlatToStandard_UserService',
            'pim_connector.array_converter.flat_to_standard.user_group' => 'getPimConnector_ArrayConverter_FlatToStandard_UserGroupService',
            'pim_connector.array_converter.flat_to_standard.user_role' => 'getPimConnector_ArrayConverter_FlatToStandard_UserRoleService',
            'pim_connector.array_converter.flat_to_standard.variant_group' => 'getPimConnector_ArrayConverter_FlatToStandard_VariantGroupService',
            'pim_connector.array_converter.standard.job_instance' => 'getPimConnector_ArrayConverter_Standard_JobInstanceService',
            'pim_connector.array_converter.standard_to_flat.association_type' => 'getPimConnector_ArrayConverter_StandardToFlat_AssociationTypeService',
            'pim_connector.array_converter.standard_to_flat.attribute' => 'getPimConnector_ArrayConverter_StandardToFlat_AttributeService',
            'pim_connector.array_converter.standard_to_flat.attribute_group' => 'getPimConnector_ArrayConverter_StandardToFlat_AttributeGroupService',
            'pim_connector.array_converter.standard_to_flat.attribute_option' => 'getPimConnector_ArrayConverter_StandardToFlat_AttributeOptionService',
            'pim_connector.array_converter.standard_to_flat.category' => 'getPimConnector_ArrayConverter_StandardToFlat_CategoryService',
            'pim_connector.array_converter.standard_to_flat.channel' => 'getPimConnector_ArrayConverter_StandardToFlat_ChannelService',
            'pim_connector.array_converter.standard_to_flat.currency' => 'getPimConnector_ArrayConverter_StandardToFlat_CurrencyService',
            'pim_connector.array_converter.standard_to_flat.family' => 'getPimConnector_ArrayConverter_StandardToFlat_FamilyService',
            'pim_connector.array_converter.standard_to_flat.group' => 'getPimConnector_ArrayConverter_StandardToFlat_GroupService',
            'pim_connector.array_converter.standard_to_flat.group_type' => 'getPimConnector_ArrayConverter_StandardToFlat_GroupTypeService',
            'pim_connector.array_converter.standard_to_flat.locale' => 'getPimConnector_ArrayConverter_StandardToFlat_LocaleService',
            'pim_connector.array_converter.standard_to_flat.product' => 'getPimConnector_ArrayConverter_StandardToFlat_ProductService',
            'pim_connector.array_converter.standard_to_flat.product.product_value_converter' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ProductValueConverterService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.boolean' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_BooleanService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.date' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_DateService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.media' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MediaService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.metric' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MetricService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.multiselect' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MultiselectService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.price' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_PriceService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.registry' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_RegistryService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.simpleselect' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_SimpleselectService',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.text' => 'getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_TextService',
            'pim_connector.array_converter.standard_to_flat.product_localized' => 'getPimConnector_ArrayConverter_StandardToFlat_ProductLocalizedService',
            'pim_connector.array_converter.standard_to_flat.user' => 'getPimConnector_ArrayConverter_StandardToFlat_UserService',
            'pim_connector.array_converter.standard_to_flat.variant_group' => 'getPimConnector_ArrayConverter_StandardToFlat_VariantGroupService',
            'pim_connector.array_converter.standard_to_flat.variant_group_localized' => 'getPimConnector_ArrayConverter_StandardToFlat_VariantGroupLocalizedService',
            'pim_connector.array_convertor.checker.fields_requirement' => 'getPimConnector_ArrayConvertor_Checker_FieldsRequirementService',
            'pim_connector.event_listener.archivist' => 'getPimConnector_EventListener_ArchivistService',
            'pim_connector.event_listener.invalid_items_collector' => 'getPimConnector_EventListener_InvalidItemsCollectorService',
            'pim_connector.factory.flat_item_buffer' => 'getPimConnector_Factory_FlatItemBufferService',
            'pim_connector.factory.job_instance' => 'getPimConnector_Factory_JobInstanceService',
            'pim_connector.factory.zip_filesystem' => 'getPimConnector_Factory_ZipFilesystemService',
            'pim_connector.job.csv_association_type_export' => 'getPimConnector_Job_CsvAssociationTypeExportService',
            'pim_connector.job.csv_association_type_import' => 'getPimConnector_Job_CsvAssociationTypeImportService',
            'pim_connector.job.csv_attribute_export' => 'getPimConnector_Job_CsvAttributeExportService',
            'pim_connector.job.csv_attribute_group_export' => 'getPimConnector_Job_CsvAttributeGroupExportService',
            'pim_connector.job.csv_attribute_group_import' => 'getPimConnector_Job_CsvAttributeGroupImportService',
            'pim_connector.job.csv_attribute_import' => 'getPimConnector_Job_CsvAttributeImportService',
            'pim_connector.job.csv_attribute_option_export' => 'getPimConnector_Job_CsvAttributeOptionExportService',
            'pim_connector.job.csv_attribute_option_import' => 'getPimConnector_Job_CsvAttributeOptionImportService',
            'pim_connector.job.csv_category_export' => 'getPimConnector_Job_CsvCategoryExportService',
            'pim_connector.job.csv_category_import' => 'getPimConnector_Job_CsvCategoryImportService',
            'pim_connector.job.csv_channel_export' => 'getPimConnector_Job_CsvChannelExportService',
            'pim_connector.job.csv_channel_import' => 'getPimConnector_Job_CsvChannelImportService',
            'pim_connector.job.csv_currency_export' => 'getPimConnector_Job_CsvCurrencyExportService',
            'pim_connector.job.csv_currency_import' => 'getPimConnector_Job_CsvCurrencyImportService',
            'pim_connector.job.csv_family_export' => 'getPimConnector_Job_CsvFamilyExportService',
            'pim_connector.job.csv_family_import' => 'getPimConnector_Job_CsvFamilyImportService',
            'pim_connector.job.csv_group_export' => 'getPimConnector_Job_CsvGroupExportService',
            'pim_connector.job.csv_group_import' => 'getPimConnector_Job_CsvGroupImportService',
            'pim_connector.job.csv_group_type_export' => 'getPimConnector_Job_CsvGroupTypeExportService',
            'pim_connector.job.csv_group_type_import' => 'getPimConnector_Job_CsvGroupTypeImportService',
            'pim_connector.job.csv_locale_export' => 'getPimConnector_Job_CsvLocaleExportService',
            'pim_connector.job.csv_locale_import' => 'getPimConnector_Job_CsvLocaleImportService',
            'pim_connector.job.csv_product_export' => 'getPimConnector_Job_CsvProductExportService',
            'pim_connector.job.csv_product_import' => 'getPimConnector_Job_CsvProductImportService',
            'pim_connector.job.csv_variant_group_export' => 'getPimConnector_Job_CsvVariantGroupExportService',
            'pim_connector.job.csv_variant_group_import' => 'getPimConnector_Job_CsvVariantGroupImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_csv_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_csv_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleCsvExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleCsvImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleXlsxExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleXlsxImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupCsvExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupCsvImportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_export' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupXlsxExportService',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_import' => 'getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupXlsxImportService',
            'pim_connector.job.job_parameters.default_values_provider.product_csv_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductCsvExportService',
            'pim_connector.job.job_parameters.default_values_provider.product_csv_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductCsvImportService',
            'pim_connector.job.job_parameters.default_values_provider.product_xlsx_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductXlsxImportService',
            'pim_connector.job.job_parameters.default_values_provider.product_xslx_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductXslxExportService',
            'pim_connector.job.job_parameters.default_values_provider.simple_csv_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleCsvExportService',
            'pim_connector.job.job_parameters.default_values_provider.simple_csv_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleCsvImportService',
            'pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleXlsxExportService',
            'pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleXlsxImportService',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_csv_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupCsvExportService',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_csv_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupCsvImportService',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_export' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupXlsxExportService',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_import' => 'getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupXlsxImportService',
            'pim_connector.job.xlsx_association_type_export' => 'getPimConnector_Job_XlsxAssociationTypeExportService',
            'pim_connector.job.xlsx_association_type_import' => 'getPimConnector_Job_XlsxAssociationTypeImportService',
            'pim_connector.job.xlsx_attribute_export' => 'getPimConnector_Job_XlsxAttributeExportService',
            'pim_connector.job.xlsx_attribute_group_export' => 'getPimConnector_Job_XlsxAttributeGroupExportService',
            'pim_connector.job.xlsx_attribute_group_import' => 'getPimConnector_Job_XlsxAttributeGroupImportService',
            'pim_connector.job.xlsx_attribute_import' => 'getPimConnector_Job_XlsxAttributeImportService',
            'pim_connector.job.xlsx_attribute_option_export' => 'getPimConnector_Job_XlsxAttributeOptionExportService',
            'pim_connector.job.xlsx_attribute_option_import' => 'getPimConnector_Job_XlsxAttributeOptionImportService',
            'pim_connector.job.xlsx_category_export' => 'getPimConnector_Job_XlsxCategoryExportService',
            'pim_connector.job.xlsx_category_import' => 'getPimConnector_Job_XlsxCategoryImportService',
            'pim_connector.job.xlsx_channel_export' => 'getPimConnector_Job_XlsxChannelExportService',
            'pim_connector.job.xlsx_channel_import' => 'getPimConnector_Job_XlsxChannelImportService',
            'pim_connector.job.xlsx_currency_export' => 'getPimConnector_Job_XlsxCurrencyExportService',
            'pim_connector.job.xlsx_currency_import' => 'getPimConnector_Job_XlsxCurrencyImportService',
            'pim_connector.job.xlsx_family_import' => 'getPimConnector_Job_XlsxFamilyImportService',
            'pim_connector.job.xlsx_group_export' => 'getPimConnector_Job_XlsxGroupExportService',
            'pim_connector.job.xlsx_group_import' => 'getPimConnector_Job_XlsxGroupImportService',
            'pim_connector.job.xlsx_group_type_export' => 'getPimConnector_Job_XlsxGroupTypeExportService',
            'pim_connector.job.xlsx_group_type_import' => 'getPimConnector_Job_XlsxGroupTypeImportService',
            'pim_connector.job.xlsx_locale_export' => 'getPimConnector_Job_XlsxLocaleExportService',
            'pim_connector.job.xlsx_locale_import' => 'getPimConnector_Job_XlsxLocaleImportService',
            'pim_connector.job.xlsx_product_export' => 'getPimConnector_Job_XlsxProductExportService',
            'pim_connector.job.xlsx_product_import' => 'getPimConnector_Job_XlsxProductImportService',
            'pim_connector.job.xlsx_variant_group_export' => 'getPimConnector_Job_XlsxVariantGroupExportService',
            'pim_connector.job.xlsx_variant_group_import' => 'getPimConnector_Job_XlsxVariantGroupImportService',
            'pim_connector.job_name.xlsx_family_export' => 'getPimConnector_JobName_XlsxFamilyExportService',
            'pim_connector.processor.bulk_media_fetcher' => 'getPimConnector_Processor_BulkMediaFetcherService',
            'pim_connector.processor.denormalization.association_type' => 'getPimConnector_Processor_Denormalization_AssociationTypeService',
            'pim_connector.processor.denormalization.attribute' => 'getPimConnector_Processor_Denormalization_AttributeService',
            'pim_connector.processor.denormalization.attribute_group' => 'getPimConnector_Processor_Denormalization_AttributeGroupService',
            'pim_connector.processor.denormalization.attribute_option' => 'getPimConnector_Processor_Denormalization_AttributeOptionService',
            'pim_connector.processor.denormalization.category' => 'getPimConnector_Processor_Denormalization_CategoryService',
            'pim_connector.processor.denormalization.channel' => 'getPimConnector_Processor_Denormalization_ChannelService',
            'pim_connector.processor.denormalization.currency' => 'getPimConnector_Processor_Denormalization_CurrencyService',
            'pim_connector.processor.denormalization.family' => 'getPimConnector_Processor_Denormalization_FamilyService',
            'pim_connector.processor.denormalization.group' => 'getPimConnector_Processor_Denormalization_GroupService',
            'pim_connector.processor.denormalization.group_type' => 'getPimConnector_Processor_Denormalization_GroupTypeService',
            'pim_connector.processor.denormalization.job_instance' => 'getPimConnector_Processor_Denormalization_JobInstanceService',
            'pim_connector.processor.denormalization.locale' => 'getPimConnector_Processor_Denormalization_LocaleService',
            'pim_connector.processor.denormalization.product' => 'getPimConnector_Processor_Denormalization_ProductService',
            'pim_connector.processor.denormalization.product_association' => 'getPimConnector_Processor_Denormalization_ProductAssociationService',
            'pim_connector.processor.denormalization.user' => 'getPimConnector_Processor_Denormalization_UserService',
            'pim_connector.processor.denormalization.user_group' => 'getPimConnector_Processor_Denormalization_UserGroupService',
            'pim_connector.processor.denormalization.user_role' => 'getPimConnector_Processor_Denormalization_UserRoleService',
            'pim_connector.processor.denormalization.variant_group' => 'getPimConnector_Processor_Denormalization_VariantGroupService',
            'pim_connector.processor.dummy_item' => 'getPimConnector_Processor_DummyItemService',
            'pim_connector.processor.normalization.association_type' => 'getPimConnector_Processor_Normalization_AssociationTypeService',
            'pim_connector.processor.normalization.attribute' => 'getPimConnector_Processor_Normalization_AttributeService',
            'pim_connector.processor.normalization.attribute_group' => 'getPimConnector_Processor_Normalization_AttributeGroupService',
            'pim_connector.processor.normalization.attribute_option' => 'getPimConnector_Processor_Normalization_AttributeOptionService',
            'pim_connector.processor.normalization.category' => 'getPimConnector_Processor_Normalization_CategoryService',
            'pim_connector.processor.normalization.channel' => 'getPimConnector_Processor_Normalization_ChannelService',
            'pim_connector.processor.normalization.currency' => 'getPimConnector_Processor_Normalization_CurrencyService',
            'pim_connector.processor.normalization.family' => 'getPimConnector_Processor_Normalization_FamilyService',
            'pim_connector.processor.normalization.group' => 'getPimConnector_Processor_Normalization_GroupService',
            'pim_connector.processor.normalization.group_type' => 'getPimConnector_Processor_Normalization_GroupTypeService',
            'pim_connector.processor.normalization.locale' => 'getPimConnector_Processor_Normalization_LocaleService',
            'pim_connector.processor.normalization.product' => 'getPimConnector_Processor_Normalization_ProductService',
            'pim_connector.processor.normalization.variant_group' => 'getPimConnector_Processor_Normalization_VariantGroupService',
            'pim_connector.reader.database.association_type' => 'getPimConnector_Reader_Database_AssociationTypeService',
            'pim_connector.reader.database.attribute' => 'getPimConnector_Reader_Database_AttributeService',
            'pim_connector.reader.database.attribute_group' => 'getPimConnector_Reader_Database_AttributeGroupService',
            'pim_connector.reader.database.attribute_option' => 'getPimConnector_Reader_Database_AttributeOptionService',
            'pim_connector.reader.database.category' => 'getPimConnector_Reader_Database_CategoryService',
            'pim_connector.reader.database.channel' => 'getPimConnector_Reader_Database_ChannelService',
            'pim_connector.reader.database.currency' => 'getPimConnector_Reader_Database_CurrencyService',
            'pim_connector.reader.database.family' => 'getPimConnector_Reader_Database_FamilyService',
            'pim_connector.reader.database.group' => 'getPimConnector_Reader_Database_GroupService',
            'pim_connector.reader.database.group_type' => 'getPimConnector_Reader_Database_GroupTypeService',
            'pim_connector.reader.database.locale' => 'getPimConnector_Reader_Database_LocaleService',
            'pim_connector.reader.database.product' => 'getPimConnector_Reader_Database_ProductService',
            'pim_connector.reader.database.variant_group' => 'getPimConnector_Reader_Database_VariantGroupService',
            'pim_connector.reader.dummy_item' => 'getPimConnector_Reader_DummyItemService',
            'pim_connector.reader.file.csv_association' => 'getPimConnector_Reader_File_CsvAssociationService',
            'pim_connector.reader.file.csv_association_type' => 'getPimConnector_Reader_File_CsvAssociationTypeService',
            'pim_connector.reader.file.csv_attribute' => 'getPimConnector_Reader_File_CsvAttributeService',
            'pim_connector.reader.file.csv_attribute_group' => 'getPimConnector_Reader_File_CsvAttributeGroupService',
            'pim_connector.reader.file.csv_attribute_option' => 'getPimConnector_Reader_File_CsvAttributeOptionService',
            'pim_connector.reader.file.csv_category' => 'getPimConnector_Reader_File_CsvCategoryService',
            'pim_connector.reader.file.csv_channel' => 'getPimConnector_Reader_File_CsvChannelService',
            'pim_connector.reader.file.csv_currency' => 'getPimConnector_Reader_File_CsvCurrencyService',
            'pim_connector.reader.file.csv_family' => 'getPimConnector_Reader_File_CsvFamilyService',
            'pim_connector.reader.file.csv_group' => 'getPimConnector_Reader_File_CsvGroupService',
            'pim_connector.reader.file.csv_group_type' => 'getPimConnector_Reader_File_CsvGroupTypeService',
            'pim_connector.reader.file.csv_iterator_factory' => 'getPimConnector_Reader_File_CsvIteratorFactoryService',
            'pim_connector.reader.file.csv_locale' => 'getPimConnector_Reader_File_CsvLocaleService',
            'pim_connector.reader.file.csv_product' => 'getPimConnector_Reader_File_CsvProductService',
            'pim_connector.reader.file.csv_user' => 'getPimConnector_Reader_File_CsvUserService',
            'pim_connector.reader.file.csv_user_group' => 'getPimConnector_Reader_File_CsvUserGroupService',
            'pim_connector.reader.file.csv_user_role' => 'getPimConnector_Reader_File_CsvUserRoleService',
            'pim_connector.reader.file.csv_variant_group' => 'getPimConnector_Reader_File_CsvVariantGroupService',
            'pim_connector.reader.file.media_path_transformer' => 'getPimConnector_Reader_File_MediaPathTransformerService',
            'pim_connector.reader.file.xlsx' => 'getPimConnector_Reader_File_XlsxService',
            'pim_connector.reader.file.xlsx_association' => 'getPimConnector_Reader_File_XlsxAssociationService',
            'pim_connector.reader.file.xlsx_association_type' => 'getPimConnector_Reader_File_XlsxAssociationTypeService',
            'pim_connector.reader.file.xlsx_attribute' => 'getPimConnector_Reader_File_XlsxAttributeService',
            'pim_connector.reader.file.xlsx_attribute_group' => 'getPimConnector_Reader_File_XlsxAttributeGroupService',
            'pim_connector.reader.file.xlsx_attribute_option' => 'getPimConnector_Reader_File_XlsxAttributeOptionService',
            'pim_connector.reader.file.xlsx_category' => 'getPimConnector_Reader_File_XlsxCategoryService',
            'pim_connector.reader.file.xlsx_channel' => 'getPimConnector_Reader_File_XlsxChannelService',
            'pim_connector.reader.file.xlsx_currency' => 'getPimConnector_Reader_File_XlsxCurrencyService',
            'pim_connector.reader.file.xlsx_family' => 'getPimConnector_Reader_File_XlsxFamilyService',
            'pim_connector.reader.file.xlsx_group' => 'getPimConnector_Reader_File_XlsxGroupService',
            'pim_connector.reader.file.xlsx_group_type' => 'getPimConnector_Reader_File_XlsxGroupTypeService',
            'pim_connector.reader.file.xlsx_iterator_factory' => 'getPimConnector_Reader_File_XlsxIteratorFactoryService',
            'pim_connector.reader.file.xlsx_locale' => 'getPimConnector_Reader_File_XlsxLocaleService',
            'pim_connector.reader.file.xlsx_product' => 'getPimConnector_Reader_File_XlsxProductService',
            'pim_connector.reader.file.xlsx_variant_group' => 'getPimConnector_Reader_File_XlsxVariantGroupService',
            'pim_connector.reader.file.yaml' => 'getPimConnector_Reader_File_YamlService',
            'pim_connector.reader.file.yaml_job_instance' => 'getPimConnector_Reader_File_YamlJobInstanceService',
            'pim_connector.step.charset_validator' => 'getPimConnector_Step_CharsetValidatorService',
            'pim_connector.step.csv_association_type.export' => 'getPimConnector_Step_CsvAssociationType_ExportService',
            'pim_connector.step.csv_association_type.import' => 'getPimConnector_Step_CsvAssociationType_ImportService',
            'pim_connector.step.csv_attribute.export' => 'getPimConnector_Step_CsvAttribute_ExportService',
            'pim_connector.step.csv_attribute.import' => 'getPimConnector_Step_CsvAttribute_ImportService',
            'pim_connector.step.csv_attribute_group_export.export' => 'getPimConnector_Step_CsvAttributeGroupExport_ExportService',
            'pim_connector.step.csv_attribute_group_import.import' => 'getPimConnector_Step_CsvAttributeGroupImport_ImportService',
            'pim_connector.step.csv_attribute_option.export' => 'getPimConnector_Step_CsvAttributeOption_ExportService',
            'pim_connector.step.csv_attribute_option.import' => 'getPimConnector_Step_CsvAttributeOption_ImportService',
            'pim_connector.step.csv_category.export' => 'getPimConnector_Step_CsvCategory_ExportService',
            'pim_connector.step.csv_category.import' => 'getPimConnector_Step_CsvCategory_ImportService',
            'pim_connector.step.csv_channel_export.export' => 'getPimConnector_Step_CsvChannelExport_ExportService',
            'pim_connector.step.csv_channel_import.import' => 'getPimConnector_Step_CsvChannelImport_ImportService',
            'pim_connector.step.csv_currency_export.export' => 'getPimConnector_Step_CsvCurrencyExport_ExportService',
            'pim_connector.step.csv_currency_import.import' => 'getPimConnector_Step_CsvCurrencyImport_ImportService',
            'pim_connector.step.csv_family.export' => 'getPimConnector_Step_CsvFamily_ExportService',
            'pim_connector.step.csv_family.import' => 'getPimConnector_Step_CsvFamily_ImportService',
            'pim_connector.step.csv_group.export' => 'getPimConnector_Step_CsvGroup_ExportService',
            'pim_connector.step.csv_group.import' => 'getPimConnector_Step_CsvGroup_ImportService',
            'pim_connector.step.csv_group_type_export.export' => 'getPimConnector_Step_CsvGroupTypeExport_ExportService',
            'pim_connector.step.csv_group_type_import.import' => 'getPimConnector_Step_CsvGroupTypeImport_ImportService',
            'pim_connector.step.csv_locale_export.export' => 'getPimConnector_Step_CsvLocaleExport_ExportService',
            'pim_connector.step.csv_locale_import.import' => 'getPimConnector_Step_CsvLocaleImport_ImportService',
            'pim_connector.step.csv_product.export' => 'getPimConnector_Step_CsvProduct_ExportService',
            'pim_connector.step.csv_product.import' => 'getPimConnector_Step_CsvProduct_ImportService',
            'pim_connector.step.csv_product.import_associations' => 'getPimConnector_Step_CsvProduct_ImportAssociationsService',
            'pim_connector.step.csv_variant_group.export' => 'getPimConnector_Step_CsvVariantGroup_ExportService',
            'pim_connector.step.csv_variant_group.import' => 'getPimConnector_Step_CsvVariantGroup_ImportService',
            'pim_connector.step.xlsx_association_type.export' => 'getPimConnector_Step_XlsxAssociationType_ExportService',
            'pim_connector.step.xlsx_association_type.import' => 'getPimConnector_Step_XlsxAssociationType_ImportService',
            'pim_connector.step.xlsx_attribute.export' => 'getPimConnector_Step_XlsxAttribute_ExportService',
            'pim_connector.step.xlsx_attribute.import' => 'getPimConnector_Step_XlsxAttribute_ImportService',
            'pim_connector.step.xlsx_attribute_group_export.export' => 'getPimConnector_Step_XlsxAttributeGroupExport_ExportService',
            'pim_connector.step.xlsx_attribute_group_import.import' => 'getPimConnector_Step_XlsxAttributeGroupImport_ImportService',
            'pim_connector.step.xlsx_attribute_option.export' => 'getPimConnector_Step_XlsxAttributeOption_ExportService',
            'pim_connector.step.xlsx_attribute_option.import' => 'getPimConnector_Step_XlsxAttributeOption_ImportService',
            'pim_connector.step.xlsx_category.export' => 'getPimConnector_Step_XlsxCategory_ExportService',
            'pim_connector.step.xlsx_category.import' => 'getPimConnector_Step_XlsxCategory_ImportService',
            'pim_connector.step.xlsx_channel_export.export' => 'getPimConnector_Step_XlsxChannelExport_ExportService',
            'pim_connector.step.xlsx_channel_import.import' => 'getPimConnector_Step_XlsxChannelImport_ImportService',
            'pim_connector.step.xlsx_currency_export.export' => 'getPimConnector_Step_XlsxCurrencyExport_ExportService',
            'pim_connector.step.xlsx_currency_import.import' => 'getPimConnector_Step_XlsxCurrencyImport_ImportService',
            'pim_connector.step.xlsx_family.export' => 'getPimConnector_Step_XlsxFamily_ExportService',
            'pim_connector.step.xlsx_family.import' => 'getPimConnector_Step_XlsxFamily_ImportService',
            'pim_connector.step.xlsx_group.export' => 'getPimConnector_Step_XlsxGroup_ExportService',
            'pim_connector.step.xlsx_group.import' => 'getPimConnector_Step_XlsxGroup_ImportService',
            'pim_connector.step.xlsx_group_type_export.export' => 'getPimConnector_Step_XlsxGroupTypeExport_ExportService',
            'pim_connector.step.xlsx_group_type_import.import' => 'getPimConnector_Step_XlsxGroupTypeImport_ImportService',
            'pim_connector.step.xlsx_locale_export.export' => 'getPimConnector_Step_XlsxLocaleExport_ExportService',
            'pim_connector.step.xlsx_locale_import.import' => 'getPimConnector_Step_XlsxLocaleImport_ImportService',
            'pim_connector.step.xlsx_product.export' => 'getPimConnector_Step_XlsxProduct_ExportService',
            'pim_connector.step.xlsx_product.import' => 'getPimConnector_Step_XlsxProduct_ImportService',
            'pim_connector.step.xlsx_product.import_associations' => 'getPimConnector_Step_XlsxProduct_ImportAssociationsService',
            'pim_connector.step.xlsx_variant_group.export' => 'getPimConnector_Step_XlsxVariantGroup_ExportService',
            'pim_connector.step.xlsx_variant_group.import' => 'getPimConnector_Step_XlsxVariantGroup_ImportService',
            'pim_connector.validator.constraints.channel_validator' => 'getPimConnector_Validator_Constraints_ChannelValidatorService',
            'pim_connector.validator.item.charset_validator' => 'getPimConnector_Validator_Item_CharsetValidatorService',
            'pim_connector.writer.database.association_type' => 'getPimConnector_Writer_Database_AssociationTypeService',
            'pim_connector.writer.database.attribute' => 'getPimConnector_Writer_Database_AttributeService',
            'pim_connector.writer.database.attribute_group' => 'getPimConnector_Writer_Database_AttributeGroupService',
            'pim_connector.writer.database.attribute_option' => 'getPimConnector_Writer_Database_AttributeOptionService',
            'pim_connector.writer.database.category' => 'getPimConnector_Writer_Database_CategoryService',
            'pim_connector.writer.database.channel' => 'getPimConnector_Writer_Database_ChannelService',
            'pim_connector.writer.database.currency' => 'getPimConnector_Writer_Database_CurrencyService',
            'pim_connector.writer.database.family' => 'getPimConnector_Writer_Database_FamilyService',
            'pim_connector.writer.database.group' => 'getPimConnector_Writer_Database_GroupService',
            'pim_connector.writer.database.group_type' => 'getPimConnector_Writer_Database_GroupTypeService',
            'pim_connector.writer.database.job_instance' => 'getPimConnector_Writer_Database_JobInstanceService',
            'pim_connector.writer.database.locale' => 'getPimConnector_Writer_Database_LocaleService',
            'pim_connector.writer.database.product' => 'getPimConnector_Writer_Database_ProductService',
            'pim_connector.writer.database.product_association' => 'getPimConnector_Writer_Database_ProductAssociationService',
            'pim_connector.writer.database.user' => 'getPimConnector_Writer_Database_UserService',
            'pim_connector.writer.database.user_group' => 'getPimConnector_Writer_Database_UserGroupService',
            'pim_connector.writer.database.user_role' => 'getPimConnector_Writer_Database_UserRoleService',
            'pim_connector.writer.database.variant_group' => 'getPimConnector_Writer_Database_VariantGroupService',
            'pim_connector.writer.dummy_item' => 'getPimConnector_Writer_DummyItemService',
            'pim_connector.writer.file.csv' => 'getPimConnector_Writer_File_CsvService',
            'pim_connector.writer.file.csv_association_type' => 'getPimConnector_Writer_File_CsvAssociationTypeService',
            'pim_connector.writer.file.csv_attribute' => 'getPimConnector_Writer_File_CsvAttributeService',
            'pim_connector.writer.file.csv_attribute_group' => 'getPimConnector_Writer_File_CsvAttributeGroupService',
            'pim_connector.writer.file.csv_attribute_option' => 'getPimConnector_Writer_File_CsvAttributeOptionService',
            'pim_connector.writer.file.csv_category' => 'getPimConnector_Writer_File_CsvCategoryService',
            'pim_connector.writer.file.csv_channel' => 'getPimConnector_Writer_File_CsvChannelService',
            'pim_connector.writer.file.csv_currency' => 'getPimConnector_Writer_File_CsvCurrencyService',
            'pim_connector.writer.file.csv_family' => 'getPimConnector_Writer_File_CsvFamilyService',
            'pim_connector.writer.file.csv_group' => 'getPimConnector_Writer_File_CsvGroupService',
            'pim_connector.writer.file.csv_group_type' => 'getPimConnector_Writer_File_CsvGroupTypeService',
            'pim_connector.writer.file.csv_locale' => 'getPimConnector_Writer_File_CsvLocaleService',
            'pim_connector.writer.file.csv_product' => 'getPimConnector_Writer_File_CsvProductService',
            'pim_connector.writer.file.csv_product_quick_export' => 'getPimConnector_Writer_File_CsvProductQuickExportService',
            'pim_connector.writer.file.csv_variant_group' => 'getPimConnector_Writer_File_CsvVariantGroupService',
            'pim_connector.writer.file.default.column_sorter' => 'getPimConnector_Writer_File_Default_ColumnSorterService',
            'pim_connector.writer.file.flat_invalid_item_buffer_flusher' => 'getPimConnector_Writer_File_FlatInvalidItemBufferFlusherService',
            'pim_connector.writer.file.flat_item_buffer_flusher' => 'getPimConnector_Writer_File_FlatItemBufferFlusherService',
            'pim_connector.writer.file.invalid_items_csv' => 'getPimConnector_Writer_File_InvalidItemsCsvService',
            'pim_connector.writer.file.invalid_items_xlsx' => 'getPimConnector_Writer_File_InvalidItemsXlsxService',
            'pim_connector.writer.file.media_exporter_path_generator' => 'getPimConnector_Writer_File_MediaExporterPathGeneratorService',
            'pim_connector.writer.file.product.column_sorter' => 'getPimConnector_Writer_File_Product_ColumnSorterService',
            'pim_connector.writer.file.product.flat_item_buffer_flusher' => 'getPimConnector_Writer_File_Product_FlatItemBufferFlusherService',
            'pim_connector.writer.file.product_quick_export.column_sorter' => 'getPimConnector_Writer_File_ProductQuickExport_ColumnSorterService',
            'pim_connector.writer.file.product_quick_export.flat_item_buffer_flusher' => 'getPimConnector_Writer_File_ProductQuickExport_FlatItemBufferFlusherService',
            'pim_connector.writer.file.xlsx_association_type' => 'getPimConnector_Writer_File_XlsxAssociationTypeService',
            'pim_connector.writer.file.xlsx_attribute' => 'getPimConnector_Writer_File_XlsxAttributeService',
            'pim_connector.writer.file.xlsx_attribute_group' => 'getPimConnector_Writer_File_XlsxAttributeGroupService',
            'pim_connector.writer.file.xlsx_attribute_option' => 'getPimConnector_Writer_File_XlsxAttributeOptionService',
            'pim_connector.writer.file.xlsx_category' => 'getPimConnector_Writer_File_XlsxCategoryService',
            'pim_connector.writer.file.xlsx_channel' => 'getPimConnector_Writer_File_XlsxChannelService',
            'pim_connector.writer.file.xlsx_currency' => 'getPimConnector_Writer_File_XlsxCurrencyService',
            'pim_connector.writer.file.xlsx_family' => 'getPimConnector_Writer_File_XlsxFamilyService',
            'pim_connector.writer.file.xlsx_group' => 'getPimConnector_Writer_File_XlsxGroupService',
            'pim_connector.writer.file.xlsx_group_type' => 'getPimConnector_Writer_File_XlsxGroupTypeService',
            'pim_connector.writer.file.xlsx_locale' => 'getPimConnector_Writer_File_XlsxLocaleService',
            'pim_connector.writer.file.xlsx_product' => 'getPimConnector_Writer_File_XlsxProductService',
            'pim_connector.writer.file.xlsx_product_quick_export' => 'getPimConnector_Writer_File_XlsxProductQuickExportService',
            'pim_connector.writer.file.xlsx_variant_group' => 'getPimConnector_Writer_File_XlsxVariantGroupService',
            'pim_connector.writer.file.yaml' => 'getPimConnector_Writer_File_YamlService',
            'pim_dashboard.controller.widget' => 'getPimDashboard_Controller_WidgetService',
            'pim_dashboard.widget.completeness' => 'getPimDashboard_Widget_CompletenessService',
            'pim_dashboard.widget.last_operations' => 'getPimDashboard_Widget_LastOperationsService',
            'pim_dashboard.widget.links' => 'getPimDashboard_Widget_LinksService',
            'pim_dashboard.widget.registry' => 'getPimDashboard_Widget_RegistryService',
            'pim_datagrid.adapter.oro_to_pim_grid_filter' => 'getPimDatagrid_Adapter_OroToPimGridFilterService',
            'pim_datagrid.controller.datagrid' => 'getPimDatagrid_Controller_DatagridService',
            'pim_datagrid.controller.datagrid_view' => 'getPimDatagrid_Controller_DatagridViewService',
            'pim_datagrid.controller.export' => 'getPimDatagrid_Controller_ExportService',
            'pim_datagrid.controller.mass_action' => 'getPimDatagrid_Controller_MassActionService',
            'pim_datagrid.controller.product_export' => 'getPimDatagrid_Controller_ProductExportService',
            'pim_datagrid.controller.rest.datagrid_view' => 'getPimDatagrid_Controller_Rest_DatagridViewService',
            'pim_datagrid.datagrid.configuration.product.columns_configurator' => 'getPimDatagrid_Datagrid_Configuration_Product_ColumnsConfiguratorService',
            'pim_datagrid.datagrid.configuration.product.configuration_registry' => 'getPimDatagrid_Datagrid_Configuration_Product_ConfigurationRegistryService',
            'pim_datagrid.datagrid.configuration.product.context_configurator' => 'getPimDatagrid_Datagrid_Configuration_Product_ContextConfiguratorService',
            'pim_datagrid.datagrid.configuration.product.filters_configurator' => 'getPimDatagrid_Datagrid_Configuration_Product_FiltersConfiguratorService',
            'pim_datagrid.datagrid.configuration.product.group_columns_configurator' => 'getPimDatagrid_Datagrid_Configuration_Product_GroupColumnsConfiguratorService',
            'pim_datagrid.datagrid.configuration.product.sorters_configurator' => 'getPimDatagrid_Datagrid_Configuration_Product_SortersConfiguratorService',
            'pim_datagrid.datagrid.request.parameters_extractor' => 'getPimDatagrid_Datagrid_Request_ParametersExtractorService',
            'pim_datagrid.datasource.adapter_resolver' => 'getPimDatagrid_Datasource_AdapterResolverService',
            'pim_datagrid.datasource.associated_product' => 'getPimDatagrid_Datasource_AssociatedProductService',
            'pim_datagrid.datasource.default' => 'getPimDatagrid_Datasource_DefaultService',
            'pim_datagrid.datasource.product' => 'getPimDatagrid_Datasource_ProductService',
            'pim_datagrid.datasource.result_record.hydrator.associated_product' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_AssociatedProductService',
            'pim_datagrid.datasource.result_record.hydrator.default' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_DefaultService',
            'pim_datagrid.datasource.result_record.hydrator.object' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_ObjectService',
            'pim_datagrid.datasource.result_record.hydrator.object_id' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_ObjectIdService',
            'pim_datagrid.datasource.result_record.hydrator.orm.object' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_Orm_ObjectService',
            'pim_datagrid.datasource.result_record.hydrator.orm.object_id' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_Orm_ObjectIdService',
            'pim_datagrid.datasource.result_record.hydrator.product' => 'getPimDatagrid_Datasource_ResultRecord_Hydrator_ProductService',
            'pim_datagrid.datasource.smart' => 'getPimDatagrid_Datasource_SmartService',
            'pim_datagrid.datasource.support_resolver' => 'getPimDatagrid_Datasource_SupportResolverService',
            'pim_datagrid.event_listener.configure_product_filters' => 'getPimDatagrid_EventListener_ConfigureProductFiltersService',
            'pim_datagrid.event_listener.configure_sorters_listener' => 'getPimDatagrid_EventListener_ConfigureSortersListenerService',
            'pim_datagrid.event_subscriber.default_view' => 'getPimDatagrid_EventSubscriber_DefaultViewService',
            'pim_datagrid.extension.action.type.tab_redirect' => 'getPimDatagrid_Extension_Action_Type_TabRedirectService',
            'pim_datagrid.extension.filter' => 'getPimDatagrid_Extension_FilterService',
            'pim_datagrid.extension.formatter.property.job.name_property' => 'getPimDatagrid_Extension_Formatter_Property_Job_NamePropertyService',
            'pim_datagrid.extension.formatter.property.job.type_property' => 'getPimDatagrid_Extension_Formatter_Property_Job_TypePropertyService',
            'pim_datagrid.extension.formatter.property.product.groups_property' => 'getPimDatagrid_Extension_Formatter_Property_Product_GroupsPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.attribute_option_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_AttributeOptionPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.attribute_options_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_AttributeOptionsPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.boolean_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_BooleanPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.date_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_DatePropertyService',
            'pim_datagrid.extension.formatter.property.product_value.datetime_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_DatetimePropertyService',
            'pim_datagrid.extension.formatter.property.product_value.field_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_FieldPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.file_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_FilePropertyService',
            'pim_datagrid.extension.formatter.property.product_value.image_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_ImagePropertyService',
            'pim_datagrid.extension.formatter.property.product_value.metric_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_MetricPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.number_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_NumberPropertyService',
            'pim_datagrid.extension.formatter.property.product_value.price_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_PricePropertyService',
            'pim_datagrid.extension.formatter.property.product_value.twig_property' => 'getPimDatagrid_Extension_Formatter_Property_ProductValue_TwigPropertyService',
            'pim_datagrid.extension.mass_action.dispatcher' => 'getPimDatagrid_Extension_MassAction_DispatcherService',
            'pim_datagrid.extension.mass_action.handler.delete' => 'getPimDatagrid_Extension_MassAction_Handler_DeleteService',
            'pim_datagrid.extension.mass_action.handler.edit' => 'getPimDatagrid_Extension_MassAction_Handler_EditService',
            'pim_datagrid.extension.mass_action.handler.export' => 'getPimDatagrid_Extension_MassAction_Handler_ExportService',
            'pim_datagrid.extension.mass_action.handler.product_delete' => 'getPimDatagrid_Extension_MassAction_Handler_ProductDeleteService',
            'pim_datagrid.extension.mass_action.handler.product_edit' => 'getPimDatagrid_Extension_MassAction_Handler_ProductEditService',
            'pim_datagrid.extension.mass_action.handler.product_export' => 'getPimDatagrid_Extension_MassAction_Handler_ProductExportService',
            'pim_datagrid.extension.mass_action.handler.registry' => 'getPimDatagrid_Extension_MassAction_Handler_RegistryService',
            'pim_datagrid.extension.mass_action.handler.sequential_edit' => 'getPimDatagrid_Extension_MassAction_Handler_SequentialEditService',
            'pim_datagrid.extension.mass_action.type.delete' => 'getPimDatagrid_Extension_MassAction_Type_DeleteService',
            'pim_datagrid.extension.mass_action.type.edit' => 'getPimDatagrid_Extension_MassAction_Type_EditService',
            'pim_datagrid.extension.mass_action.type.export' => 'getPimDatagrid_Extension_MassAction_Type_ExportService',
            'pim_datagrid.extension.mass_action.util.product_fields_builder' => 'getPimDatagrid_Extension_MassAction_Util_ProductFieldsBuilderService',
            'pim_datagrid.extension.pager' => 'getPimDatagrid_Extension_PagerService',
            'pim_datagrid.extension.pager.orm.pager' => 'getPimDatagrid_Extension_Pager_Orm_PagerService',
            'pim_datagrid.extension.pager.pager_resolver' => 'getPimDatagrid_Extension_Pager_PagerResolverService',
            'pim_datagrid.extension.selector.orm.product.completeness_selector' => 'getPimDatagrid_Extension_Selector_Orm_Product_CompletenessSelectorService',
            'pim_datagrid.extension.selector.orm.product.family_selector' => 'getPimDatagrid_Extension_Selector_Orm_Product_FamilySelectorService',
            'pim_datagrid.extension.selector.orm.product.groups_selector' => 'getPimDatagrid_Extension_Selector_Orm_Product_GroupsSelectorService',
            'pim_datagrid.extension.selector.orm.product.in_group_selector' => 'getPimDatagrid_Extension_Selector_Orm_Product_InGroupSelectorService',
            'pim_datagrid.extension.selector.orm.product.label_selector' => 'getPimDatagrid_Extension_Selector_Orm_Product_LabelSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.base_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_BaseSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.media_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_MediaSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.metric_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_MetricSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.option_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_OptionSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.options_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_OptionsSelectorService',
            'pim_datagrid.extension.selector.orm.product_value.prices_selector' => 'getPimDatagrid_Extension_Selector_Orm_ProductValue_PricesSelectorService',
            'pim_datagrid.extension.selector.orm_selector' => 'getPimDatagrid_Extension_Selector_OrmSelectorService',
            'pim_datagrid.extension.sorter' => 'getPimDatagrid_Extension_SorterService',
            'pim_datagrid.extension.sorter.orm.field_sorter' => 'getPimDatagrid_Extension_Sorter_Orm_FieldSorterService',
            'pim_datagrid.extension.sorter.product.completeness_sorter' => 'getPimDatagrid_Extension_Sorter_Product_CompletenessSorterService',
            'pim_datagrid.extension.sorter.product.family_sorter' => 'getPimDatagrid_Extension_Sorter_Product_FamilySorterService',
            'pim_datagrid.extension.sorter.product.field_sorter' => 'getPimDatagrid_Extension_Sorter_Product_FieldSorterService',
            'pim_datagrid.extension.sorter.product.in_group_sorter' => 'getPimDatagrid_Extension_Sorter_Product_InGroupSorterService',
            'pim_datagrid.extension.sorter.product.is_associated_sorter' => 'getPimDatagrid_Extension_Sorter_Product_IsAssociatedSorterService',
            'pim_datagrid.extension.sorter.product.value_sorter' => 'getPimDatagrid_Extension_Sorter_Product_ValueSorterService',
            'pim_datagrid.factory.datagrid_view' => 'getPimDatagrid_Factory_DatagridViewService',
            'pim_datagrid.form.type.datagrid_product_filter_choice' => 'getPimDatagrid_Form_Type_DatagridProductFilterChoiceService',
            'pim_datagrid.form.type.datagrid_view' => 'getPimDatagrid_Form_Type_DatagridViewService',
            'pim_datagrid.manager.datagrid_view' => 'getPimDatagrid_Manager_DatagridViewService',
            'pim_datagrid.remover.datagrid_view' => 'getPimDatagrid_Remover_DatagridViewService',
            'pim_datagrid.repository.datagrid_view' => 'getPimDatagrid_Repository_DatagridViewService',
            'pim_datagrid.saver.datagrid_view' => 'getPimDatagrid_Saver_DatagridViewService',
            'pim_datagrid.twig.filter_extension' => 'getPimDatagrid_Twig_FilterExtensionService',
            'pim_datagrid.twig.image_extension' => 'getPimDatagrid_Twig_ImageExtensionService',
            'pim_datagrid.updater.datagrid_view' => 'getPimDatagrid_Updater_DatagridViewService',
            'pim_enrich.connector.item.mass_edit.temporary_file_cleaner' => 'getPimEnrich_Connector_Item_MassEdit_TemporaryFileCleanerService',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_csv_quick_export' => 'getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvQuickExportService',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_mass_edit' => 'getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductMassEditService',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_xlsx_quick_export' => 'getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxQuickExportService',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.simple_mass_edit' => 'getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_SimpleMassEditService',
            'pim_enrich.connector.job.job_parameters.default_values_provider.product_csv_quick_export' => 'getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductCsvQuickExportService',
            'pim_enrich.connector.job.job_parameters.default_values_provider.product_mass_edit' => 'getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductMassEditService',
            'pim_enrich.connector.job.job_parameters.default_values_provider.product_xlsx_quick_export' => 'getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductXlsxQuickExportService',
            'pim_enrich.connector.job.job_parameters.default_values_provider.simple_mass_edit' => 'getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_SimpleMassEditService',
            'pim_enrich.connector.processor.mass_edit.family.set_requirements' => 'getPimEnrich_Connector_Processor_MassEdit_Family_SetRequirementsService',
            'pim_enrich.connector.processor.mass_edit.product.add_to_variant_group' => 'getPimEnrich_Connector_Processor_MassEdit_Product_AddToVariantGroupService',
            'pim_enrich.connector.processor.mass_edit.product.add_value' => 'getPimEnrich_Connector_Processor_MassEdit_Product_AddValueService',
            'pim_enrich.connector.processor.mass_edit.product.edit_common_attributes' => 'getPimEnrich_Connector_Processor_MassEdit_Product_EditCommonAttributesService',
            'pim_enrich.connector.processor.mass_edit.product.remove_value' => 'getPimEnrich_Connector_Processor_MassEdit_Product_RemoveValueService',
            'pim_enrich.connector.processor.mass_edit.product.update_value' => 'getPimEnrich_Connector_Processor_MassEdit_Product_UpdateValueService',
            'pim_enrich.connector.processor.quick_export.product' => 'getPimEnrich_Connector_Processor_QuickExport_ProductService',
            'pim_enrich.connector.reader.mass_edit.family' => 'getPimEnrich_Connector_Reader_MassEdit_FamilyService',
            'pim_enrich.connector.reader.mass_edit.variant_group_product' => 'getPimEnrich_Connector_Reader_MassEdit_VariantGroupProductService',
            'pim_enrich.controller.association' => 'getPimEnrich_Controller_AssociationService',
            'pim_enrich.controller.association_type' => 'getPimEnrich_Controller_AssociationTypeService',
            'pim_enrich.controller.attribute' => 'getPimEnrich_Controller_AttributeService',
            'pim_enrich.controller.attribute_group' => 'getPimEnrich_Controller_AttributeGroupService',
            'pim_enrich.controller.attribute_option' => 'getPimEnrich_Controller_AttributeOptionService',
            'pim_enrich.controller.category_tree.product' => 'getPimEnrich_Controller_CategoryTree_ProductService',
            'pim_enrich.controller.channel' => 'getPimEnrich_Controller_ChannelService',
            'pim_enrich.controller.completeness' => 'getPimEnrich_Controller_CompletenessService',
            'pim_enrich.controller.currency' => 'getPimEnrich_Controller_CurrencyService',
            'pim_enrich.controller.family' => 'getPimEnrich_Controller_FamilyService',
            'pim_enrich.controller.family.mass_edit_action' => 'getPimEnrich_Controller_Family_MassEditActionService',
            'pim_enrich.controller.file' => 'getPimEnrich_Controller_FileService',
            'pim_enrich.controller.group' => 'getPimEnrich_Controller_GroupService',
            'pim_enrich.controller.group_type' => 'getPimEnrich_Controller_GroupTypeService',
            'pim_enrich.controller.job_tracker' => 'getPimEnrich_Controller_JobTrackerService',
            'pim_enrich.controller.locale' => 'getPimEnrich_Controller_LocaleService',
            'pim_enrich.controller.product' => 'getPimEnrich_Controller_ProductService',
            'pim_enrich.controller.product.mass_edit_action' => 'getPimEnrich_Controller_Product_MassEditActionService',
            'pim_enrich.controller.rest.association_type' => 'getPimEnrich_Controller_Rest_AssociationTypeService',
            'pim_enrich.controller.rest.attribute' => 'getPimEnrich_Controller_Rest_AttributeService',
            'pim_enrich.controller.rest.attribute_group' => 'getPimEnrich_Controller_Rest_AttributeGroupService',
            'pim_enrich.controller.rest.attribute_option' => 'getPimEnrich_Controller_Rest_AttributeOptionService',
            'pim_enrich.controller.rest.category' => 'getPimEnrich_Controller_Rest_CategoryService',
            'pim_enrich.controller.rest.channel' => 'getPimEnrich_Controller_Rest_ChannelService',
            'pim_enrich.controller.rest.completeness' => 'getPimEnrich_Controller_Rest_CompletenessService',
            'pim_enrich.controller.rest.currency' => 'getPimEnrich_Controller_Rest_CurrencyService',
            'pim_enrich.controller.rest.family' => 'getPimEnrich_Controller_Rest_FamilyService',
            'pim_enrich.controller.rest.form_extension' => 'getPimEnrich_Controller_Rest_FormExtensionService',
            'pim_enrich.controller.rest.group' => 'getPimEnrich_Controller_Rest_GroupService',
            'pim_enrich.controller.rest.job_instance' => 'getPimEnrich_Controller_Rest_JobInstanceService',
            'pim_enrich.controller.rest.locale' => 'getPimEnrich_Controller_Rest_LocaleService',
            'pim_enrich.controller.rest.measures' => 'getPimEnrich_Controller_Rest_MeasuresService',
            'pim_enrich.controller.rest.media' => 'getPimEnrich_Controller_Rest_MediaService',
            'pim_enrich.controller.rest.navigation_history' => 'getPimEnrich_Controller_Rest_NavigationHistoryService',
            'pim_enrich.controller.rest.product' => 'getPimEnrich_Controller_Rest_ProductService',
            'pim_enrich.controller.rest.product_category' => 'getPimEnrich_Controller_Rest_ProductCategoryService',
            'pim_enrich.controller.rest.product_comment' => 'getPimEnrich_Controller_Rest_ProductCommentService',
            'pim_enrich.controller.rest.variant_group' => 'getPimEnrich_Controller_Rest_VariantGroupService',
            'pim_enrich.controller.rest.variant_group_attribute' => 'getPimEnrich_Controller_Rest_VariantGroupAttributeService',
            'pim_enrich.controller.rest.versioning' => 'getPimEnrich_Controller_Rest_VersioningService',
            'pim_enrich.controller.sequential_edit' => 'getPimEnrich_Controller_SequentialEditService',
            'pim_enrich.controller.variant_group' => 'getPimEnrich_Controller_VariantGroupService',
            'pim_enrich.converter.enrich_to_standard.product_value' => 'getPimEnrich_Converter_EnrichToStandard_ProductValueService',
            'pim_enrich.converter.standard_to_enrich.product_value' => 'getPimEnrich_Converter_StandardToEnrich_ProductValueService',
            'pim_enrich.doctrine.counter.category_product' => 'getPimEnrich_Doctrine_Counter_CategoryProductService',
            'pim_enrich.doctrine.counter.category_registry' => 'getPimEnrich_Doctrine_Counter_CategoryRegistryService',
            'pim_enrich.event_listener.add_locale' => 'getPimEnrich_EventListener_AddLocaleService',
            'pim_enrich.event_listener.add_locale_code_to_grid' => 'getPimEnrich_EventListener_AddLocaleCodeToGridService',
            'pim_enrich.event_listener.association_group_grid_after_listener' => 'getPimEnrich_EventListener_AssociationGroupGridAfterListenerService',
            'pim_enrich.event_listener.association_product_grid_after_listener' => 'getPimEnrich_EventListener_AssociationProductGridAfterListenerService',
            'pim_enrich.event_listener.association_product_grid_before_listener' => 'getPimEnrich_EventListener_AssociationProductGridBeforeListenerService',
            'pim_enrich.event_listener.group_grid_listener' => 'getPimEnrich_EventListener_GroupGridListenerService',
            'pim_enrich.event_listener.history_grid_listener' => 'getPimEnrich_EventListener_HistoryGridListenerService',
            'pim_enrich.event_listener.product_grid_after_listener' => 'getPimEnrich_EventListener_ProductGridAfterListenerService',
            'pim_enrich.event_listener.product_grid_before_listener' => 'getPimEnrich_EventListener_ProductGridBeforeListenerService',
            'pim_enrich.event_listener.product_group_grid_after_listener' => 'getPimEnrich_EventListener_ProductGroupGridAfterListenerService',
            'pim_enrich.event_listener.product_group_grid_before_listener' => 'getPimEnrich_EventListener_ProductGroupGridBeforeListenerService',
            'pim_enrich.event_listener.product_variant_group_grid_after_listener' => 'getPimEnrich_EventListener_ProductVariantGroupGridAfterListenerService',
            'pim_enrich.event_listener.product_variant_group_grid_before_listener' => 'getPimEnrich_EventListener_ProductVariantGroupGridBeforeListenerService',
            'pim_enrich.event_listener.request' => 'getPimEnrich_EventListener_RequestService',
            'pim_enrich.event_listener.variant_group_grid_listener' => 'getPimEnrich_EventListener_VariantGroupGridListenerService',
            'pim_enrich.event_subscriber.storage.channel_locale' => 'getPimEnrich_EventSubscriber_Storage_ChannelLocaleService',
            'pim_enrich.event_subscriber.translate_flash_messages' => 'getPimEnrich_EventSubscriber_TranslateFlashMessagesService',
            'pim_enrich.factory.mass_edit_notification' => 'getPimEnrich_Factory_MassEditNotificationService',
            'pim_enrich.factory.sequential_edit' => 'getPimEnrich_Factory_SequentialEditService',
            'pim_enrich.factory.transformer.identifiable_model' => 'getPimEnrich_Factory_Transformer_IdentifiableModelService',
            'pim_enrich.filter.product_edit_data' => 'getPimEnrich_Filter_ProductEditDataService',
            'pim_enrich.filter.product_value.channel' => 'getPimEnrich_Filter_ProductValue_ChannelService',
            'pim_enrich.filter.product_value.locale' => 'getPimEnrich_Filter_ProductValue_LocaleService',
            'pim_enrich.filter.product_values_edit_data' => 'getPimEnrich_Filter_ProductValuesEditDataService',
            'pim_enrich.filter.variant_group_edit_data' => 'getPimEnrich_Filter_VariantGroupEditDataService',
            'pim_enrich.form.association_type' => 'getPimEnrich_Form_AssociationTypeService',
            'pim_enrich.form.attribute' => 'getPimEnrich_Form_AttributeService',
            'pim_enrich.form.attribute_group' => 'getPimEnrich_Form_AttributeGroupService',
            'pim_enrich.form.channel' => 'getPimEnrich_Form_ChannelService',
            'pim_enrich.form.currency' => 'getPimEnrich_Form_CurrencyService',
            'pim_enrich.form.family' => 'getPimEnrich_Form_FamilyService',
            'pim_enrich.form.group' => 'getPimEnrich_Form_GroupService',
            'pim_enrich.form.group_type' => 'getPimEnrich_Form_GroupTypeService',
            'pim_enrich.form.handler.association_type' => 'getPimEnrich_Form_Handler_AssociationTypeService',
            'pim_enrich.form.handler.attribute' => 'getPimEnrich_Form_Handler_AttributeService',
            'pim_enrich.form.handler.attribute_group' => 'getPimEnrich_Form_Handler_AttributeGroupService',
            'pim_enrich.form.handler.channel' => 'getPimEnrich_Form_Handler_ChannelService',
            'pim_enrich.form.handler.family' => 'getPimEnrich_Form_Handler_FamilyService',
            'pim_enrich.form.handler.group' => 'getPimEnrich_Form_Handler_GroupService',
            'pim_enrich.form.handler.group_type' => 'getPimEnrich_Form_Handler_GroupTypeService',
            'pim_enrich.form.handler.variant_group' => 'getPimEnrich_Form_Handler_VariantGroupService',
            'pim_enrich.form.subscriber.add_variant_group_axes' => 'getPimEnrich_Form_Subscriber_AddVariantGroupAxesService',
            'pim_enrich.form.subscriber.attribute' => 'getPimEnrich_Form_Subscriber_AttributeService',
            'pim_enrich.form.subscriber.attribute_requirements' => 'getPimEnrich_Form_Subscriber_AttributeRequirementsService',
            'pim_enrich.form.subscriber.family_attribute_label_subscriber' => 'getPimEnrich_Form_Subscriber_FamilyAttributeLabelSubscriberService',
            'pim_enrich.form.subscriber.family_disable_fields_subscriber' => 'getPimEnrich_Form_Subscriber_FamilyDisableFieldsSubscriberService',
            'pim_enrich.form.subscriber.set_attribute_group_sort_order' => 'getPimEnrich_Form_Subscriber_SetAttributeGroupSortOrderService',
            'pim_enrich.form.type.add_to_groups' => 'getPimEnrich_Form_Type_AddToGroupsService',
            'pim_enrich.form.type.add_to_variant_group' => 'getPimEnrich_Form_Type_AddToVariantGroupService',
            'pim_enrich.form.type.association' => 'getPimEnrich_Form_Type_AssociationService',
            'pim_enrich.form.type.association_type' => 'getPimEnrich_Form_Type_AssociationTypeService',
            'pim_enrich.form.type.async_select' => 'getPimEnrich_Form_Type_AsyncSelectService',
            'pim_enrich.form.type.attribute' => 'getPimEnrich_Form_Type_AttributeService',
            'pim_enrich.form.type.attribute_group' => 'getPimEnrich_Form_Type_AttributeGroupService',
            'pim_enrich.form.type.attribute_option' => 'getPimEnrich_Form_Type_AttributeOptionService',
            'pim_enrich.form.type.attribute_option_create' => 'getPimEnrich_Form_Type_AttributeOptionCreateService',
            'pim_enrich.form.type.attribute_option_value' => 'getPimEnrich_Form_Type_AttributeOptionValueService',
            'pim_enrich.form.type.attribute_requirement' => 'getPimEnrich_Form_Type_AttributeRequirementService',
            'pim_enrich.form.type.available_attributes' => 'getPimEnrich_Form_Type_AvailableAttributesService',
            'pim_enrich.form.type.available_locales' => 'getPimEnrich_Form_Type_AvailableLocalesService',
            'pim_enrich.form.type.category' => 'getPimEnrich_Form_Type_CategoryService',
            'pim_enrich.form.type.change_family' => 'getPimEnrich_Form_Type_ChangeFamilyService',
            'pim_enrich.form.type.change_status' => 'getPimEnrich_Form_Type_ChangeStatusService',
            'pim_enrich.form.type.channel' => 'getPimEnrich_Form_Type_ChannelService',
            'pim_enrich.form.type.choose_action' => 'getPimEnrich_Form_Type_ChooseActionService',
            'pim_enrich.form.type.classify' => 'getPimEnrich_Form_Type_ClassifyService',
            'pim_enrich.form.type.conversion_units' => 'getPimEnrich_Form_Type_ConversionUnitsService',
            'pim_enrich.form.type.edit_common_attributes' => 'getPimEnrich_Form_Type_EditCommonAttributesService',
            'pim_enrich.form.type.export_select_family' => 'getPimEnrich_Form_Type_ExportSelectFamilyService',
            'pim_enrich.form.type.family' => 'getPimEnrich_Form_Type_FamilyService',
            'pim_enrich.form.type.group' => 'getPimEnrich_Form_Type_GroupService',
            'pim_enrich.form.type.group_type' => 'getPimEnrich_Form_Type_GroupTypeService',
            'pim_enrich.form.type.light_entity' => 'getPimEnrich_Form_Type_LightEntityService',
            'pim_enrich.form.type.localized_collection' => 'getPimEnrich_Form_Type_LocalizedCollectionService',
            'pim_enrich.form.type.media' => 'getPimEnrich_Form_Type_MediaService',
            'pim_enrich.form.type.object_identifier' => 'getPimEnrich_Form_Type_ObjectIdentifierService',
            'pim_enrich.form.type.options' => 'getPimEnrich_Form_Type_OptionsService',
            'pim_enrich.form.type.product_grid_filter_choice' => 'getPimEnrich_Form_Type_ProductGridFilterChoiceService',
            'pim_enrich.form.type.scopable' => 'getPimEnrich_Form_Type_ScopableService',
            'pim_enrich.form.type.set_attribute_requirements' => 'getPimEnrich_Form_Type_SetAttributeRequirementsService',
            'pim_enrich.form.type.translatable_field' => 'getPimEnrich_Form_Type_TranslatableFieldService',
            'pim_enrich.form.type.variant_group' => 'getPimEnrich_Form_Type_VariantGroupService',
            'pim_enrich.form.variant_group' => 'getPimEnrich_Form_VariantGroupService',
            'pim_enrich.form.view.view_updater.registry' => 'getPimEnrich_Form_View_ViewUpdater_RegistryService',
            'pim_enrich.form.view.view_updater.variant' => 'getPimEnrich_Form_View_ViewUpdater_VariantService',
            'pim_enrich.guesser.file_type' => 'getPimEnrich_Guesser_FileTypeService',
            'pim_enrich.imagine.loader.flysystem' => 'getPimEnrich_Imagine_Loader_FlysystemService',
            'pim_enrich.job.add_product_value' => 'getPimEnrich_Job_AddProductValueService',
            'pim_enrich.job.add_to_variant_group' => 'getPimEnrich_Job_AddToVariantGroupService',
            'pim_enrich.job.csv_product_grid_context_quick_export' => 'getPimEnrich_Job_CsvProductGridContextQuickExportService',
            'pim_enrich.job.csv_product_quick_export' => 'getPimEnrich_Job_CsvProductQuickExportService',
            'pim_enrich.job.edit_common_attributes' => 'getPimEnrich_Job_EditCommonAttributesService',
            'pim_enrich.job.remove_product_value' => 'getPimEnrich_Job_RemoveProductValueService',
            'pim_enrich.job.set_attribute_requirements' => 'getPimEnrich_Job_SetAttributeRequirementsService',
            'pim_enrich.job.update_product_value' => 'getPimEnrich_Job_UpdateProductValueService',
            'pim_enrich.job.xlsx_product_grid_context_quick_export' => 'getPimEnrich_Job_XlsxProductGridContextQuickExportService',
            'pim_enrich.job.xlsx_product_quick_export' => 'getPimEnrich_Job_XlsxProductQuickExportService',
            'pim_enrich.manager.sequential_edit' => 'getPimEnrich_Manager_SequentialEditService',
            'pim_enrich.mass_edit_action.add_to_groups' => 'getPimEnrich_MassEditAction_AddToGroupsService',
            'pim_enrich.mass_edit_action.add_to_variant_group' => 'getPimEnrich_MassEditAction_AddToVariantGroupService',
            'pim_enrich.mass_edit_action.form_resolver' => 'getPimEnrich_MassEditAction_FormResolverService',
            'pim_enrich.mass_edit_action.operation.registry' => 'getPimEnrich_MassEditAction_Operation_RegistryService',
            'pim_enrich.mass_edit_action.operation_job_launcher' => 'getPimEnrich_MassEditAction_OperationJobLauncherService',
            'pim_enrich.normalizer.association_type' => 'getPimEnrich_Normalizer_AssociationTypeService',
            'pim_enrich.normalizer.attribute' => 'getPimEnrich_Normalizer_AttributeService',
            'pim_enrich.normalizer.attribute_option' => 'getPimEnrich_Normalizer_AttributeOptionService',
            'pim_enrich.normalizer.attribute_option_value' => 'getPimEnrich_Normalizer_AttributeOptionValueService',
            'pim_enrich.normalizer.attribute_option_value_collection' => 'getPimEnrich_Normalizer_AttributeOptionValueCollectionService',
            'pim_enrich.normalizer.category' => 'getPimEnrich_Normalizer_CategoryService',
            'pim_enrich.normalizer.channel' => 'getPimEnrich_Normalizer_ChannelService',
            'pim_enrich.normalizer.collection' => 'getPimEnrich_Normalizer_CollectionService',
            'pim_enrich.normalizer.completeness' => 'getPimEnrich_Normalizer_CompletenessService',
            'pim_enrich.normalizer.completeness_collection' => 'getPimEnrich_Normalizer_CompletenessCollectionService',
            'pim_enrich.normalizer.datagrid_view' => 'getPimEnrich_Normalizer_DatagridViewService',
            'pim_enrich.normalizer.family' => 'getPimEnrich_Normalizer_FamilyService',
            'pim_enrich.normalizer.file' => 'getPimEnrich_Normalizer_FileService',
            'pim_enrich.normalizer.group' => 'getPimEnrich_Normalizer_GroupService',
            'pim_enrich.normalizer.group_violation' => 'getPimEnrich_Normalizer_GroupViolationService',
            'pim_enrich.normalizer.locale' => 'getPimEnrich_Normalizer_LocaleService',
            'pim_enrich.normalizer.product' => 'getPimEnrich_Normalizer_ProductService',
            'pim_enrich.normalizer.product_violation' => 'getPimEnrich_Normalizer_ProductViolationService',
            'pim_enrich.normalizer.sequential_edit' => 'getPimEnrich_Normalizer_SequentialEditService',
            'pim_enrich.normalizer.structured.attribute_option' => 'getPimEnrich_Normalizer_Structured_AttributeOptionService',
            'pim_enrich.normalizer.variant_group_violation' => 'getPimEnrich_Normalizer_VariantGroupViolationService',
            'pim_enrich.normalizer.version' => 'getPimEnrich_Normalizer_VersionService',
            'pim_enrich.product.paginator' => 'getPimEnrich_Product_PaginatorService',
            'pim_enrich.provider.default_image' => 'getPimEnrich_Provider_DefaultImageService',
            'pim_enrich.provider.empty_value.base' => 'getPimEnrich_Provider_EmptyValue_BaseService',
            'pim_enrich.provider.empty_value.chained' => 'getPimEnrich_Provider_EmptyValue_ChainedService',
            'pim_enrich.provider.field.base' => 'getPimEnrich_Provider_Field_BaseService',
            'pim_enrich.provider.field.chained' => 'getPimEnrich_Provider_Field_ChainedService',
            'pim_enrich.provider.field.wysiwyg' => 'getPimEnrich_Provider_Field_WysiwygService',
            'pim_enrich.provider.filter.base' => 'getPimEnrich_Provider_Filter_BaseService',
            'pim_enrich.provider.filter.chained' => 'getPimEnrich_Provider_Filter_ChainedService',
            'pim_enrich.provider.form.chained' => 'getPimEnrich_Provider_Form_ChainedService',
            'pim_enrich.provider.form.job_instance' => 'getPimEnrich_Provider_Form_JobInstanceService',
            'pim_enrich.provider.form.product' => 'getPimEnrich_Provider_Form_ProductService',
            'pim_enrich.provider.form_extension' => 'getPimEnrich_Provider_FormExtensionService',
            'pim_enrich.provider.structure_version.product' => 'getPimEnrich_Provider_StructureVersion_ProductService',
            'pim_enrich.provider.structure_version.variant_group' => 'getPimEnrich_Provider_StructureVersion_VariantGroupService',
            'pim_enrich.remover.sequential_edit' => 'getPimEnrich_Remover_SequentialEditService',
            'pim_enrich.repository.attribute' => 'getPimEnrich_Repository_AttributeService',
            'pim_enrich.repository.attribute.search' => 'getPimEnrich_Repository_Attribute_SearchService',
            'pim_enrich.repository.attribute_group' => 'getPimEnrich_Repository_AttributeGroupService',
            'pim_enrich.repository.attribute_option.search' => 'getPimEnrich_Repository_AttributeOption_SearchService',
            'pim_enrich.repository.category' => 'getPimEnrich_Repository_CategoryService',
            'pim_enrich.repository.family' => 'getPimEnrich_Repository_FamilyService',
            'pim_enrich.repository.family.search' => 'getPimEnrich_Repository_Family_SearchService',
            'pim_enrich.repository.group' => 'getPimEnrich_Repository_GroupService',
            'pim_enrich.repository.group_type' => 'getPimEnrich_Repository_GroupTypeService',
            'pim_enrich.repository.sequential_edit' => 'getPimEnrich_Repository_SequentialEditService',
            'pim_enrich.resolver.locale' => 'getPimEnrich_Resolver_LocaleService',
            'pim_enrich.saver.sequential_edit' => 'getPimEnrich_Saver_SequentialEditService',
            'pim_enrich.step.add_product_value.mass_edit' => 'getPimEnrich_Step_AddProductValue_MassEditService',
            'pim_enrich.step.add_to_variant_group.mass_edit' => 'getPimEnrich_Step_AddToVariantGroup_MassEditService',
            'pim_enrich.step.clean' => 'getPimEnrich_Step_CleanService',
            'pim_enrich.step.csv_product.quick_export' => 'getPimEnrich_Step_CsvProduct_QuickExportService',
            'pim_enrich.step.edit_common_attributes.mass_edit' => 'getPimEnrich_Step_EditCommonAttributes_MassEditService',
            'pim_enrich.step.remove_product_value.mass_edit' => 'getPimEnrich_Step_RemoveProductValue_MassEditService',
            'pim_enrich.step.set_attribute_requirements.mass_edit' => 'getPimEnrich_Step_SetAttributeRequirements_MassEditService',
            'pim_enrich.step.update_product_value.mass_edit' => 'getPimEnrich_Step_UpdateProductValue_MassEditService',
            'pim_enrich.step.xlsx_product.quick_export' => 'getPimEnrich_Step_XlsxProduct_QuickExportService',
            'pim_enrich.twig.attribute_extension' => 'getPimEnrich_Twig_AttributeExtensionService',
            'pim_enrich.twig.category_extension' => 'getPimEnrich_Twig_CategoryExtensionService',
            'pim_enrich.twig.locale_extension' => 'getPimEnrich_Twig_LocaleExtensionService',
            'pim_enrich.twig.object_class_extension' => 'getPimEnrich_Twig_ObjectClassExtensionService',
            'pim_enrich.twig.translations_extension' => 'getPimEnrich_Twig_TranslationsExtensionService',
            'pim_enrich.twig.version_extension' => 'getPimEnrich_Twig_VersionExtensionService',
            'pim_enrich.twig.view_element_extension' => 'getPimEnrich_Twig_ViewElementExtensionService',
            'pim_enrich.type.entity_identifier' => 'getPimEnrich_Type_EntityIdentifierService',
            'pim_enrich.view_element.association_type.tab.history' => 'getPimEnrich_ViewElement_AssociationType_Tab_HistoryService',
            'pim_enrich.view_element.association_type.tab.property' => 'getPimEnrich_ViewElement_AssociationType_Tab_PropertyService',
            'pim_enrich.view_element.attribute.backend_parameters' => 'getPimEnrich_ViewElement_Attribute_BackendParametersService',
            'pim_enrich.view_element.attribute.general_parameters' => 'getPimEnrich_ViewElement_Attribute_GeneralParametersService',
            'pim_enrich.view_element.attribute.tab.history' => 'getPimEnrich_ViewElement_Attribute_Tab_HistoryService',
            'pim_enrich.view_element.attribute.tab.parameter' => 'getPimEnrich_ViewElement_Attribute_Tab_ParameterService',
            'pim_enrich.view_element.attribute.tab.value' => 'getPimEnrich_ViewElement_Attribute_Tab_ValueService',
            'pim_enrich.view_element.attribute_group.tab.attribute' => 'getPimEnrich_ViewElement_AttributeGroup_Tab_AttributeService',
            'pim_enrich.view_element.attribute_group.tab.history' => 'getPimEnrich_ViewElement_AttributeGroup_Tab_HistoryService',
            'pim_enrich.view_element.attribute_group.tab.property' => 'getPimEnrich_ViewElement_AttributeGroup_Tab_PropertyService',
            'pim_enrich.view_element.base' => 'getPimEnrich_ViewElement_BaseService',
            'pim_enrich.view_element.category.tab.history' => 'getPimEnrich_ViewElement_Category_Tab_HistoryService',
            'pim_enrich.view_element.category.tab.property' => 'getPimEnrich_ViewElement_Category_Tab_PropertyService',
            'pim_enrich.view_element.channel.tab.history' => 'getPimEnrich_ViewElement_Channel_Tab_HistoryService',
            'pim_enrich.view_element.channel.tab.property' => 'getPimEnrich_ViewElement_Channel_Tab_PropertyService',
            'pim_enrich.view_element.family.tab.attribute' => 'getPimEnrich_ViewElement_Family_Tab_AttributeService',
            'pim_enrich.view_element.family.tab.history' => 'getPimEnrich_ViewElement_Family_Tab_HistoryService',
            'pim_enrich.view_element.family.tab.property' => 'getPimEnrich_ViewElement_Family_Tab_PropertyService',
            'pim_enrich.view_element.group.tab.history' => 'getPimEnrich_ViewElement_Group_Tab_HistoryService',
            'pim_enrich.view_element.group.tab.product' => 'getPimEnrich_ViewElement_Group_Tab_ProductService',
            'pim_enrich.view_element.group.tab.property' => 'getPimEnrich_ViewElement_Group_Tab_PropertyService',
            'pim_enrich.view_element.group_type.tab.property' => 'getPimEnrich_ViewElement_GroupType_Tab_PropertyService',
            'pim_enrich.view_element.mass_edit.warning' => 'getPimEnrich_ViewElement_MassEdit_WarningService',
            'pim_enrich.view_element.registry' => 'getPimEnrich_ViewElement_RegistryService',
            'pim_enrich.view_element.visibility_checker.acl' => 'getPimEnrich_ViewElement_VisibilityChecker_AclService',
            'pim_enrich.view_element.visibility_checker.edit_form' => 'getPimEnrich_ViewElement_VisibilityChecker_EditFormService',
            'pim_enrich.view_element.visibility_checker.non_empty_property' => 'getPimEnrich_ViewElement_VisibilityChecker_NonEmptyPropertyService',
            'pim_enrich.view_element.visibility_checker.voter' => 'getPimEnrich_ViewElement_VisibilityChecker_VoterService',
            'pim_filter.ajax_choice_filter' => 'getPimFilter_AjaxChoiceFilterService',
            'pim_filter.form.type.boolean' => 'getPimFilter_Form_Type_BooleanService',
            'pim_filter.form.type.category' => 'getPimFilter_Form_Type_CategoryService',
            'pim_filter.form.type.date_range' => 'getPimFilter_Form_Type_DateRangeService',
            'pim_filter.form.type.datetime_range' => 'getPimFilter_Form_Type_DatetimeRangeService',
            'pim_filter.form.type.filter.ajax_choice' => 'getPimFilter_Form_Type_Filter_AjaxChoiceService',
            'pim_filter.form.type.filter.category' => 'getPimFilter_Form_Type_Filter_CategoryService',
            'pim_filter.form.type.filter.metric' => 'getPimFilter_Form_Type_Filter_MetricService',
            'pim_filter.form.type.filter.price' => 'getPimFilter_Form_Type_Filter_PriceService',
            'pim_filter.form.type.filter.scope' => 'getPimFilter_Form_Type_Filter_ScopeService',
            'pim_filter.product_category_filter' => 'getPimFilter_ProductCategoryFilterService',
            'pim_filter.product_completeness_filter' => 'getPimFilter_ProductCompletenessFilterService',
            'pim_filter.product_date_filter' => 'getPimFilter_ProductDateFilterService',
            'pim_filter.product_enabled_filter' => 'getPimFilter_ProductEnabledFilterService',
            'pim_filter.product_family_filter' => 'getPimFilter_ProductFamilyFilterService',
            'pim_filter.product_groups_filter' => 'getPimFilter_ProductGroupsFilterService',
            'pim_filter.product_in_group_filter' => 'getPimFilter_ProductInGroupFilterService',
            'pim_filter.product_is_associated_filter' => 'getPimFilter_ProductIsAssociatedFilterService',
            'pim_filter.product_scope_filter' => 'getPimFilter_ProductScopeFilterService',
            'pim_filter.product_utility' => 'getPimFilter_ProductUtilityService',
            'pim_filter.product_value_boolean' => 'getPimFilter_ProductValueBooleanService',
            'pim_filter.product_value_choice' => 'getPimFilter_ProductValueChoiceService',
            'pim_filter.product_value_date' => 'getPimFilter_ProductValueDateService',
            'pim_filter.product_value_datetime' => 'getPimFilter_ProductValueDatetimeService',
            'pim_filter.product_value_metric' => 'getPimFilter_ProductValueMetricService',
            'pim_filter.product_value_number' => 'getPimFilter_ProductValueNumberService',
            'pim_filter.product_value_price' => 'getPimFilter_ProductValuePriceService',
            'pim_filter.product_value_string' => 'getPimFilter_ProductValueStringService',
            'pim_import_export.controller.export_execution' => 'getPimImportExport_Controller_ExportExecutionService',
            'pim_import_export.controller.export_profile' => 'getPimImportExport_Controller_ExportProfileService',
            'pim_import_export.controller.import_execution' => 'getPimImportExport_Controller_ImportExecutionService',
            'pim_import_export.controller.import_profile' => 'getPimImportExport_Controller_ImportProfileService',
            'pim_import_export.datagrid.provider.job' => 'getPimImportExport_Datagrid_Provider_JobService',
            'pim_import_export.event_listener.inject_job_type' => 'getPimImportExport_EventListener_InjectJobTypeService',
            'pim_import_export.factory.job_notification' => 'getPimImportExport_Factory_JobNotificationService',
            'pim_import_export.form.jobinstance' => 'getPimImportExport_Form_JobinstanceService',
            'pim_import_export.form.type.job_instance' => 'getPimImportExport_Form_Type_JobInstanceService',
            'pim_import_export.job_label.translated_label_provider' => 'getPimImportExport_JobLabel_TranslatedLabelProviderService',
            'pim_import_export.manager.job_execution' => 'getPimImportExport_Manager_JobExecutionService',
            'pim_import_export.normalizer.job_execution' => 'getPimImportExport_Normalizer_JobExecutionService',
            'pim_import_export.normalizer.step_execution' => 'getPimImportExport_Normalizer_StepExecutionService',
            'pim_import_export.repository.job_execution' => 'getPimImportExport_Repository_JobExecutionService',
            'pim_import_export.repository.job_instance' => 'getPimImportExport_Repository_JobInstanceService',
            'pim_import_export.validator.constraints.filter_data_validator' => 'getPimImportExport_Validator_Constraints_FilterDataValidatorService',
            'pim_import_export.validator.constraints.filter_structure_attribute_validator' => 'getPimImportExport_Validator_Constraints_FilterStructureAttributeValidatorService',
            'pim_import_export.validator.constraints.filter_structure_locale_validator' => 'getPimImportExport_Validator_Constraints_FilterStructureLocaleValidatorService',
            'pim_installer.directories_registry' => 'getPimInstaller_DirectoriesRegistryService',
            'pim_installer.fixture_loader.job_instances_builder' => 'getPimInstaller_FixtureLoader_JobInstancesBuilderService',
            'pim_installer.fixture_loader.job_instances_configurator' => 'getPimInstaller_FixtureLoader_JobInstancesConfiguratorService',
            'pim_installer.fixture_loader.job_loader' => 'getPimInstaller_FixtureLoader_JobLoaderService',
            'pim_installer.fixture_loader.path_provider' => 'getPimInstaller_FixtureLoader_PathProviderService',
            'pim_installer.job.fixtures_association_type_csv' => 'getPimInstaller_Job_FixturesAssociationTypeCsvService',
            'pim_installer.job.fixtures_attribute_csv' => 'getPimInstaller_Job_FixturesAttributeCsvService',
            'pim_installer.job.fixtures_attribute_group_csv' => 'getPimInstaller_Job_FixturesAttributeGroupCsvService',
            'pim_installer.job.fixtures_attribute_options_csv' => 'getPimInstaller_Job_FixturesAttributeOptionsCsvService',
            'pim_installer.job.fixtures_category_csv' => 'getPimInstaller_Job_FixturesCategoryCsvService',
            'pim_installer.job.fixtures_channel_csv' => 'getPimInstaller_Job_FixturesChannelCsvService',
            'pim_installer.job.fixtures_currency_csv' => 'getPimInstaller_Job_FixturesCurrencyCsvService',
            'pim_installer.job.fixtures_family_csv' => 'getPimInstaller_Job_FixturesFamilyCsvService',
            'pim_installer.job.fixtures_group_csv' => 'getPimInstaller_Job_FixturesGroupCsvService',
            'pim_installer.job.fixtures_group_type_csv' => 'getPimInstaller_Job_FixturesGroupTypeCsvService',
            'pim_installer.job.fixtures_job_yml' => 'getPimInstaller_Job_FixturesJobYmlService',
            'pim_installer.job.fixtures_locale_csv' => 'getPimInstaller_Job_FixturesLocaleCsvService',
            'pim_installer.job.fixtures_product_csv' => 'getPimInstaller_Job_FixturesProductCsvService',
            'pim_installer.job.fixtures_user_csv' => 'getPimInstaller_Job_FixturesUserCsvService',
            'pim_installer.job.fixtures_user_group_csv' => 'getPimInstaller_Job_FixturesUserGroupCsvService',
            'pim_installer.job.fixtures_user_role_csv' => 'getPimInstaller_Job_FixturesUserRoleCsvService',
            'pim_installer.job.fixtures_variant_group_csv' => 'getPimInstaller_Job_FixturesVariantGroupCsvService',
            'pim_installer.job_parameters.constraints.product_csv_import' => 'getPimInstaller_JobParameters_Constraints_ProductCsvImportService',
            'pim_installer.job_parameters.constraints.simple_csv_import' => 'getPimInstaller_JobParameters_Constraints_SimpleCsvImportService',
            'pim_installer.job_parameters.constraints.simple_yaml_import' => 'getPimInstaller_JobParameters_Constraints_SimpleYamlImportService',
            'pim_installer.job_parameters.constraints.variant_group_csv_import' => 'getPimInstaller_JobParameters_Constraints_VariantGroupCsvImportService',
            'pim_installer.job_parameters.defaults.product_csv_import' => 'getPimInstaller_JobParameters_Defaults_ProductCsvImportService',
            'pim_installer.job_parameters.defaults.simple_csv_import' => 'getPimInstaller_JobParameters_Defaults_SimpleCsvImportService',
            'pim_installer.job_parameters.defaults.simple_yaml_import' => 'getPimInstaller_JobParameters_Defaults_SimpleYamlImportService',
            'pim_installer.job_parameters.defaults.variant_group_csv_import' => 'getPimInstaller_JobParameters_Defaults_VariantGroupCsvImportService',
            'pim_installer.processor.denormalization.job_instance' => 'getPimInstaller_Processor_Denormalization_JobInstanceService',
            'pim_installer.step.fixtures_attribute_group_csv.import' => 'getPimInstaller_Step_FixturesAttributeGroupCsv_ImportService',
            'pim_installer.step.fixtures_channel_csv.import' => 'getPimInstaller_Step_FixturesChannelCsv_ImportService',
            'pim_installer.step.fixtures_currency_csv.import' => 'getPimInstaller_Step_FixturesCurrencyCsv_ImportService',
            'pim_installer.step.fixtures_group_type_csv.import' => 'getPimInstaller_Step_FixturesGroupTypeCsv_ImportService',
            'pim_installer.step.fixtures_job_yml.import' => 'getPimInstaller_Step_FixturesJobYml_ImportService',
            'pim_installer.step.fixtures_locale_csv.import' => 'getPimInstaller_Step_FixturesLocaleCsv_ImportService',
            'pim_installer.step.fixtures_user_csv.import' => 'getPimInstaller_Step_FixturesUserCsv_ImportService',
            'pim_installer.step.fixtures_user_group_csv.import' => 'getPimInstaller_Step_FixturesUserGroupCsv_ImportService',
            'pim_installer.step.fixtures_user_role_csv.import' => 'getPimInstaller_Step_FixturesUserRoleCsv_ImportService',
            'pim_installer.updater.job_instance' => 'getPimInstaller_Updater_JobInstanceService',
            'pim_installer.yaml_persister' => 'getPimInstaller_YamlPersisterService',
            'pim_internal_api_serializer' => 'getPimInternalApiSerializerService',
            'pim_locale.locale_listener' => 'getPimLocale_LocaleListenerService',
            'pim_locale.locale_subscriber' => 'getPimLocale_LocaleSubscriberService',
            'pim_localization.controller.format' => 'getPimLocalization_Controller_FormatService',
            'pim_localization.controller.locale' => 'getPimLocalization_Controller_LocaleService',
            'pim_localization.form.type.locale' => 'getPimLocalization_Form_Type_LocaleService',
            'pim_localization.provider.ui_locale' => 'getPimLocalization_Provider_UiLocaleService',
            'pim_localization.twig.attribute_extension' => 'getPimLocalization_Twig_AttributeExtensionService',
            'pim_localization.twig.attribute_option_extension' => 'getPimLocalization_Twig_AttributeOptionExtensionService',
            'pim_localization.twig.locale_extension' => 'getPimLocalization_Twig_LocaleExtensionService',
            'pim_localization.updater.translatable' => 'getPimLocalization_Updater_TranslatableService',
            'pim_navigation.repository.navigation_history' => 'getPimNavigation_Repository_NavigationHistoryService',
            'pim_navigation.saver.navigation_history_item' => 'getPimNavigation_Saver_NavigationHistoryItemService',
            'pim_notification.controller.notification' => 'getPimNotification_Controller_NotificationService',
            'pim_notification.email.email_notifier' => 'getPimNotification_Email_EmailNotifierService',
            'pim_notification.event_subscriber.job_execution_notifier' => 'getPimNotification_EventSubscriber_JobExecutionNotifierService',
            'pim_notification.factory.notification' => 'getPimNotification_Factory_NotificationService',
            'pim_notification.factory.user_notification' => 'getPimNotification_Factory_UserNotificationService',
            'pim_notification.manager.notification' => 'getPimNotification_Manager_NotificationService',
            'pim_notification.notifier' => 'getPimNotification_NotifierService',
            'pim_notification.registry.factory.notification' => 'getPimNotification_Registry_Factory_NotificationService',
            'pim_notification.remover.notification' => 'getPimNotification_Remover_NotificationService',
            'pim_notification.remover.user_notification' => 'getPimNotification_Remover_UserNotificationService',
            'pim_notification.repository.user_notification' => 'getPimNotification_Repository_UserNotificationService',
            'pim_notification.saver.notification' => 'getPimNotification_Saver_NotificationService',
            'pim_notification.saver.user_notification' => 'getPimNotification_Saver_UserNotificationService',
            'pim_notification.twig.notification_extension' => 'getPimNotification_Twig_NotificationExtensionService',
            'pim_pdf_generator.builder.dompdf' => 'getPimPdfGenerator_Builder_DompdfService',
            'pim_pdf_generator.controller.product' => 'getPimPdfGenerator_Controller_ProductService',
            'pim_pdf_generator.renderer.product_pdf' => 'getPimPdfGenerator_Renderer_ProductPdfService',
            'pim_pdf_generator.renderer.registry' => 'getPimPdfGenerator_Renderer_RegistryService',
            'pim_reference_data.attributetype.multiselect' => 'getPimReferenceData_Attributetype_MultiselectService',
            'pim_reference_data.attributetype.simpleselect' => 'getPimReferenceData_Attributetype_SimpleselectService',
            'pim_reference_data.controller.configuration_rest' => 'getPimReferenceData_Controller_ConfigurationRestService',
            'pim_reference_data.denormalizer.reference_data' => 'getPimReferenceData_Denormalizer_ReferenceDataService',
            'pim_reference_data.denormalizer.reference_data_collection' => 'getPimReferenceData_Denormalizer_ReferenceDataCollectionService',
            'pim_reference_data.doctrine.query.filter.reference_data' => 'getPimReferenceData_Doctrine_Query_Filter_ReferenceDataService',
            'pim_reference_data.doctrine.query.sorter.reference_data' => 'getPimReferenceData_Doctrine_Query_Sorter_ReferenceDataService',
            'pim_reference_data.enrich.provider.empty_value.reference_data' => 'getPimReferenceData_Enrich_Provider_EmptyValue_ReferenceDataService',
            'pim_reference_data.enrich.provider.field.reference_data' => 'getPimReferenceData_Enrich_Provider_Field_ReferenceDataService',
            'pim_reference_data.enrich.provider.filter.reference_data' => 'getPimReferenceData_Enrich_Provider_Filter_ReferenceDataService',
            'pim_reference_data.extension.formatter.property.product_value.reference_data_property' => 'getPimReferenceData_Extension_Formatter_Property_ProductValue_ReferenceDataPropertyService',
            'pim_reference_data.extension.selector.orm.reference_data' => 'getPimReferenceData_Extension_Selector_Orm_ReferenceDataService',
            'pim_reference_data.extension.sorter.reference_data_sorter' => 'getPimReferenceData_Extension_Sorter_ReferenceDataSorterService',
            'pim_reference_data.filter.reference_data' => 'getPimReferenceData_Filter_ReferenceDataService',
            'pim_reference_data.id_resolver' => 'getPimReferenceData_IdResolverService',
            'pim_reference_data.label_renderer' => 'getPimReferenceData_LabelRendererService',
            'pim_reference_data.method_guesser' => 'getPimReferenceData_MethodGuesserService',
            'pim_reference_data.normalizer.configuration' => 'getPimReferenceData_Normalizer_ConfigurationService',
            'pim_reference_data.normalizer.flat.reference_data' => 'getPimReferenceData_Normalizer_Flat_ReferenceDataService',
            'pim_reference_data.registry' => 'getPimReferenceData_RegistryService',
            'pim_reference_data.repository_resolver' => 'getPimReferenceData_RepositoryResolverService',
            'pim_serializer' => 'getPimSerializerService',
            'pim_ui.controller.ajax_option' => 'getPimUi_Controller_AjaxOptionService',
            'pim_ui.form.extension.help' => 'getPimUi_Form_Extension_HelpService',
            'pim_ui.form.extension.select2' => 'getPimUi_Form_Extension_Select2Service',
            'pim_ui.form.transformer.ajax_creatable_entity.factory' => 'getPimUi_Form_Transformer_AjaxCreatableEntity_FactoryService',
            'pim_ui.form.transformer.ajax_entity.factory' => 'getPimUi_Form_Transformer_AjaxEntity_FactoryService',
            'pim_ui.form.transformer.ajax_reference_data.factory' => 'getPimUi_Form_Transformer_AjaxReferenceData_FactoryService',
            'pim_ui.form.type.ajax_entity' => 'getPimUi_Form_Type_AjaxEntityService',
            'pim_ui.form.type.ajax_reference_data' => 'getPimUi_Form_Type_AjaxReferenceDataService',
            'pim_ui.form.type.date' => 'getPimUi_Form_Type_DateService',
            'pim_ui.form.type.number' => 'getPimUi_Form_Type_NumberService',
            'pim_ui.form.type.switch' => 'getPimUi_Form_Type_SwitchService',
            'pim_ui.twig.ceil_extension' => 'getPimUi_Twig_CeilExtensionService',
            'pim_ui.twig.date_extension' => 'getPimUi_Twig_DateExtensionService',
            'pim_ui.twig.md5_extension' => 'getPimUi_Twig_Md5ExtensionService',
            'pim_ui.twig.ui_extension' => 'getPimUi_Twig_UiExtensionService',
            'pim_user.context.user' => 'getPimUser_Context_UserService',
            'pim_user.controller.security_rest' => 'getPimUser_Controller_SecurityRestService',
            'pim_user.controller.user_group_rest' => 'getPimUser_Controller_UserGroupRestService',
            'pim_user.controller.user_rest' => 'getPimUser_Controller_UserRestService',
            'pim_user.event_listener.group_users_grid_listener' => 'getPimUser_EventListener_GroupUsersGridListenerService',
            'pim_user.event_listener.role_users_grid_listener' => 'getPimUser_EventListener_RoleUsersGridListenerService',
            'pim_user.event_subscriber.group' => 'getPimUser_EventSubscriber_GroupService',
            'pim_user.event_subscriber.user_preferences' => 'getPimUser_EventSubscriber_UserPreferencesService',
            'pim_user.factory.group' => 'getPimUser_Factory_GroupService',
            'pim_user.factory.role' => 'getPimUser_Factory_RoleService',
            'pim_user.factory.user' => 'getPimUser_Factory_UserService',
            'pim_user.form.subscriber.user_preferences' => 'getPimUser_Form_Subscriber_UserPreferencesService',
            'pim_user.form.type.acl_access_level_selector' => 'getPimUser_Form_Type_AclAccessLevelSelectorService',
            'pim_user.form.type.acl_collection' => 'getPimUser_Form_Type_AclCollectionService',
            'pim_user.form.type.user' => 'getPimUser_Form_Type_UserService',
            'pim_user.normalizer.user' => 'getPimUser_Normalizer_UserService',
            'pim_user.provider.user' => 'getPimUser_Provider_UserService',
            'pim_user.repository.group' => 'getPimUser_Repository_GroupService',
            'pim_user.repository.role' => 'getPimUser_Repository_RoleService',
            'pim_user.repository.user' => 'getPimUser_Repository_UserService',
            'pim_user.saver.group' => 'getPimUser_Saver_GroupService',
            'pim_user.saver.role' => 'getPimUser_Saver_RoleService',
            'pim_user.saver.user' => 'getPimUser_Saver_UserService',
            'pim_user.twig.acl_groups_extension' => 'getPimUser_Twig_AclGroupsExtensionService',
            'pim_user.updater.group' => 'getPimUser_Updater_GroupService',
            'pim_user.updater.role' => 'getPimUser_Updater_RoleService',
            'pim_user.updater.user' => 'getPimUser_Updater_UserService',
            'pim_user.view_element.user.tab.additional' => 'getPimUser_ViewElement_User_Tab_AdditionalService',
            'pim_user.view_element.user.tab.general' => 'getPimUser_ViewElement_User_Tab_GeneralService',
            'pim_user.view_element.user.tab.group_and_role' => 'getPimUser_ViewElement_User_Tab_GroupAndRoleService',
            'pim_user.view_element.user.tab.interfaces' => 'getPimUser_ViewElement_User_Tab_InterfacesService',
            'pim_user.view_element.user.tab.password' => 'getPimUser_ViewElement_User_Tab_PasswordService',
            'pim_user.view_element.visibility_checker.groups_and_roles' => 'getPimUser_ViewElement_VisibilityChecker_GroupsAndRolesService',
            'pim_versioning.builder.version' => 'getPimVersioning_Builder_VersionService',
            'pim_versioning.context.version' => 'getPimVersioning_Context_VersionService',
            'pim_versioning.event_subscriber.add_remove_version' => 'getPimVersioning_EventSubscriber_AddRemoveVersionService',
            'pim_versioning.event_subscriber.addcontext' => 'getPimVersioning_EventSubscriber_AddcontextService',
            'pim_versioning.event_subscriber.adduser' => 'getPimVersioning_EventSubscriber_AdduserService',
            'pim_versioning.event_subscriber.addversion' => 'getPimVersioning_EventSubscriber_AddversionService',
            'pim_versioning.event_subscriber.purge_progress_bar_advancer' => 'getPimVersioning_EventSubscriber_PurgeProgressBarAdvancerService',
            'pim_versioning.event_subscriber.timestampable' => 'getPimVersioning_EventSubscriber_TimestampableService',
            'pim_versioning.factory.version' => 'getPimVersioning_Factory_VersionService',
            'pim_versioning.factory.version_cursor' => 'getPimVersioning_Factory_VersionCursorService',
            'pim_versioning.manager.version' => 'getPimVersioning_Manager_VersionService',
            'pim_versioning.purger.advisor.skip_first_version' => 'getPimVersioning_Purger_Advisor_SkipFirstVersionService',
            'pim_versioning.purger.advisor.skip_last_version' => 'getPimVersioning_Purger_Advisor_SkipLastVersionService',
            'pim_versioning.purger.version' => 'getPimVersioning_Purger_VersionService',
            'pim_versioning.remover.version' => 'getPimVersioning_Remover_VersionService',
            'pim_versioning.repository.version' => 'getPimVersioning_Repository_VersionService',
            'pim_versioning.saver.version' => 'getPimVersioning_Saver_VersionService',
            'pim_versioning.serializer' => 'getPimVersioning_SerializerService',
            'pim_versioning.serializer.normalizer.flat.association_type' => 'getPimVersioning_Serializer_Normalizer_Flat_AssociationTypeService',
            'pim_versioning.serializer.normalizer.flat.attribute' => 'getPimVersioning_Serializer_Normalizer_Flat_AttributeService',
            'pim_versioning.serializer.normalizer.flat.attribute_group' => 'getPimVersioning_Serializer_Normalizer_Flat_AttributeGroupService',
            'pim_versioning.serializer.normalizer.flat.category' => 'getPimVersioning_Serializer_Normalizer_Flat_CategoryService',
            'pim_versioning.serializer.normalizer.flat.channel' => 'getPimVersioning_Serializer_Normalizer_Flat_ChannelService',
            'pim_versioning.serializer.normalizer.flat.collection' => 'getPimVersioning_Serializer_Normalizer_Flat_CollectionService',
            'pim_versioning.serializer.normalizer.flat.datetime' => 'getPimVersioning_Serializer_Normalizer_Flat_DatetimeService',
            'pim_versioning.serializer.normalizer.flat.family' => 'getPimVersioning_Serializer_Normalizer_Flat_FamilyService',
            'pim_versioning.serializer.normalizer.flat.file' => 'getPimVersioning_Serializer_Normalizer_Flat_FileService',
            'pim_versioning.serializer.normalizer.flat.group' => 'getPimVersioning_Serializer_Normalizer_Flat_GroupService',
            'pim_versioning.serializer.normalizer.flat.job_instance' => 'getPimVersioning_Serializer_Normalizer_Flat_JobInstanceService',
            'pim_versioning.serializer.normalizer.flat.label_translation' => 'getPimVersioning_Serializer_Normalizer_Flat_LabelTranslationService',
            'pim_versioning.serializer.normalizer.flat.locale' => 'getPimVersioning_Serializer_Normalizer_Flat_LocaleService',
            'pim_versioning.serializer.normalizer.flat.metric' => 'getPimVersioning_Serializer_Normalizer_Flat_MetricService',
            'pim_versioning.serializer.normalizer.flat.option' => 'getPimVersioning_Serializer_Normalizer_Flat_OptionService',
            'pim_versioning.serializer.normalizer.flat.price' => 'getPimVersioning_Serializer_Normalizer_Flat_PriceService',
            'pim_versioning.serializer.normalizer.flat.product' => 'getPimVersioning_Serializer_Normalizer_Flat_ProductService',
            'pim_versioning.serializer.normalizer.flat.product_value' => 'getPimVersioning_Serializer_Normalizer_Flat_ProductValueService',
            'pim_versioning.serializer.normalizer.flat.proxy_group' => 'getPimVersioning_Serializer_Normalizer_Flat_ProxyGroupService',
            'pim_versioning.serializer.normalizer.flat.variant_group' => 'getPimVersioning_Serializer_Normalizer_Flat_VariantGroupService',
            'pim_versioning.update_guesser.attribute_group' => 'getPimVersioning_UpdateGuesser_AttributeGroupService',
            'pim_versioning.update_guesser.attribute_option' => 'getPimVersioning_UpdateGuesser_AttributeOptionService',
            'pim_versioning.update_guesser.chained' => 'getPimVersioning_UpdateGuesser_ChainedService',
            'pim_versioning.update_guesser.contains_products' => 'getPimVersioning_UpdateGuesser_ContainsProductsService',
            'pim_versioning.update_guesser.product_value' => 'getPimVersioning_UpdateGuesser_ProductValueService',
            'pim_versioning.update_guesser.translations' => 'getPimVersioning_UpdateGuesser_TranslationsService',
            'pim_versioning.update_guesser.variant_group' => 'getPimVersioning_UpdateGuesser_VariantGroupService',
            'pim_versioning.update_guesser.versionable' => 'getPimVersioning_UpdateGuesser_VersionableService',
            'profiler' => 'getProfilerService',
            'profiler_listener' => 'getProfilerListenerService',
            'property_accessor' => 'getPropertyAccessorService',
            'request' => 'getRequestService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'router' => 'getRouterService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.access.decision_manager' => 'getSecurity_Access_DecisionManagerService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.acl.cache' => 'getSecurity_Acl_CacheService',
            'security.acl.dbal.schema' => 'getSecurity_Acl_Dbal_SchemaService',
            'security.acl.dbal.schema_listener' => 'getSecurity_Acl_Dbal_SchemaListenerService',
            'security.acl.provider' => 'getSecurity_Acl_ProviderService',
            'security.acl.voter.basic_permissions' => 'getSecurity_Acl_Voter_BasicPermissionsService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.context' => 'getSecurity_ContextService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.install' => 'getSecurity_Firewall_Map_Context_InstallService',
            'security.firewall.map.context.liip_imagine' => 'getSecurity_Firewall_Map_Context_LiipImagineService',
            'security.firewall.map.context.login' => 'getSecurity_Firewall_Map_Context_LoginService',
            'security.firewall.map.context.main' => 'getSecurity_Firewall_Map_Context_MainService',
            'security.firewall.map.context.reset_password' => 'getSecurity_Firewall_Map_Context_ResetPasswordService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.secure_random' => 'getSecurity_SecureRandomService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user.provider.concrete.chain_provider' => 'getSecurity_User_Provider_Concrete_ChainProviderService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_distribution.security_checker' => 'getSensioDistribution_SecurityCheckerService',
            'sensio_distribution.security_checker.command' => 'getSensioDistribution_SecurityChecker_CommandService',
            'sensio_distribution.webconfigurator' => 'getSensioDistribution_WebconfiguratorService',
            'sensio_framework_extra.cache.listener' => 'getSensioFrameworkExtra_Cache_ListenerService',
            'sensio_framework_extra.controller.listener' => 'getSensioFrameworkExtra_Controller_ListenerService',
            'sensio_framework_extra.converter.datetime' => 'getSensioFrameworkExtra_Converter_DatetimeService',
            'sensio_framework_extra.converter.doctrine.orm' => 'getSensioFrameworkExtra_Converter_Doctrine_OrmService',
            'sensio_framework_extra.converter.listener' => 'getSensioFrameworkExtra_Converter_ListenerService',
            'sensio_framework_extra.converter.manager' => 'getSensioFrameworkExtra_Converter_ManagerService',
            'sensio_framework_extra.security.listener' => 'getSensioFrameworkExtra_Security_ListenerService',
            'sensio_framework_extra.view.guesser' => 'getSensioFrameworkExtra_View_GuesserService',
            'sensio_framework_extra.view.listener' => 'getSensioFrameworkExtra_View_ListenerService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.handler.pdo' => 'getSession_Handler_PdoService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'stof_doctrine_extensions.event_listener.locale' => 'getStofDoctrineExtensions_EventListener_LocaleService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.spool' => 'getSwiftmailer_Mailer_Default_SpoolService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'swiftmailer.mailer.default.transport.eventdispatcher' => 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService',
            'swiftmailer.mailer.default.transport.real' => 'getSwiftmailer_Mailer_Default_Transport_RealService',
            'templating' => 'getTemplatingService',
            'templating.engine.php' => 'getTemplating_Engine_PhpService',
            'templating.engine.twig' => 'getTemplating_Engine_TwigService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.globals' => 'getTemplating_GlobalsService',
            'templating.helper.actions' => 'getTemplating_Helper_ActionsService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.code' => 'getTemplating_Helper_CodeService',
            'templating.helper.form' => 'getTemplating_Helper_FormService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.request' => 'getTemplating_Helper_RequestService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.helper.session' => 'getTemplating_Helper_SessionService',
            'templating.helper.slots' => 'getTemplating_Helper_SlotsService',
            'templating.helper.stopwatch' => 'getTemplating_Helper_StopwatchService',
            'templating.helper.translator' => 'getTemplating_Helper_TranslatorService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator' => 'getTranslatorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.extension.intl' => 'getTwig_Extension_IntlService',
            'twig.extension.jsformvalidation' => 'getTwig_Extension_JsformvalidationService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'validator.validator_factory' => 'getValidator_ValidatorFactoryService',
            'var_dumper.cli_dumper' => 'getVarDumper_CliDumperService',
            'var_dumper.cloner' => 'getVarDumper_ClonerService',
            'web_profiler.controller.exception' => 'getWebProfiler_Controller_ExceptionService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
            'web_profiler.debug_toolbar' => 'getWebProfiler_DebugToolbarService',
        );
        $this->aliases = array(
            'console.command.sensiolabs_security_command_securitycheckercommand' => 'sensio_distribution.security_checker.command',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'fos_rest.router' => 'router',
            'fos_rest.templating' => 'templating',
            'jsfv' => 'jsfv.generator',
            'mailer' => 'swiftmailer.mailer.default',
            'pim_catalog.object_manager.association' => 'doctrine.orm.default_entity_manager',
            'pim_catalog.object_manager.product' => 'doctrine.orm.default_entity_manager',
            'pim_catalog.updater.category' => 'pim_catalog.updater.category_translatable',
            'pim_versioning.object_manager.version' => 'doctrine.orm.default_entity_manager',
            'security.acl.dbal.connection' => 'doctrine.dbal.default_connection',
            'sensio.distribution.webconfigurator' => 'sensio_distribution.webconfigurator',
            'serializer' => 'jms_serializer',
            'session.handler' => 'session.handler.pdo',
            'session.storage' => 'session.storage.native',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.spool' => 'swiftmailer.mailer.default.spool',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
            'swiftmailer.transport.real' => 'swiftmailer.mailer.default.transport.real',
        );
    }
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped frozen container.');
    }
    protected function getAkeneoBatch_Job_JobParameters_ConstraintCollectionProviderRegistryService()
    {
        $this->services['akeneo_batch.job.job_parameters.constraint_collection_provider_registry'] = $instance = new \Akeneo\Component\Batch\Job\JobParameters\ConstraintCollectionProviderRegistry();
        $instance->register($this->get('pim_installer.job_parameters.constraints.simple_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.constraints.product_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.constraints.variant_group_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.constraints.simple_yaml_import'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_mass_edit'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_csv_quick_export'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_xlsx_quick_export'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.constraint_collection_provider.simple_mass_edit'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.product_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.product_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_import'));
        return $instance;
    }
    protected function getAkeneoBatch_Job_JobParameters_DefaultValuesProviderRegistryService()
    {
        $this->services['akeneo_batch.job.job_parameters.default_values_provider_registry'] = $instance = new \Akeneo\Component\Batch\Job\JobParameters\DefaultValuesProviderRegistry();
        $instance->register($this->get('pim_installer.job_parameters.defaults.simple_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.defaults.product_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.defaults.variant_group_csv_import'));
        $instance->register($this->get('pim_installer.job_parameters.defaults.simple_yaml_import'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.default_values_provider.product_mass_edit'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.default_values_provider.product_csv_quick_export'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.default_values_provider.product_xlsx_quick_export'));
        $instance->register($this->get('pim_enrich.connector.job.job_parameters.default_values_provider.simple_mass_edit'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.product_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.product_xslx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.variant_group_csv_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_export'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.product_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.product_xlsx_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.variant_group_csv_import'));
        $instance->register($this->get('pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_import'));
        return $instance;
    }
    protected function getAkeneoBatch_Job_JobParametersValidatorService()
    {
        return $this->services['akeneo_batch.job.job_parameters_validator'] = new \Akeneo\Component\Batch\Job\JobParametersValidator($this->get('validator'), $this->get('akeneo_batch.job.job_parameters.constraint_collection_provider_registry'));
    }
    protected function getAkeneoBatch_Job_JobRegistryService()
    {
        $this->services['akeneo_batch.job.job_registry'] = $instance = new \Akeneo\Component\Batch\Job\JobRegistry();
        $instance->register($this->get('pim_installer.job.fixtures_category_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_attribute_group_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_channel_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_locale_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_currency_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_group_type_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_association_type_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_attribute_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_attribute_options_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_family_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_variant_group_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_product_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_user_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_user_role_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_user_group_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_group_csv'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_installer.job.fixtures_job_yml'), 'fixtures', 'Data fixtures');
        $instance->register($this->get('pim_enrich.job.csv_product_quick_export'), 'quick_export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_enrich.job.csv_product_grid_context_quick_export'), 'quick_export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_enrich.job.xlsx_product_quick_export'), 'quick_export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_enrich.job.xlsx_product_grid_context_quick_export'), 'quick_export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_enrich.job.update_product_value'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_enrich.job.add_product_value'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_enrich.job.remove_product_value'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_enrich.job.edit_common_attributes'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_enrich.job.set_attribute_requirements'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_enrich.job.add_to_variant_group'), 'mass_edit', 'Akeneo Mass Edit Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_option_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_association_type_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_family_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_group_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_product_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_category_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_variant_group_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_channel_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_locale_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_group_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_currency_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_group_type_import'), 'import', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_option_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_association_type_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_family_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_group_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_product_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_category_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_variant_group_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_channel_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_locale_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_attribute_group_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_currency_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.csv_group_type_export'), 'export', 'Akeneo CSV Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_option_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_association_type_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_family_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_group_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_product_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_category_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_variant_group_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_channel_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_locale_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_group_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_currency_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_group_type_import'), 'import', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_option_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_association_type_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job_name.xlsx_family_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_group_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_product_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_category_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_variant_group_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_channel_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_locale_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_attribute_group_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_currency_export'), 'export', 'Akeneo XLSX Connector');
        $instance->register($this->get('pim_connector.job.xlsx_group_type_export'), 'export', 'Akeneo XLSX Connector');
        return $instance;
    }
    protected function getAkeneoBatch_JobInstanceFactoryService()
    {
        return $this->services['akeneo_batch.job_instance_factory'] = new \Akeneo\Bundle\BatchBundle\Job\JobInstanceFactory('Akeneo\\Component\\Batch\\Model\\JobInstance');
    }
    protected function getAkeneoBatch_JobParametersFactoryService()
    {
        return $this->services['akeneo_batch.job_parameters_factory'] = new \Akeneo\Component\Batch\Job\JobParametersFactory($this->get('akeneo_batch.job.job_parameters.default_values_provider_registry'), 'Akeneo\\Component\\Batch\\Job\\JobParameters');
    }
    protected function getAkeneoBatch_JobRepositoryService()
    {
        return $this->services['akeneo_batch.job_repository'] = new \Akeneo\Bundle\BatchBundle\Job\DoctrineJobRepository($this->get('doctrine.orm.default_entity_manager'), 'Akeneo\\Component\\Batch\\Model\\JobExecution', 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'Pim\\Bundle\\ImportExportBundle\\Entity\\Repository\\JobInstanceRepository');
    }
    protected function getAkeneoBatch_Launcher_SimpleJobLauncherService()
    {
        return $this->services['akeneo_batch.launcher.simple_job_launcher'] = new \Akeneo\Bundle\BatchBundle\Launcher\SimpleJobLauncher($this->get('akeneo_batch.job_repository'), $this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.job.job_registry'), $this->targetDirs[2], 'dev');
    }
    protected function getAkeneoBatch_Logger_BatchLogHandlerService()
    {
        return $this->services['akeneo_batch.logger.batch_log_handler'] = new \Akeneo\Bundle\BatchBundle\Monolog\Handler\BatchLogHandler(100, true, NULL, false, ($this->targetDirs[2].'/logs/batch'));
    }
    protected function getAkeneoBatch_LoggerSubscriberService()
    {
        return $this->services['akeneo_batch.logger_subscriber'] = new \Akeneo\Bundle\BatchBundle\EventListener\LoggerSubscriber($this->get('monolog.logger.batch'), $this->get('translator'));
    }
    protected function getAkeneoBatch_MailNotifierService()
    {
        return $this->services['akeneo_batch.mail_notifier'] = new \Akeneo\Bundle\BatchBundle\Notification\MailNotifier($this->get('akeneo_batch.logger.batch_log_handler'), $this->get('security.token_storage'), $this->get('twig'), $this->get('swiftmailer.mailer.default'), 'batch@example.com');
    }
    protected function getAkeneoBatch_Manager_JobExecutionService()
    {
        return $this->services['akeneo_batch.manager.job_execution'] = new \Akeneo\Bundle\BatchBundle\Manager\JobExecutionManager($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getAkeneoBatch_NotificationSubscriberService()
    {
        $this->services['akeneo_batch.notification_subscriber'] = $instance = new \Akeneo\Bundle\BatchBundle\EventListener\NotificationSubscriber();
        $instance->registerNotifier($this->get('akeneo_batch.mail_notifier'));
        return $instance;
    }
    protected function getAkeneoBatch_Remover_JobInstanceService()
    {
        return $this->services['akeneo_batch.remover.job_instance'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Akeneo\\Component\\Batch\\Model\\JobInstance');
    }
    protected function getAkeneoBatch_Saver_JobInstanceService()
    {
        return $this->services['akeneo_batch.saver.job_instance'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Akeneo\\Component\\Batch\\Model\\JobInstance');
    }
    protected function getAkeneoBatch_SetJobExecutionLogFileSubscriberService()
    {
        return $this->services['akeneo_batch.set_job_execution_log_file_subscriber'] = new \Akeneo\Bundle\BatchBundle\EventListener\SetJobExecutionLogFileSubscriber($this->get('akeneo_batch.logger.batch_log_handler'));
    }
    protected function getAkeneoBatch_Updater_JobInstanceService()
    {
        return $this->services['akeneo_batch.updater.job_instance'] = new \Akeneo\Component\Batch\Updater\JobInstanceUpdater($this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getAkeneoBatch_Validator_JobInstanceService()
    {
        return $this->services['akeneo_batch.validator.job_instance'] = new \Akeneo\Bundle\BatchBundle\Validator\Constraints\JobInstanceValidator($this->get('akeneo_batch.job.job_registry'));
    }
    protected function getAkeneoBuffer_Factory_ArrayBufferService()
    {
        return $this->services['akeneo_buffer.factory.array_buffer'] = new \Akeneo\Component\Buffer\BufferFactory('Akeneo\\Component\\Buffer\\ArrayBuffer');
    }
    protected function getAkeneoBuffer_Factory_JsonFileBufferService()
    {
        return $this->services['akeneo_buffer.factory.json_file_buffer'] = new \Akeneo\Component\Buffer\BufferFactory('Akeneo\\Component\\Buffer\\JSONFileBuffer');
    }
    protected function getAkeneoFileStorage_FileStorage_File_FileFetcherService()
    {
        return $this->services['akeneo_file_storage.file_storage.file.file_fetcher'] = new \Akeneo\Component\FileStorage\File\FileFetcher($this->get('oneup_flysystem.tmp_storage_filesystem'));
    }
    protected function getAkeneoFileStorage_FileStorage_File_FileStorerService()
    {
        return $this->services['akeneo_file_storage.file_storage.file.file_storer'] = new \Akeneo\Component\FileStorage\File\FileStorer($this->get('oneup_flysystem.mount_manager'), $this->get('akeneo_file_storage.saver.file'), $this->get('akeneo_file_storage.file_storage.file_info_factory'));
    }
    protected function getAkeneoFileStorage_FileStorage_File_OutputFileFetcherService()
    {
        return $this->services['akeneo_file_storage.file_storage.file.output_file_fetcher'] = new \Akeneo\Component\FileStorage\File\OutputFileFetcher();
    }
    protected function getAkeneoFileStorage_FileStorage_FileInfoFactoryService()
    {
        return $this->services['akeneo_file_storage.file_storage.file_info_factory'] = new \Akeneo\Component\FileStorage\FileInfoFactory($this->get('akeneo_file_storage.file_storage.path_generator'), 'Akeneo\\Component\\FileStorage\\Model\\FileInfo');
    }
    protected function getAkeneoFileStorage_FileStorage_FilesystemProviderService()
    {
        return $this->services['akeneo_file_storage.file_storage.filesystem_provider'] = new \Akeneo\Component\FileStorage\FilesystemProvider($this->get('oneup_flysystem.mount_manager'));
    }
    protected function getAkeneoFileStorage_FileStorage_Formater_BytesService()
    {
        return $this->services['akeneo_file_storage.file_storage.formater.bytes'] = new \Akeneo\Component\FileStorage\Formater\BytesFormater();
    }
    protected function getAkeneoFileStorage_FileStorage_PathGeneratorService()
    {
        return $this->services['akeneo_file_storage.file_storage.path_generator'] = new \Akeneo\Component\FileStorage\PathGenerator();
    }
    protected function getAkeneoFileStorage_Form_Type_FileInfoService()
    {
        return $this->services['akeneo_file_storage.form.type.file_info'] = new \Akeneo\Bundle\FileStorageBundle\Form\Type\FileInfoType('Akeneo\\Component\\FileStorage\\Model\\FileInfo');
    }
    protected function getAkeneoFileStorage_Repository_FileInfoService()
    {
        return $this->services['akeneo_file_storage.repository.file_info'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Akeneo\\Component\\FileStorage\\Model\\FileInfo');
    }
    protected function getAkeneoFileStorage_Saver_FileService()
    {
        return $this->services['akeneo_file_storage.saver.file'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Akeneo\\Component\\FileStorage\\Model\\FileInfoInterface');
    }
    protected function getAkeneoMeasure_ManagerService()
    {
        $this->services['akeneo_measure.manager'] = $instance = new \Akeneo\Bundle\MeasureBundle\Manager\MeasureManager();
        $instance->setMeasureConfig(array('Area' => array('standard' => 'SQUARE_METER', 'units' => array('SQUARE_MILLIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mm²'), 'SQUARE_CENTIMETER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'cm²'), 'SQUARE_DECIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'dm²'), 'SQUARE_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm²'), 'CENTIARE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'ca'), 'SQUARE_DEKAMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'dam²'), 'ARE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'a'), 'SQUARE_HECTOMETER' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'hm²'), 'HECTARE' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'ha'), 'SQUARE_KILOMETER' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'km²'), 'SQUARE_MIL' => array('convert' => array(0 => array('mul' => 6.4515999999999997E-10)), 'symbol' => 'sq mil'), 'SQUARE_INCH' => array('convert' => array(0 => array('mul' => 0.00064515999999999998)), 'symbol' => 'in²'), 'SQUARE_FOOT' => array('convert' => array(0 => array('mul' => 0.092903040000000006)), 'symbol' => 'ft²'), 'SQUARE_YARD' => array('convert' => array(0 => array('mul' => 0.83612735999999999)), 'symbol' => 'yd²'), 'ARPENT' => array('convert' => array(0 => array('mul' => 3418.8899999999999)), 'symbol' => 'arpent'), 'ACRE' => array('convert' => array(0 => array('mul' => 4046.8564219999998)), 'symbol' => 'A'), 'SQUARE_FURLONG' => array('convert' => array(0 => array('mul' => 40468.726000000002)), 'symbol' => 'fur²'), 'SQUARE_MILE' => array('convert' => array(0 => array('mul' => 2589988.1103360001)), 'symbol' => 'mi²'))), 'Binary' => array('standard' => 'BYTE', 'units' => array('BIT' => array('convert' => array(0 => array('mul' => 0.125)), 'symbol' => 'b'), 'BYTE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'B'), 'KILOBYTE' => array('convert' => array(0 => array('mul' => 1024)), 'symbol' => 'kB'), 'MEGABYTE' => array('convert' => array(0 => array('mul' => 1048576)), 'symbol' => 'MB'), 'GIGABYTE' => array('convert' => array(0 => array('mul' => 1073741824)), 'symbol' => 'GB'), 'TERABYTE' => array('convert' => array(0 => array('mul' => 1099511627776)), 'symbol' => 'TB'))), 'Decibel' => array('standard' => 'DECIBEL', 'units' => array('DECIBEL' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'dB'))), 'Frequency' => array('standard' => 'HERTZ', 'units' => array('HERTZ' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Hz'), 'KILOHERTZ' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kHz'), 'MEGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MHz'), 'GIGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GHz'), 'TERAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'THz'))), 'Length' => array('standard' => 'METER', 'units' => array('MILLIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mm'), 'CENTIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cm'), 'DECIMETER' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dm'), 'METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm'), 'DEKAMETER' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'dam'), 'HECTOMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hm'), 'KILOMETER' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'km'), 'MIL' => array('convert' => array(0 => array('mul' => 2.5400000000000001E-5)), 'symbol' => 'mil'), 'INCH' => array('convert' => array(0 => array('mul' => 0.025399999999999999)), 'symbol' => 'in'), 'FEET' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ft'), 'YARD' => array('convert' => array(0 => array('mul' => 0.91439999999999999)), 'symbol' => 'yd'), 'CHAIN' => array('convert' => array(0 => array('mul' => 20.116800000000001)), 'symbol' => 'ch'), 'FURLONG' => array('convert' => array(0 => array('mul' => 201.16800000000001)), 'symbol' => 'fur'), 'MILE' => array('convert' => array(0 => array('mul' => 1609.3440000000001)), 'symbol' => 'mi'))), 'Power' => array('standard' => 'WATT', 'units' => array('WATT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'W'), 'KILOWATT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kW'), 'MEGAWATT' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MW'), 'GIGAWATT' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GW'), 'TERAWATT' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'TW'))), 'Voltage' => array('standard' => 'VOLT', 'units' => array('MILLIVOLT' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mV'), 'CENTIVOLT' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cV'), 'DECIVOLT' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dV'), 'VOLT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'V'), 'DEKAVOLT' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daV'), 'HECTOVOLT' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hV'), 'KILOVOLT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kV'))), 'Intensity' => array('standard' => 'AMPERE', 'units' => array('MILLIAMPERE' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mA'), 'CENTIAMPERE' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cA'), 'DECIAMPERE' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dA'), 'AMPERE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'A'), 'DEKAMPERE' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daA'), 'HECTOAMPERE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hA'), 'KILOAMPERE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kA'))), 'Resistance' => array('standard' => 'OHM', 'units' => array('MILLIOHM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mΩ'), 'CENTIOHM' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cΩ'), 'DECIOHM' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dΩ'), 'OHM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ω'), 'DEKAOHM' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daΩ'), 'HECTOHM' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hΩ'), 'KILOHM' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kΩ'), 'MEGOHM' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MΩ'))), 'Speed' => array('standard' => 'METER_PER_SECOND', 'units' => array('METER_PER_SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'mdivs'), 'METER_PER_MINUTE' => array('convert' => array(0 => array('div' => 60)), 'symbol' => 'mdivm'), 'METER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1), 1 => array('div' => 3600)), 'symbol' => 'mdivh'), 'KILOMETER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1000), 1 => array('div' => 3600)), 'symbol' => 'kmdivh'), 'FOOT_PER_SECOND' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ftdivs'), 'FOOT_PER_HOUR' => array('convert' => array(0 => array('mul' => 0.30480000000000002), 1 => array('div' => 3600)), 'symbol' => 'ftdivh'), 'YARD_PER_HOUR' => array('convert' => array(0 => array('mul' => '0.9144\''), 1 => array('div' => 3600)), 'symbol' => 'yddivh'), 'MILE_PER_HOUR' => array('convert' => array(0 => array('mul' => 1609.3440000000001), 1 => array('div' => 3600)), 'symbol' => 'midivh'))), 'ElectricCharge' => array('standard' => 'AMPEREHOUR', 'units' => array('MILLIAMPEREHOUR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mAh'), 'AMPEREHOUR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ah'), 'MILLICOULOMB' => array('convert' => array(0 => array('div' => 3600000)), 'symbol' => 'mC'), 'CENTICOULOMB' => array('convert' => array(0 => array('div' => 360000)), 'symbol' => 'cC'), 'DECICOULOMB' => array('convert' => array(0 => array('div' => 36000)), 'symbol' => 'dC'), 'COULOMB' => array('convert' => array(0 => array('div' => 3600)), 'symbol' => 'C'), 'DEKACOULOMB' => array('convert' => array(0 => array('div' => 360)), 'symbol' => 'daC'), 'HECTOCOULOMB' => array('convert' => array(0 => array('div' => 36)), 'symbol' => 'hC'), 'KILOCOULOMB' => array('convert' => array(0 => array('div' => 3.6000000000000001)), 'symbol' => 'kC'))), 'Duration' => array('standard' => 'SECOND', 'units' => array('MILLISECOND' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'ms'), 'SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 's'), 'MINUTE' => array('convert' => array(0 => array('mul' => 60)), 'symbol' => 'm'), 'HOUR' => array('convert' => array(0 => array('mul' => 3600)), 'symbol' => 'h'), 'DAY' => array('convert' => array(0 => array('mul' => 86400)), 'symbol' => 'd'), 'WEEK' => array('convert' => array(0 => array('mul' => 604800)), 'symbol' => 'week'), 'MONTH' => array('convert' => array(0 => array('mul' => 18748800)), 'symbol' => 'month'), 'YEAR' => array('convert' => array(0 => array('mul' => 31536000)), 'symbol' => 'year'))), 'Temperature' => array('standard' => 'KELVIN', 'units' => array('CELSIUS' => array('convert' => array(0 => array('add' => 273.14999999999998)), 'symbol' => '°C'), 'FAHRENHEIT' => array('convert' => array(0 => array('sub' => 32), 1 => array('div' => 1.8), 2 => array('add' => 273.14999999999998)), 'symbol' => '°F'), 'KELVIN' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => '°K'), 'RANKINE' => array('convert' => array(0 => array('div' => 1.8)), 'symbol' => '°R'), 'REAUMUR' => array('convert' => array(0 => array('mul' => 1.25), 1 => array('add' => 273.14999999999998)), 'symbol' => '°r'))), 'Volume' => array('standard' => 'CUBIC_METER', 'units' => array('CUBIC_MILLIMETER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-9)), 'symbol' => 'mm³'), 'CUBIC_CENTIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'cm³'), 'MILLILITER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'ml'), 'CENTILITER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'cl'), 'DECILITER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'dl'), 'CUBIC_DECIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'dm³'), 'LITER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'l'), 'CUBIC_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm³'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 160)), 'symbol' => 'oz'), 'PINT' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 8)), 'symbol' => 'pt'), 'BARREL' => array('convert' => array(0 => array('mul' => 0.16365924000000001)), 'symbol' => 'bbl'), 'GALLON' => array('convert' => array(0 => array('mul' => 0.00454609)), 'symbol' => 'gal'), 'CUBIC_FOOT' => array('convert' => array(0 => array('mul' => 6.5411915900000004), 1 => array('div' => 231)), 'symbol' => 'ft³'), 'CUBIC_INCH' => array('convert' => array(0 => array('mul' => 0.0037854118000000001), 1 => array('div' => 231)), 'symbol' => 'in³'), 'CUBIC_YARD' => array('convert' => array(0 => array('mul' => 0.76455486100000003)), 'symbol' => 'yd³'))), 'Weight' => array('standard' => 'KILOGRAM', 'units' => array('MILLIGRAM' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mg'), 'GRAM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'g'), 'KILOGRAM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'kg'), 'TON' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 't'), 'GRAIN' => array('convert' => array(0 => array('mul' => 6.4798909999999995E-5)), 'symbol' => 'gr'), 'DENIER' => array('convert' => array(0 => array('mul' => 0.0012750000000000001)), 'symbol' => 'denier'), 'ONCE' => array('convert' => array(0 => array('mul' => 0.030589999999999999)), 'symbol' => 'once'), 'MARC' => array('convert' => array(0 => array('mul' => 0.24475)), 'symbol' => 'marc'), 'LIVRE' => array('convert' => array(0 => array('mul' => 0.48949999999999999)), 'symbol' => 'livre'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.45359237000000002), 1 => array('div' => 16)), 'symbol' => 'oz'), 'POUND' => array('convert' => array(0 => array('mul' => 0.45359237000000002)), 'symbol' => 'lb'))), 'Pressure' => array('standard' => 'BAR', 'units' => array('BAR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Bar'), 'PASCAL' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'Pa'), 'HECTOPASCAL' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'hPa'), 'MILLIBAR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mBar'), 'ATM' => array('convert' => array(0 => array('mul' => 0.98692299999999999)), 'symbol' => 'atm'), 'PSI' => array('convert' => array(0 => array('mul' => 14.503769853730221)), 'symbol' => 'PSI'), 'TORR' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'Torr'), 'MMHG' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'mmHg'))), 'Energy' => array('standard' => 'JOULE', 'units' => array('JOULE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'J'), 'CALORIE' => array('convert' => array(0 => array('mul' => 4.1840000000000002)), 'symbol' => 'cal'), 'KILOCALORIE' => array('convert' => array(0 => array('mul' => 4184)), 'symbol' => 'kcal'), 'KILOJOULE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kJ'))), 'CaseBox' => array('standard' => 'PIECE', 'units' => array('PIECE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Pc'), 'DOZEN' => array('convert' => array(0 => array('mul' => 12)), 'symbol' => 'Dz')))));
        return $instance;
    }
    protected function getAkeneoMeasure_MeasureConverterService()
    {
        return $this->services['akeneo_measure.measure_converter'] = new \Akeneo\Bundle\MeasureBundle\Convert\MeasureConverter(array('measures_config' => array('Area' => array('standard' => 'SQUARE_METER', 'units' => array('SQUARE_MILLIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mm²'), 'SQUARE_CENTIMETER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'cm²'), 'SQUARE_DECIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'dm²'), 'SQUARE_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm²'), 'CENTIARE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'ca'), 'SQUARE_DEKAMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'dam²'), 'ARE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'a'), 'SQUARE_HECTOMETER' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'hm²'), 'HECTARE' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'ha'), 'SQUARE_KILOMETER' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'km²'), 'SQUARE_MIL' => array('convert' => array(0 => array('mul' => 6.4515999999999997E-10)), 'symbol' => 'sq mil'), 'SQUARE_INCH' => array('convert' => array(0 => array('mul' => 0.00064515999999999998)), 'symbol' => 'in²'), 'SQUARE_FOOT' => array('convert' => array(0 => array('mul' => 0.092903040000000006)), 'symbol' => 'ft²'), 'SQUARE_YARD' => array('convert' => array(0 => array('mul' => 0.83612735999999999)), 'symbol' => 'yd²'), 'ARPENT' => array('convert' => array(0 => array('mul' => 3418.8899999999999)), 'symbol' => 'arpent'), 'ACRE' => array('convert' => array(0 => array('mul' => 4046.8564219999998)), 'symbol' => 'A'), 'SQUARE_FURLONG' => array('convert' => array(0 => array('mul' => 40468.726000000002)), 'symbol' => 'fur²'), 'SQUARE_MILE' => array('convert' => array(0 => array('mul' => 2589988.1103360001)), 'symbol' => 'mi²'))), 'Binary' => array('standard' => 'BYTE', 'units' => array('BIT' => array('convert' => array(0 => array('mul' => 0.125)), 'symbol' => 'b'), 'BYTE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'B'), 'KILOBYTE' => array('convert' => array(0 => array('mul' => 1024)), 'symbol' => 'kB'), 'MEGABYTE' => array('convert' => array(0 => array('mul' => 1048576)), 'symbol' => 'MB'), 'GIGABYTE' => array('convert' => array(0 => array('mul' => 1073741824)), 'symbol' => 'GB'), 'TERABYTE' => array('convert' => array(0 => array('mul' => 1099511627776)), 'symbol' => 'TB'))), 'Decibel' => array('standard' => 'DECIBEL', 'units' => array('DECIBEL' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'dB'))), 'Frequency' => array('standard' => 'HERTZ', 'units' => array('HERTZ' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Hz'), 'KILOHERTZ' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kHz'), 'MEGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MHz'), 'GIGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GHz'), 'TERAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'THz'))), 'Length' => array('standard' => 'METER', 'units' => array('MILLIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mm'), 'CENTIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cm'), 'DECIMETER' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dm'), 'METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm'), 'DEKAMETER' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'dam'), 'HECTOMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hm'), 'KILOMETER' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'km'), 'MIL' => array('convert' => array(0 => array('mul' => 2.5400000000000001E-5)), 'symbol' => 'mil'), 'INCH' => array('convert' => array(0 => array('mul' => 0.025399999999999999)), 'symbol' => 'in'), 'FEET' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ft'), 'YARD' => array('convert' => array(0 => array('mul' => 0.91439999999999999)), 'symbol' => 'yd'), 'CHAIN' => array('convert' => array(0 => array('mul' => 20.116800000000001)), 'symbol' => 'ch'), 'FURLONG' => array('convert' => array(0 => array('mul' => 201.16800000000001)), 'symbol' => 'fur'), 'MILE' => array('convert' => array(0 => array('mul' => 1609.3440000000001)), 'symbol' => 'mi'))), 'Power' => array('standard' => 'WATT', 'units' => array('WATT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'W'), 'KILOWATT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kW'), 'MEGAWATT' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MW'), 'GIGAWATT' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GW'), 'TERAWATT' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'TW'))), 'Voltage' => array('standard' => 'VOLT', 'units' => array('MILLIVOLT' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mV'), 'CENTIVOLT' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cV'), 'DECIVOLT' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dV'), 'VOLT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'V'), 'DEKAVOLT' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daV'), 'HECTOVOLT' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hV'), 'KILOVOLT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kV'))), 'Intensity' => array('standard' => 'AMPERE', 'units' => array('MILLIAMPERE' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mA'), 'CENTIAMPERE' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cA'), 'DECIAMPERE' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dA'), 'AMPERE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'A'), 'DEKAMPERE' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daA'), 'HECTOAMPERE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hA'), 'KILOAMPERE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kA'))), 'Resistance' => array('standard' => 'OHM', 'units' => array('MILLIOHM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mΩ'), 'CENTIOHM' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cΩ'), 'DECIOHM' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dΩ'), 'OHM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ω'), 'DEKAOHM' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daΩ'), 'HECTOHM' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hΩ'), 'KILOHM' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kΩ'), 'MEGOHM' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MΩ'))), 'Speed' => array('standard' => 'METER_PER_SECOND', 'units' => array('METER_PER_SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'mdivs'), 'METER_PER_MINUTE' => array('convert' => array(0 => array('div' => 60)), 'symbol' => 'mdivm'), 'METER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1), 1 => array('div' => 3600)), 'symbol' => 'mdivh'), 'KILOMETER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1000), 1 => array('div' => 3600)), 'symbol' => 'kmdivh'), 'FOOT_PER_SECOND' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ftdivs'), 'FOOT_PER_HOUR' => array('convert' => array(0 => array('mul' => 0.30480000000000002), 1 => array('div' => 3600)), 'symbol' => 'ftdivh'), 'YARD_PER_HOUR' => array('convert' => array(0 => array('mul' => '0.9144\''), 1 => array('div' => 3600)), 'symbol' => 'yddivh'), 'MILE_PER_HOUR' => array('convert' => array(0 => array('mul' => 1609.3440000000001), 1 => array('div' => 3600)), 'symbol' => 'midivh'))), 'ElectricCharge' => array('standard' => 'AMPEREHOUR', 'units' => array('MILLIAMPEREHOUR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mAh'), 'AMPEREHOUR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ah'), 'MILLICOULOMB' => array('convert' => array(0 => array('div' => 3600000)), 'symbol' => 'mC'), 'CENTICOULOMB' => array('convert' => array(0 => array('div' => 360000)), 'symbol' => 'cC'), 'DECICOULOMB' => array('convert' => array(0 => array('div' => 36000)), 'symbol' => 'dC'), 'COULOMB' => array('convert' => array(0 => array('div' => 3600)), 'symbol' => 'C'), 'DEKACOULOMB' => array('convert' => array(0 => array('div' => 360)), 'symbol' => 'daC'), 'HECTOCOULOMB' => array('convert' => array(0 => array('div' => 36)), 'symbol' => 'hC'), 'KILOCOULOMB' => array('convert' => array(0 => array('div' => 3.6000000000000001)), 'symbol' => 'kC'))), 'Duration' => array('standard' => 'SECOND', 'units' => array('MILLISECOND' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'ms'), 'SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 's'), 'MINUTE' => array('convert' => array(0 => array('mul' => 60)), 'symbol' => 'm'), 'HOUR' => array('convert' => array(0 => array('mul' => 3600)), 'symbol' => 'h'), 'DAY' => array('convert' => array(0 => array('mul' => 86400)), 'symbol' => 'd'), 'WEEK' => array('convert' => array(0 => array('mul' => 604800)), 'symbol' => 'week'), 'MONTH' => array('convert' => array(0 => array('mul' => 18748800)), 'symbol' => 'month'), 'YEAR' => array('convert' => array(0 => array('mul' => 31536000)), 'symbol' => 'year'))), 'Temperature' => array('standard' => 'KELVIN', 'units' => array('CELSIUS' => array('convert' => array(0 => array('add' => 273.14999999999998)), 'symbol' => '°C'), 'FAHRENHEIT' => array('convert' => array(0 => array('sub' => 32), 1 => array('div' => 1.8), 2 => array('add' => 273.14999999999998)), 'symbol' => '°F'), 'KELVIN' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => '°K'), 'RANKINE' => array('convert' => array(0 => array('div' => 1.8)), 'symbol' => '°R'), 'REAUMUR' => array('convert' => array(0 => array('mul' => 1.25), 1 => array('add' => 273.14999999999998)), 'symbol' => '°r'))), 'Volume' => array('standard' => 'CUBIC_METER', 'units' => array('CUBIC_MILLIMETER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-9)), 'symbol' => 'mm³'), 'CUBIC_CENTIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'cm³'), 'MILLILITER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'ml'), 'CENTILITER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'cl'), 'DECILITER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'dl'), 'CUBIC_DECIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'dm³'), 'LITER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'l'), 'CUBIC_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm³'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 160)), 'symbol' => 'oz'), 'PINT' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 8)), 'symbol' => 'pt'), 'BARREL' => array('convert' => array(0 => array('mul' => 0.16365924000000001)), 'symbol' => 'bbl'), 'GALLON' => array('convert' => array(0 => array('mul' => 0.00454609)), 'symbol' => 'gal'), 'CUBIC_FOOT' => array('convert' => array(0 => array('mul' => 6.5411915900000004), 1 => array('div' => 231)), 'symbol' => 'ft³'), 'CUBIC_INCH' => array('convert' => array(0 => array('mul' => 0.0037854118000000001), 1 => array('div' => 231)), 'symbol' => 'in³'), 'CUBIC_YARD' => array('convert' => array(0 => array('mul' => 0.76455486100000003)), 'symbol' => 'yd³'))), 'Weight' => array('standard' => 'KILOGRAM', 'units' => array('MILLIGRAM' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mg'), 'GRAM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'g'), 'KILOGRAM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'kg'), 'TON' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 't'), 'GRAIN' => array('convert' => array(0 => array('mul' => 6.4798909999999995E-5)), 'symbol' => 'gr'), 'DENIER' => array('convert' => array(0 => array('mul' => 0.0012750000000000001)), 'symbol' => 'denier'), 'ONCE' => array('convert' => array(0 => array('mul' => 0.030589999999999999)), 'symbol' => 'once'), 'MARC' => array('convert' => array(0 => array('mul' => 0.24475)), 'symbol' => 'marc'), 'LIVRE' => array('convert' => array(0 => array('mul' => 0.48949999999999999)), 'symbol' => 'livre'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.45359237000000002), 1 => array('div' => 16)), 'symbol' => 'oz'), 'POUND' => array('convert' => array(0 => array('mul' => 0.45359237000000002)), 'symbol' => 'lb'))), 'Pressure' => array('standard' => 'BAR', 'units' => array('BAR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Bar'), 'PASCAL' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'Pa'), 'HECTOPASCAL' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'hPa'), 'MILLIBAR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mBar'), 'ATM' => array('convert' => array(0 => array('mul' => 0.98692299999999999)), 'symbol' => 'atm'), 'PSI' => array('convert' => array(0 => array('mul' => 14.503769853730221)), 'symbol' => 'PSI'), 'TORR' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'Torr'), 'MMHG' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'mmHg'))), 'Energy' => array('standard' => 'JOULE', 'units' => array('JOULE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'J'), 'CALORIE' => array('convert' => array(0 => array('mul' => 4.1840000000000002)), 'symbol' => 'cal'), 'KILOCALORIE' => array('convert' => array(0 => array('mul' => 4184)), 'symbol' => 'kcal'), 'KILOJOULE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kJ'))), 'CaseBox' => array('standard' => 'PIECE', 'units' => array('PIECE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Pc'), 'DOZEN' => array('convert' => array(0 => array('mul' => 12)), 'symbol' => 'Dz'))))));
    }
    protected function getAkeneoStorageUtils_Doctrine_ObjectDetacherService()
    {
        return $this->services['akeneo_storage_utils.doctrine.object_detacher'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Detacher\ObjectDetacher($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
    }
    protected function getAkeneoStorageUtils_Doctrine_OrmMappingsOverrideConfiguratorService()
    {
        return $this->services['akeneo_storage_utils.doctrine.orm_mappings_override_configurator'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\ORM\MappingsOverrideConfigurator();
    }
    protected function getAkeneoStorageUtils_Doctrine_SmartManagerRegistryService()
    {
        $this->services['akeneo_storage_utils.doctrine.smart_manager_registry'] = $instance = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\SmartManagerRegistry();
        $instance->addRegistry($this->get('doctrine'));
        return $instance;
    }
    protected function getAkeneoStorageUtils_Doctrine_TableNameBuilderService()
    {
        return $this->services['akeneo_storage_utils.doctrine.table_name_builder'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\TableNameBuilder($this, $this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
    }
    protected function getAkeneoStorageUtils_EventSubscriber_ConfigureOrmMappingsService()
    {
        return $this->services['akeneo_storage_utils.event_subscriber.configure_orm_mappings'] = new \Akeneo\Bundle\StorageUtilsBundle\EventSubscriber\ConfigureMappingsSubscriber($this->get('akeneo_storage_utils.doctrine.orm_mappings_override_configurator'), array(0 => array('original' => 'Pim\\Component\\Catalog\\Model\\ProductValue', 'override' => 'Acme\\Bundle\\AppBundle\\Model\\ProductValue')));
    }
    protected function getAkeneoStorageUtils_Factory_ReferencedCollectionService()
    {
        return $this->services['akeneo_storage_utils.factory.referenced_collection'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\MongoDBODM\Collections\ReferencedCollectionFactory($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
    }
    protected function getAkeneoStorageUtils_Remover_BaseOptionsResolverService()
    {
        return $this->services['akeneo_storage_utils.remover.base_options_resolver'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemovingOptionsResolver();
    }
    protected function getAkeneoStorageUtils_Saver_BaseOptionsResolverService()
    {
        return $this->services['akeneo_storage_utils.saver.base_options_resolver'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSavingOptionsResolver();
    }
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\FileCacheReader(new \Doctrine\Common\Annotations\AnnotationReader(), (__DIR__.'/annotations'), false);
    }
    protected function getAssetic_AssetManagerService()
    {
        $a = $this->get('assetic.asset_factory');
        $b = $this->get('templating.loader');
        $c = new \Assetic\Cache\ConfigCache((__DIR__.'/assetic/config'));
        $this->services['assetic.asset_manager'] = $instance = new \Assetic\Factory\LazyAssetManager($a, array('twig' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Assetic\Extension\Twig\TwigFormulaLoader($this->get('twig')), $c, false), 'php' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader($a), $c, false)));
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', ($this->targetDirs[2].'/Resources/OroAsseticBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/AsseticBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', ($this->targetDirs[2].'/Resources/OroAsseticBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroAsseticBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/AsseticBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', ($this->targetDirs[2].'/Resources/OroNavigationBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', ($this->targetDirs[2].'/Resources/OroNavigationBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'OroNavigationBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUserBundle', ($this->targetDirs[2].'/Resources/PimUserBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUserBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUserBundle', ($this->targetDirs[2].'/Resources/PimUserBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUserBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUIBundle', ($this->targetDirs[2].'/Resources/PimUIBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUIBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUIBundle', ($this->targetDirs[2].'/Resources/PimUIBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimUIBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimCatalogBundle', ($this->targetDirs[2].'/Resources/PimCatalogBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimCatalogBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimCatalogBundle', ($this->targetDirs[2].'/Resources/PimCatalogBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimCatalogBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimEnrichBundle', ($this->targetDirs[2].'/Resources/PimEnrichBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimEnrichBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimEnrichBundle', ($this->targetDirs[2].'/Resources/PimEnrichBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimEnrichBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimNotificationBundle', ($this->targetDirs[2].'/Resources/PimNotificationBundle/views'), '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimNotificationBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/views'), '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimNotificationBundle', ($this->targetDirs[2].'/Resources/PimNotificationBundle/views'), '/\\.[^.]+\\.php$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, 'PimNotificationBundle', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/views'), '/\\.[^.]+\\.php$/'))), 'php');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, '', ($this->targetDirs[2].'/Resources/views'), '/\\.[^.]+\\.twig$/'), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($b, '', ($this->targetDirs[2].'/Resources/views'), '/\\.[^.]+\\.php$/'), 'php');
        return $instance;
    }
    protected function getAssetic_Filter_CssrewriteService()
    {
        return $this->services['assetic.filter.cssrewrite'] = new \Assetic\Filter\CssRewriteFilter();
    }
    protected function getAssetic_Filter_LessphpService()
    {
        require_once ($this->targetDirs[2].'/../vendor/leafo/lessphp/lessc.inc.php');
        $this->services['assetic.filter.lessphp'] = $instance = new \Assetic\Filter\LessphpFilter();
        $instance->setPresets(array());
        $instance->setLoadPaths(array());
        $instance->setFormatter(NULL);
        $instance->setPreserveComments(NULL);
        return $instance;
    }
    protected function getAssetic_FilterManagerService()
    {
        return $this->services['assetic.filter_manager'] = new \Symfony\Bundle\AsseticBundle\FilterManager($this, array('lessphp' => 'assetic.filter.lessphp', 'cssrewrite' => 'assetic.filter.cssrewrite'));
    }
    protected function getAssetic_Helper_StaticService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('assetic.helper.static', 'request');
        }
        return $this->services['assetic.helper.static'] = $this->scopedServices['request']['assetic.helper.static'] = new \Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper($this->get('templating.helper.assets'), $this->get('assetic.asset_factory'));
    }
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext($this->get('request_stack'));
    }
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), $this->get('assets.context')), array());
    }
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array(0 => new \Oro\Bundle\SecurityBundle\Cache\AclAnnotationCacheClearer($this->get('oro_security.acl.annotation_provider')), 1 => new \Oro\Bundle\SecurityBundle\Cache\ActionMetadataCacheClearer($this->get('oro_security.action_metadata_provider'))));
    }
    protected function getCacheWarmerService()
    {
        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer(new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($this->get('kernel'), $this->get('templating.filename_parser'), ($this->targetDirs[2].'/Resources')), $this->get('templating.locator')), 1 => new \Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer($this), 2 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer($this->get('translator')), 3 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('router')), 4 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer($this->get('doctrine')), 5 => new \Oro\Bundle\SecurityBundle\Cache\AclAnnotationCacheWarmer($this->get('oro_security.acl.annotation_provider')), 6 => new \Oro\Bundle\SecurityBundle\Cache\ActionMetadataCacheWarmer($this->get('oro_security.action_metadata_provider')), 7 => $this->get('kernel.cache_warmer.jsformvalidation')));
    }
    protected function getDataCollector_DumpService()
    {
        return $this->services['data_collector.dump'] = new \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE), NULL, 'UTF-8', $this->get('request_stack'), NULL);
    }
    protected function getDataCollector_FormService()
    {
        return $this->services['data_collector.form'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataCollector($this->get('data_collector.form.extractor'));
    }
    protected function getDataCollector_Form_ExtractorService()
    {
        return $this->services['data_collector.form.extractor'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor();
    }
    protected function getDataCollector_RequestService()
    {
        return $this->services['data_collector.request'] = new \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector();
    }
    protected function getDataCollector_RouterService()
    {
        return $this->services['data_collector.router'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector();
    }
    protected function getDataCollector_TranslationService()
    {
        return $this->services['data_collector.translation'] = new \Symfony\Component\Translation\DataCollector\TranslationDataCollector($this->get('translator'));
    }
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener('', $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE), 85, NULL, true, NULL);
    }
    protected function getDebug_DumpListenerService()
    {
        return $this->services['debug.dump_listener'] = new \Symfony\Component\HttpKernel\EventListener\DumpListener($this->get('var_dumper.cloner'), $this->get('data_collector.dump'));
    }
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('default' => 'doctrine.dbal.default_connection', 'session' => 'doctrine.dbal.session_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array('datetime' => array('class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\DBAL\\Types\\UTCDateTimeType', 'commented' => true)));
    }
    protected function getDoctrine_Dbal_Default_WrappedConnectionService()
    {
        return $this->services['doctrine.dbal.default.wrapped_connection'] = $this->get('doctrine.dbal.session_connection')->getWrappedConnection();
    }
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $a->addEventSubscriber($this->get('pim_versioning.event_subscriber.timestampable'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.timestampable'));
        $a->addEventSubscriber($this->get('gedmo.listener.timestampable'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.localizable'));
        $a->addEventSubscriber($this->get('oro_user.entity_with_image.subscriber'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.orm.inject_product_reference'));
        $a->addEventSubscriber($this->get('akeneo_storage_utils.event_subscriber.resolve_target_repository'));
        $a->addEventSubscriber($this->get('gedmo.listener.tree'));
        $a->addEventSubscriber($this->get('akeneo_storage_utils.event_subscriber.configure_orm_mappings'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.scopable'));
        $a->addEventSubscriber($this->get('pim_user.event_subscriber.user_preferences'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.outdate_indexed_values'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.create_attribute_requirement'));
        $a->addEventSubscriber($this->get('pim_versioning.event_subscriber.addversion'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.metric_base_values'));
        $a->addEventSubscriber($this->get('pim_enrich.event_listener.add_locale'));
        $a->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $a->addEventListener(array(0 => 'postGenerateSchema'), 'security.acl.dbal.schema_listener');
        $a->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $a->addEventListener(array(0 => 'preUpdate'), $this->get('oro_user.role.listener'));
        return $this->services['doctrine.dbal.default_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => 'localhost', 'port' => NULL, 'unix_socket' => NULL, 'dbname' => 'akeneo_pim', 'user' => 'akeneo_pim', 'password' => 'akeneo_pim', 'charset' => 'UTF8', 'driverOptions' => array()), new \Doctrine\DBAL\Configuration(), $a, array());
    }
    protected function getDoctrine_Dbal_SessionConnectionService()
    {
        $a = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $a->addEventSubscriber($this->get('oro_user.entity_with_image.subscriber'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.orm.inject_product_reference'));
        $a->addEventSubscriber($this->get('akeneo_storage_utils.event_subscriber.resolve_target_repository'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.timestampable'));
        $a->addEventSubscriber($this->get('akeneo_storage_utils.event_subscriber.configure_orm_mappings'));
        $a->addEventSubscriber($this->get('pim_versioning.event_subscriber.timestampable'));
        $a->addEventSubscriber($this->get('pim_user.event_subscriber.user_preferences'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.scopable'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.create_attribute_requirement'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.outdate_indexed_values'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.metric_base_values'));
        $a->addEventSubscriber($this->get('pim_versioning.event_subscriber.addversion'));
        $a->addEventSubscriber($this->get('pim_catalog.event_subscriber.localizable'));
        $a->addEventSubscriber($this->get('pim_enrich.event_listener.add_locale'));
        $a->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.listeners.resolve_target_entity'));
        $a->addEventListener(array(0 => 'postPersist'), $this->get('oro_navigation.item.pinbar.post_persist_listener'));
        $a->addEventListener(array(0 => 'preUpdate'), $this->get('oro_user.role.listener'));
        return $this->services['doctrine.dbal.session_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => 'localhost', 'port' => NULL, 'unix_socket' => NULL, 'dbname' => 'akeneo_pim', 'user' => 'akeneo_pim', 'password' => 'akeneo_pim', 'charset' => 'UTF8', 'driverOptions' => array()), new \Doctrine\DBAL\Configuration(), $a, array());
    }
    protected function getDoctrine_Orm_DefaultEntityManagerService()
    {
        $a = $this->get('annotation_reader');
        $b = new \Doctrine\Common\Cache\ArrayCache();
        $b->setNamespace('sf2orm_default_183af64417862689bb675b55b4e474b7d1660977656520835ecaf029f8f367b4');
        $c = new \Doctrine\Common\Cache\ArrayCache();
        $c->setNamespace('sf2orm_default_183af64417862689bb675b55b4e474b7d1660977656520835ecaf029f8f367b4');
        $d = new \Doctrine\Common\Cache\ArrayCache();
        $d->setNamespace('sf2orm_default_183af64417862689bb675b55b4e474b7d1660977656520835ecaf029f8f367b4');
        $e = new \Doctrine\ORM\Mapping\Driver\AnnotationDriver($a, array(0 => ($this->targetDirs[3].'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity'), 1 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/ConfigBundle/Entity'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Entity'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Entity'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Entity'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Entity')));
        $f = new \Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver(array(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/config/doctrine') => 'Pim\\Bundle\\UserBundle\\Entity', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/config/doctrine') => 'Pim\\Bundle\\NotificationBundle\\Entity', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/doctrine') => 'Pim\\Bundle\\CatalogBundle\\Entity', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/config/doctrine') => 'Pim\\Bundle\\DataGridBundle\\Entity', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/config/doctrine') => 'Pim\\Bundle\\EnrichBundle\\Entity', ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/config/doctrine') => 'Pim\\Bundle\\CommentBundle\\Entity'));
        $f->setGlobalBasename('mapping');
        $g = new \Doctrine\ORM\Mapping\Driver\DriverChain();
        $g->addDriver($e, 'Gedmo\\Tree\\Entity');
        $g->addDriver($e, 'Oro\\Bundle\\ConfigBundle\\Entity');
        $g->addDriver($e, 'Oro\\Bundle\\NavigationBundle\\Entity');
        $g->addDriver($e, 'Oro\\Bundle\\UserBundle\\Entity');
        $g->addDriver($e, 'Pim\\Bundle\\UIBundle\\Entity');
        $g->addDriver($e, 'Pim\\Bundle\\ImportExportBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\UserBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\NotificationBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\CatalogBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\DataGridBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\EnrichBundle\\Entity');
        $g->addDriver($f, 'Pim\\Bundle\\CommentBundle\\Entity');
        $g->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/model/doctrine') => 'Akeneo\\Component\\Batch\\Model'), '.orm.yml')), 'Akeneo\\Component\\Batch\\Model');
        $g->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/FileStorageBundle/Resources/config/model/doctrine') => 'Akeneo\\Component\\FileStorage\\Model'), '.orm.yml')), 'Akeneo\\Component\\FileStorage\\Model');
        $g->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/model/doctrine') => 'Pim\\Component\\Catalog\\Model'), '.orm.yml')), 'Pim\\Component\\Catalog\\Model');
        $g->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/VersioningBundle/Resources/config/model/doctrine') => 'Akeneo\\Component\\Versioning\\Model'), '.orm.yml')), 'Akeneo\\Component\\Versioning\\Model');
        $h = new \Doctrine\ORM\Configuration();
        $h->setEntityNamespaces(array('Gedmo' => 'Gedmo\\Tree\\Entity', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\Entity', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\Entity', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\Entity', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\Entity', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\Entity', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\Entity', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\Entity', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\Entity', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\Entity', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\Entity', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\Entity'));
        $h->setMetadataCacheImpl($b);
        $h->setQueryCacheImpl($c);
        $h->setResultCacheImpl($d);
        $h->setMetadataDriverImpl($g);
        $h->setProxyDir((__DIR__.'/doctrine/orm/Proxies'));
        $h->setProxyNamespace('Proxies');
        $h->setAutoGenerateProxyClasses(false);
        $h->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $h->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $h->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $this->services['doctrine.orm.default_entity_manager'] = $instance = \Doctrine\ORM\EntityManager::create($this->get('doctrine.dbal.default_connection'), $h);
        $this->get('doctrine.orm.default_manager_configurator')->configure($instance);
        return $instance;
    }
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array());
    }
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator($this->get('doctrine'));
    }
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer($this->get('doctrine'));
    }
    protected function getEscapeWsseAuthentication_EncoderService()
    {
        return $this->services['escape_wsse_authentication.encoder'] = new \Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder('sha1', true, 1);
    }
    protected function getEscapeWsseAuthentication_EntryPointService()
    {
        return $this->services['escape_wsse_authentication.entry_point'] = new \Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint($this->get('logger'), NULL, 'UsernameToken');
    }
    protected function getEscapeWsseAuthentication_ListenerService()
    {
        return $this->services['escape_wsse_authentication.listener'] = new \Oro\Bundle\UserBundle\Security\WsseAuthListener($this->get('security.context'), $this->get('security.authentication.manager'));
    }
    protected function getEscapeWsseAuthentication_NonceCacheService()
    {
        return $this->services['escape_wsse_authentication.nonce_cache'] = new \Doctrine\Common\Cache\PhpFileCache((__DIR__.'/security/nonces'));
    }
    protected function getEscapeWsseAuthentication_ProviderService()
    {
        return $this->services['escape_wsse_authentication.provider'] = new \Pim\Bundle\UserBundle\Security\WsseUserProvider(NULL, NULL, NULL, NULL, 300, '/^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/');
    }
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this);
        $instance->addListenerService('kernel.controller', array(0 => 'data_collector.router', 1 => 'onKernelController'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'monolog.handler.firephp', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.body_listener', 1 => 'onKernelRequest'), 10);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.format_listener', 1 => 'onKernelRequest'), 34);
        $instance->addListenerService('kernel.request', array(0 => 'knp_menu.listener.voters', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'kernel.listener.nav_history_response', 1 => 'onResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'kernel.listener.title_service.request_listener', 1 => 'onKernelRequest'), -255);
        $instance->addListenerService('kernel.response', array(0 => 'kernel.listener.hashnav_response', 1 => 'onResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'oro_navigation.twig.hash_nav_extension', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'oro_security.listener.controller', 1 => 'onKernelController'), -1);
        $instance->addListenerService('security.interactive_login', array(0 => 'oro_user.security.login', 1 => 'onLogin'), 0);
        $instance->addListenerService('jsfv.pre_process', array(0 => 'jsfv.validation_groups_listener', 1 => 'onJsfvPreProcess'), 0);
        $instance->addListenerService('jsfv.post_process', array(0 => 'jsfv.repeated_field_listener', 1 => 'onJsfvPostProcess'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.pim-role-user-grid', array(0 => 'pim_user.event_listener.role_users_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.pim-group-user-grid', array(0 => 'pim_user.event_listener.group_users_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('security.interactive_login', array(0 => 'pim_locale.locale_listener', 1 => 'onSecurityInteractiveLogin'), 0);
        $instance->addListenerService('akeneo.storage.post_save_all', array(0 => 'pim_catalog.event_subscriber.reset_unique_validation', 1 => 'onAkeneoStoragePostsaveall'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before', array(0 => 'pim_datagrid.event_listener.configure_sorters_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.product-grid', array(0 => 'pim_datagrid.event_listener.configure_product_filters', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.export-profile-grid', array(0 => 'pim_import_export.event_listener.inject_job_type', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.import-profile-grid', array(0 => 'pim_import_export.event_listener.inject_job_type', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.export-execution-grid', array(0 => 'pim_import_export.event_listener.inject_job_type', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.import-execution-grid', array(0 => 'pim_import_export.event_listener.inject_job_type', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after', array(0 => 'pim_enrich.event_listener.add_locale_code_to_grid', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.product-grid', array(0 => 'pim_enrich.event_listener.product_grid_before_listener', 1 => 'buildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.product-grid', array(0 => 'pim_enrich.event_listener.product_grid_after_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.product-group-grid', array(0 => 'pim_enrich.event_listener.product_group_grid_before_listener', 1 => 'buildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.product-group-grid', array(0 => 'pim_enrich.event_listener.product_group_grid_after_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.product-variant-group-grid', array(0 => 'pim_enrich.event_listener.product_variant_group_grid_before_listener', 1 => 'buildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.product-variant-group-grid', array(0 => 'pim_enrich.event_listener.product_variant_group_grid_after_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.group-grid', array(0 => 'pim_enrich.event_listener.group_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.variant-group-grid', array(0 => 'pim_enrich.event_listener.variant_group_grid_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.association-product-grid', array(0 => 'pim_enrich.event_listener.association_product_grid_before_listener', 1 => 'buildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.association-product-grid', array(0 => 'pim_enrich.event_listener.association_product_grid_after_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.after.association-group-grid', array(0 => 'pim_enrich.event_listener.association_group_grid_after_listener', 1 => 'onBuildAfter'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.history-grid', array(0 => 'pim_enrich.event_listener.history_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addListenerService('oro_datagrid.datgrid.build.before.product-history-grid', array(0 => 'pim_enrich.event_listener.history_grid_listener', 1 => 'onBuildBefore'), 0);
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener');
        $instance->addSubscriberService('translator_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\TranslatorListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('session.save_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener');
        $instance->addSubscriberService('fragment.listener', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
        $instance->addSubscriberService('profiler_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener');
        $instance->addSubscriberService('data_collector.request', 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('debug.debug_handlers_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('sensio_framework_extra.controller.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener');
        $instance->addSubscriberService('sensio_framework_extra.converter.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener');
        $instance->addSubscriberService('sensio_framework_extra.view.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener');
        $instance->addSubscriberService('sensio_framework_extra.cache.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\HttpCacheListener');
        $instance->addSubscriberService('sensio_framework_extra.security.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\SecurityListener');
        $instance->addSubscriberService('fos_rest.exception_listener', 'FOS\\RestBundle\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('akeneo_batch.logger_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\LoggerSubscriber');
        $instance->addSubscriberService('akeneo_batch.notification_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\NotificationSubscriber');
        $instance->addSubscriberService('akeneo_batch.set_job_execution_log_file_subscriber', 'Akeneo\\Bundle\\BatchBundle\\EventListener\\SetJobExecutionLogFileSubscriber');
        $instance->addSubscriberService('pim_user.event_subscriber.group', 'Pim\\Bundle\\UserBundle\\EventSubscriber\\GroupSubscriber');
        $instance->addSubscriberService('pim_locale.locale_subscriber', 'Pim\\Bundle\\UserBundle\\EventSubscriber\\LocaleSubscriber');
        $instance->addSubscriberService('pim_notification.event_subscriber.job_execution_notifier', 'Pim\\Bundle\\NotificationBundle\\EventSubscriber\\JobExecutionNotifier');
        $instance->addSubscriberService('pim_catalog.event_subscriber.category.check_channels', 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\Category\\CheckChannelsOnDeletionSubscriber');
        $instance->addSubscriberService('pim_catalog.event_subscriber.currency_disabling', 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\CurrencyDisablingSubscriber');
        $instance->addSubscriberService('pim_catalog.event_subscriber.product_category', 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ProductCategorySubscriber');
        $instance->addSubscriberService('pim_catalog.event_subscriber.product_template_attribute', 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ProductTemplateAttributeSubscriber');
        $instance->addSubscriberService('pim_datagrid.event_subscriber.default_view', 'Pim\\Bundle\\DataGridBundle\\EventSubscriber\\DefaultViewSubscriber');
        $instance->addSubscriberService('pim_versioning.event_subscriber.adduser', 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddUserSubscriber');
        $instance->addSubscriberService('pim_versioning.event_subscriber.addcontext', 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddContextSubscriber');
        $instance->addSubscriberService('pim_versioning.event_subscriber.add_remove_version', 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddRemoveVersionSubscriber');
        $instance->addSubscriberService('pim_versioning.event_subscriber.purge_progress_bar_advancer', 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\PurgeProgressBarAdvancerSubscriber');
        $instance->addSubscriberService('stof_doctrine_extensions.event_listener.locale', 'Pim\\Bundle\\EnrichBundle\\EventListener\\UserContextListener');
        $instance->addSubscriberService('pim_enrich.event_listener.request', 'Pim\\Bundle\\EnrichBundle\\EventListener\\RequestListener');
        $instance->addSubscriberService('pim_enrich.event_subscriber.translate_flash_messages', 'Pim\\Bundle\\EnrichBundle\\EventListener\\TranslateFlashMessagesSubscriber');
        $instance->addSubscriberService('pim_enrich.event_subscriber.storage.channel_locale', 'Pim\\Bundle\\EnrichBundle\\EventListener\\Storage\\ChannelLocaleSubscriber');
        $instance->addSubscriberService('pim_connector.event_listener.archivist', 'Pim\\Bundle\\ConnectorBundle\\EventListener\\JobExecutionArchivist');
        $instance->addSubscriberService('pim_connector.event_listener.invalid_items_collector', 'Pim\\Bundle\\ConnectorBundle\\EventListener\\InvalidItemsCollector');
        $instance->addSubscriberService('web_profiler.debug_toolbar', 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener');
        $instance->addSubscriberService('debug.dump_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DumpListener');
        return $instance;
    }
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), ($this->targetDirs[2].'/Resources'));
    }
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }
    protected function getForm_CsrfProviderService()
    {
        return $this->services['form.csrf_provider'] = new \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter($this->get('security.csrf.token_manager'));
    }
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension($this, array('form' => 'form.type.form', 'birthday' => 'form.type.birthday', 'checkbox' => 'form.type.checkbox', 'choice' => 'form.type.choice', 'collection' => 'form.type.collection', 'country' => 'form.type.country', 'date' => 'form.type.date', 'datetime' => 'form.type.datetime', 'email' => 'form.type.email', 'file' => 'form.type.file', 'hidden' => 'form.type.hidden', 'integer' => 'form.type.integer', 'language' => 'form.type.language', 'locale' => 'form.type.locale', 'money' => 'form.type.money', 'number' => 'form.type.number', 'password' => 'form.type.password', 'percent' => 'form.type.percent', 'radio' => 'form.type.radio', 'repeated' => 'form.type.repeated', 'search' => 'form.type.search', 'textarea' => 'form.type.textarea', 'text' => 'form.type.text', 'time' => 'form.type.time', 'timezone' => 'form.type.timezone', 'url' => 'form.type.url', 'button' => 'form.type.button', 'submit' => 'form.type.submit', 'reset' => 'form.type.reset', 'currency' => 'form.type.currency', 'entity' => 'form.type.entity', 'liip_imagine_image' => 'liip_imagine.form.type.image', 'oro_type_filter' => 'oro_filter.form.type.filter', 'oro_type_choice_filter' => 'oro_filter.form.type.filter.choice', 'oro_type_text_filter' => 'oro_filter.form.type.filter.text', 'oro_type_number_filter' => 'oro_filter.form.type.filter.number', 'oro_type_date_range_filter' => 'oro_filter.form.type.filter.date_range', 'oro_type_datetime_range_filter' => 'oro_filter.form.type.filter.datetime_range', 'oro_type_boolean_filter' => 'oro_filter.form.type.filter.boolean', 'oro_type_entity_filter' => 'oro_filter.form.type.filter.entity', 'oro_type_selectrow_filter' => 'oro_filter.form.type.filter.selectrow', 'pagestate' => 'oro_navigation.form.type.pagestate', 'oro_acl_label' => 'oro_security.form.type.object_label_type', 'user' => 'oro_user.form.type.user.api', 'oro_change_password' => 'oro_user.form.type.change_password', 'role' => 'oro_user.form.type.role.api', 'oro_user_group' => 'oro_user.form.type.group', 'group' => 'oro_user.form.type.group.api', 'oro_user_reset' => 'oro_user.form.type.reset', 'akeneo_file_storage_file_info' => 'akeneo_file_storage.form.type.file_info', 'pim_type_scope_filter' => 'pim_filter.form.type.filter.scope', 'pim_type_category_filter' => 'pim_filter.form.type.filter.category', 'pim_type_metric_filter' => 'pim_filter.form.type.filter.metric', 'pim_type_price_filter' => 'pim_filter.form.type.filter.price', 'pim_type_ajax_choice_filter' => 'pim_filter.form.type.filter.ajax_choice', 'pim_type_boolean_filter' => 'pim_filter.form.type.boolean', 'pim_type_category' => 'pim_filter.form.type.category', 'pim_type_date_range' => 'pim_filter.form.type.date_range', 'pim_type_datetime_range' => 'pim_filter.form.type.datetime_range', 'oro_acl_collection' => 'pim_user.form.type.acl_collection', 'pim_acl_access_level_selector' => 'pim_user.form.type.acl_access_level_selector', 'pim_user_user' => 'pim_user.form.type.user', 'switch' => 'pim_ui.form.type.switch', 'pim_number' => 'pim_ui.form.type.number', 'pim_date' => 'pim_ui.form.type.date', 'pim_ajax_entity' => 'pim_ui.form.type.ajax_entity', 'pim_ajax_reference_data' => 'pim_ui.form.type.ajax_reference_data', 'pim_datagrid_view' => 'pim_datagrid.form.type.datagrid_view', 'pim_datagrid_product_filter_choice' => 'pim_datagrid.form.type.datagrid_product_filter_choice', 'pim_import_export_job_instance' => 'pim_import_export.form.type.job_instance', 'pim_enrich_attribute' => 'pim_enrich.form.type.attribute', 'pim_enrich_product_grid_filter_choice' => 'pim_enrich.form.type.product_grid_filter_choice', 'pim_enrich_attribute_option' => 'pim_enrich.form.type.attribute_option', 'pim_enrich_attribute_option_value' => 'pim_enrich.form.type.attribute_option_value', 'pim_attribute_option_create' => 'pim_enrich.form.type.attribute_option_create', 'pim_enrich_attributegroup' => 'pim_enrich.form.type.attribute_group', 'pim_enrich_family' => 'pim_enrich.form.type.family', 'pim_enrich_attribute_requirement' => 'pim_enrich.form.type.attribute_requirement', 'pim_category' => 'pim_enrich.form.type.category', 'pim_enrich_channel' => 'pim_enrich.form.type.channel', 'pim_enrich_localized_collection' => 'pim_enrich.form.type.localized_collection', 'pim_enrich_group' => 'pim_enrich.form.type.group', 'pim_enrich_variant_group' => 'pim_enrich.form.type.variant_group', 'pim_enrich_grouptype' => 'pim_enrich.form.type.group_type', 'pim_enrich_media' => 'pim_enrich.form.type.media', 'pim_enrich_associationtype' => 'pim_enrich.form.type.association_type', 'pim_available_attributes' => 'pim_enrich.form.type.available_attributes', 'pim_enrich_association' => 'pim_enrich.form.type.association', 'pim_enrich_conversion_units' => 'pim_enrich.form.type.conversion_units', 'light_entity' => 'pim_enrich.form.type.light_entity', 'pim_object_identifier' => 'pim_enrich.form.type.object_identifier', 'pim_enrich_scopable' => 'pim_enrich.form.type.scopable', 'pim_enrich_available_locales' => 'pim_enrich.form.type.available_locales', 'pim_enrich_options' => 'pim_enrich.form.type.options', 'pim_enrich_mass_edit_common_attributes' => 'pim_enrich.form.type.edit_common_attributes', 'pim_enrich_mass_add_to_groups' => 'pim_enrich.form.type.add_to_groups', 'pim_enrich_mass_add_to_variant_group' => 'pim_enrich.form.type.add_to_variant_group', 'pim_enrich_mass_change_family' => 'pim_enrich.form.type.change_family', 'pim_enrich_mass_change_status' => 'pim_enrich.form.type.change_status', 'pim_enrich_mass_classify' => 'pim_enrich.form.type.classify', 'pim_enrich_mass_set_attribute_requirements' => 'pim_enrich.form.type.set_attribute_requirements', 'pim_translatable_field' => 'pim_enrich.form.type.translatable_field', 'pim_enrich_entity_identifier' => 'pim_enrich.type.entity_identifier', 'pim_async_select' => 'pim_enrich.form.type.async_select', 'select_family_type' => 'pim_enrich.form.type.export_select_family', 'pim_comment_comment' => 'pim_comment.form.type.comment', 'pim_locale' => 'pim_localization.form.type.locale'), array('form' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.csrf', 3 => 'form.type_extension.form.data_collector', 4 => 'form.type_extension.validation_groups', 5 => 'pim_ui.form.extension.help', 6 => 'pim_ui.form.extension.select2'), 'repeated' => array(0 => 'form.type_extension.repeated.validator', 1 => 'form.type_extension.repeated_field_parameters'), 'submit' => array(0 => 'form.type_extension.submit.validator')), array(0 => 'form.type_guesser.validator', 1 => 'form.type_guesser.doctrine'))), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), $this->get('data_collector.form'));
    }
    protected function getForm_Type_BirthdayService()
    {
        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }
    protected function getForm_Type_ButtonService()
    {
        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }
    protected function getForm_Type_CheckboxService()
    {
        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType();
    }
    protected function getForm_Type_CollectionService()
    {
        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }
    protected function getForm_Type_CountryService()
    {
        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }
    protected function getForm_Type_CurrencyService()
    {
        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }
    protected function getForm_Type_DateService()
    {
        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }
    protected function getForm_Type_DatetimeService()
    {
        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }
    protected function getForm_Type_EmailService()
    {
        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType($this->get('doctrine'));
    }
    protected function getForm_Type_FileService()
    {
        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }
    protected function getForm_Type_HiddenService()
    {
        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }
    protected function getForm_Type_IntegerService()
    {
        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }
    protected function getForm_Type_LanguageService()
    {
        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }
    protected function getForm_Type_LocaleService()
    {
        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }
    protected function getForm_Type_MoneyService()
    {
        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }
    protected function getForm_Type_NumberService()
    {
        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }
    protected function getForm_Type_PasswordService()
    {
        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }
    protected function getForm_Type_PercentService()
    {
        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }
    protected function getForm_Type_RadioService()
    {
        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }
    protected function getForm_Type_RepeatedService()
    {
        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }
    protected function getForm_Type_ResetService()
    {
        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }
    protected function getForm_Type_SearchService()
    {
        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }
    protected function getForm_Type_SubmitService()
    {
        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }
    protected function getForm_Type_TextService()
    {
        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }
    protected function getForm_Type_TextareaService()
    {
        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }
    protected function getForm_Type_TimeService()
    {
        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }
    protected function getForm_Type_TimezoneService()
    {
        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }
    protected function getForm_Type_UrlService()
    {
        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('security.csrf.token_manager'), true, '_token', $this->get('translator.default'), 'validators');
    }
    protected function getForm_TypeExtension_Form_DataCollectorService()
    {
        return $this->services['form.type_extension.form.data_collector'] = new \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension($this->get('data_collector.form'));
    }
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler(new \Symfony\Component\Form\Util\ServerParams($this->get('request_stack'))));
    }
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }
    protected function getForm_TypeExtension_RepeatedFieldParametersService()
    {
        return $this->services['form.type_extension.repeated_field_parameters'] = new \APY\JsFormValidationBundle\Form\Extension\RepeatedTypeExtension();
    }
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }
    protected function getForm_TypeExtension_ValidationGroupsService()
    {
        $this->services['form.type_extension.validation_groups'] = $instance = new \APY\JsFormValidationBundle\Form\Extension\FormTypeExtension();
        $instance->setJsfv($this->get('jsfv.generator'));
        return $instance;
    }
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser($this->get('doctrine'));
    }
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }
    protected function getFosJsRouting_ControllerService()
    {
        return $this->services['fos_js_routing.controller'] = new \FOS\JsRoutingBundle\Controller\Controller($this->get('fos_js_routing.serializer'), $this->get('fos_js_routing.extractor'), array('enabled' => false), false);
    }
    protected function getFosJsRouting_ExtractorService()
    {
        return $this->services['fos_js_routing.extractor'] = new \FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor($this->get('router'), array(0 => NULL), __DIR__, array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle'));
    }
    protected function getFosJsRouting_SerializerService()
    {
        return $this->services['fos_js_routing.serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer()), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()));
    }
    protected function getFosRest_BodyListenerService()
    {
        $this->services['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener($this->get('fos_rest.decoder_provider'), false);
        $instance->setDefaultFormat(NULL);
        return $instance;
    }
    protected function getFosRest_Decoder_JsonService()
    {
        return $this->services['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder();
    }
    protected function getFosRest_Decoder_JsontoformService()
    {
        return $this->services['fos_rest.decoder.jsontoform'] = new \FOS\RestBundle\Decoder\JsonToFormDecoder();
    }
    protected function getFosRest_Decoder_XmlService()
    {
        return $this->services['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder();
    }
    protected function getFosRest_DecoderProviderService()
    {
        return $this->services['fos_rest.decoder_provider'] = new \FOS\RestBundle\Decoder\ContainerDecoderProvider($this, array('json' => 'fos_rest.decoder.json'));
    }
    protected function getFosRest_Exception_ControllerService()
    {
        return $this->services['fos_rest.exception.controller'] = new \FOS\RestBundle\Controller\ExceptionController($this->get('fos_rest.view_handler'), $this->get('fos_rest.exception.codes_map'), false);
    }
    protected function getFosRest_Exception_TwigControllerService()
    {
        return $this->services['fos_rest.exception.twig_controller'] = new \FOS\RestBundle\Controller\TwigExceptionController($this->get('fos_rest.view_handler'), $this->get('fos_rest.exception.codes_map'), false, $this->get('templating.engine.twig'));
    }
    protected function getFosRest_ExceptionListenerService()
    {
        return $this->services['fos_rest.exception_listener'] = new \FOS\RestBundle\EventListener\ExceptionListener('fos_rest.exception.twig_controller:showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getFosRest_FormatListenerService()
    {
        return $this->services['fos_rest.format_listener'] = new \FOS\RestBundle\EventListener\FormatListener($this->get('fos_rest.format_negotiator'));
    }
    protected function getFosRest_FormatNegotiatorService()
    {
        $this->services['fos_rest.format_negotiator'] = $instance = new \FOS\RestBundle\Negotiation\FormatNegotiator($this->get('request_stack'));
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/_profiler|_wdt/', NULL, NULL, NULL, array()), array('methods' => NULL, 'priorities' => array(0 => 'html', 1 => 'json'), 'fallback_format' => 'html', 'attributes' => array(), 'prefer_extension' => '2.0'));
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('', NULL, NULL, NULL, array()), array('priorities' => array(0 => 'html', 1 => 'json'), 'fallback_format' => 'html', 'prefer_extension' => '2.0', 'methods' => NULL, 'attributes' => array(), 'stop' => false));
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api', NULL, NULL, NULL, array()), array('priorities' => array(0 => 'json'), 'fallback_format' => 'json', 'prefer_extension' => '2.0', 'methods' => NULL, 'attributes' => array(), 'stop' => false));
        return $instance;
    }
    protected function getFosRest_InflectorService()
    {
        return $this->services['fos_rest.inflector'] = new \FOS\RestBundle\Inflector\DoctrineInflector();
    }
    protected function getFosRest_Normalizer_CamelKeysService()
    {
        return $this->services['fos_rest.normalizer.camel_keys'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizer();
    }
    protected function getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService()
    {
        return $this->services['fos_rest.normalizer.camel_keys_with_leading_underscore'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore();
    }
    protected function getFosRest_Request_ParamFetcherService()
    {
        return $this->services['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($this, $this->get('fos_rest.request.param_fetcher.reader'), $this->get('request_stack'), $this->get('validator', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getFosRest_SerializerService($lazyLoad = true)
    {
        return $this->services['fos_rest.serializer'] = new \FOS\RestBundle\Serializer\JMSSerializerAdapter($this->get('jms_serializer'));
    }
    protected function getFosRest_Serializer_ExceptionNormalizer_JmsService()
    {
        return $this->services['fos_rest.serializer.exception_normalizer.jms'] = new \FOS\RestBundle\Serializer\Normalizer\ExceptionHandler(new \FOS\RestBundle\Util\ExceptionValueMap(array('Pim\\Bundle\\EnrichBundle\\Exception\\DeleteException' => true, 'Symfony\\Component\\HttpKernel\\Exception\\ConflictHttpException' => true)), false);
    }
    protected function getFosRest_ViewHandlerService()
    {
        $this->services['fos_rest.view_handler'] = $instance = new \FOS\RestBundle\View\ViewHandler($this->get('router'), $this->get('fos_rest.serializer'), $this->get('templating'), $this->get('request_stack'), array('json' => false, 'html' => true), 400, 204, false, array('html' => 302), 'php');
        $instance->setSerializeNullStrategy(false);
        return $instance;
    }
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler($this, false, $this->get('request_stack'));
        $instance->addRendererService('inline', 'fragment.renderer.inline');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('esi', 'fragment.renderer.esi');
        $instance->addRendererService('ssi', 'fragment.renderer.ssi');
        return $instance;
    }
    protected function getFragment_ListenerService()
    {
        return $this->services['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener($this->get('uri_signer'), '/_fragment');
    }
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer($this->get('templating'), $this->get('uri_signer'), NULL);
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('event_dispatcher'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getGedmo_Listener_TimestampableService()
    {
        $this->services['gedmo.listener.timestampable'] = $instance = new \Gedmo\Timestampable\TimestampableListener();
        $instance->setAnnotationReader($this->get('annotation_reader'));
        return $instance;
    }
    protected function getGedmo_Listener_TreeService()
    {
        $this->services['gedmo.listener.tree'] = $instance = new \Gedmo\Tree\TreeListener();
        $instance->setAnnotationReader($this->get('annotation_reader'));
        return $instance;
    }
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel($this->get('event_dispatcher'), $this, new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, $this->get('controller_name_converter'), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('request_stack'), false);
    }
    protected function getJmsSerializerService()
    {
        $a = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', false);
        $a->setCache(new \Metadata\Cache\FileCache((__DIR__.'/jms_serializer')));
        $b = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $b->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL))));
        return $this->services['jms_serializer'] = new \JMS\Serializer\Serializer($a, $this->get('jms_serializer.handler_registry'), $this->get('jms_serializer.unserialize_object_constructor'), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_serialization_visitor'), 'xml' => $this->get('jms_serializer.xml_serialization_visitor'), 'yml' => $this->get('jms_serializer.yaml_serialization_visitor'))), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_deserialization_visitor'), 'xml' => $this->get('jms_serializer.xml_deserialization_visitor'))), $b);
    }
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler();
    }
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('Y-m-d\\TH:i:sO', 'Europe/Paris', true);
    }
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber();
    }
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \JMS\Serializer\Handler\FormErrorHandler($this->get('translator'));
    }
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \FOS\RestBundle\Serializer\JMSHandlerRegistry($this->get('fos_rest.serializer.jms_handler_registry'));
    }
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
    }
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor($this->get('jms_serializer.naming_strategy'));
        $instance->setOptions(0);
        return $instance;
    }
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = new \Metadata\Driver\FileLocator(array('Symfony\\Bundle\\FrameworkBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer'), 'Symfony\\Bundle\\SecurityBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer'), 'Symfony\\Bundle\\TwigBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer'), 'Symfony\\Bundle\\MonologBundle' => ($this->targetDirs[3].'/vendor/symfony/monolog-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\SwiftmailerBundle' => ($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\AsseticBundle' => ($this->targetDirs[3].'/vendor/symfony/assetic-bundle/Symfony/Bundle/AsseticBundle/Resources/config/serializer'), 'Sensio\\Bundle\\FrameworkExtraBundle' => ($this->targetDirs[3].'/vendor/sensio/framework-extra-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer'), 'Doctrine\\Bundle\\FixturesBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-fixtures-bundle/Doctrine/Bundle/FixturesBundle/Resources/config/serializer'), 'Escape\\WSSEAuthenticationBundle' => ($this->targetDirs[3].'/vendor/escapestudios/wsse-authentication-bundle/Escape/WSSEAuthenticationBundle/Resources/config/serializer'), 'FOS\\JsRoutingBundle' => ($this->targetDirs[3].'/vendor/friendsofsymfony/jsrouting-bundle/Resources/config/serializer'), 'FOS\\RestBundle' => ($this->targetDirs[3].'/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer'), 'JMS\\SerializerBundle' => ($this->targetDirs[3].'/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer'), 'Knp\\Bundle\\MenuBundle' => ($this->targetDirs[3].'/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer'), 'Liip\\ImagineBundle' => ($this->targetDirs[3].'/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/config/serializer'), 'Oro\\Bundle\\AsseticBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/AsseticBundle/Resources/config/serializer'), 'Oro\\Bundle\\ConfigBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/ConfigBundle/Resources/config/serializer'), 'Oro\\Bundle\\DataGridBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/DataGridBundle/Resources/config/serializer'), 'Oro\\Bundle\\FilterBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/FilterBundle/Resources/config/serializer'), 'Oro\\Bundle\\NavigationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/config/serializer'), 'Oro\\Bundle\\RequireJSBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/RequireJSBundle/Resources/config/serializer'), 'Oro\\Bundle\\SecurityBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/SecurityBundle/Resources/config/serializer'), 'Oro\\Bundle\\TranslationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/TranslationBundle/Resources/config/serializer'), 'Oro\\Bundle\\UserBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/config/serializer'), 'APY\\JsFormValidationBundle' => ($this->targetDirs[3].'/vendor/apy/jsfv-bundle/APY/JsFormValidationBundle/Resources/config/serializer'), 'Doctrine\\Bundle\\MigrationsBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer'), 'Oneup\\FlysystemBundle' => ($this->targetDirs[3].'/vendor/oneup/flysystem-bundle/Resources/config/serializer'), 'Akeneo\\Bundle\\MeasureBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/config/serializer'), 'Akeneo\\Bundle\\BatchBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/serializer'), 'Akeneo\\Bundle\\BufferBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BufferBundle/Resources/config/serializer'), 'Akeneo\\Bundle\\StorageUtilsBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/StorageUtilsBundle/Resources/config/serializer'), 'Akeneo\\Bundle\\FileStorageBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/FileStorageBundle/Resources/config/serializer'), 'Pim\\Bundle\\NavigationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/config/serializer'), 'Pim\\Bundle\\FilterBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/config/serializer'), 'Pim\\Bundle\\UserBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/config/serializer'), 'Pim\\Bundle\\JsFormValidationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/JsFormValidationBundle/Resources/config/serializer'), 'Pim\\Bundle\\AnalyticsBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/config/serializer'), 'Pim\\Bundle\\DashboardBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/config/serializer'), 'Pim\\Bundle\\InstallerBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/InstallerBundle/Resources/config/serializer'), 'Pim\\Bundle\\UIBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/config/serializer'), 'Pim\\Bundle\\NotificationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/config/serializer'), 'Pim\\Bundle\\CatalogBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/serializer'), 'Pim\\Bundle\\DataGridBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/config/serializer'), 'Pim\\Bundle\\ImportExportBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/config/serializer'), 'Pim\\Bundle\\VersioningBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/VersioningBundle/Resources/config/serializer'), 'Pim\\Bundle\\EnrichBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/config/serializer'), 'Pim\\Bundle\\CommentBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/config/serializer'), 'Pim\\Bundle\\PdfGeneratorBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/PdfGeneratorBundle/Resources/config/serializer'), 'Pim\\Bundle\\ReferenceDataBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ReferenceDataBundle/Resources/config/serializer'), 'Pim\\Bundle\\ConnectorBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/config/serializer'), 'Pim\\Bundle\\LocalizationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/config/serializer'), 'Akeneo\\Bundle\\ClassificationBundle' => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/ClassificationBundle/Resources/config/serializer'), 'Symfony\\Bundle\\WebProfilerBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer'), 'Sensio\\Bundle\\DistributionBundle' => ($this->targetDirs[3].'/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer'), 'Sensio\\Bundle\\GeneratorBundle' => ($this->targetDirs[3].'/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer'), 'Symfony\\Bundle\\DebugBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer')));
        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \JMS\Serializer\Metadata\Driver\PhpDriver($a), 3 => new \JMS\Serializer\Metadata\Driver\AnnotationDriver($this->get('annotation_reader')))), $this->get('doctrine'));
    }
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true)));
    }
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor($this->get('doctrine'), $this->get('jms_serializer.unserialize_object_constructor'));
    }
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper($this->get('jms_serializer'));
    }
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
        $instance->setDoctypeWhitelist(array());
        return $instance;
    }
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        return $this->services['jms_serializer.xml_serialization_visitor'] = new \JMS\Serializer\XmlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }
    protected function getJsfv_ControllerService()
    {
        return $this->services['jsfv.controller'] = new \APY\JsFormValidationBundle\Controller\Controller($this);
    }
    protected function getJsfv_GeneratorService()
    {
        return $this->services['jsfv.generator'] = new \Pim\Bundle\JsFormValidationBundle\Generator\FormValidationScriptGenerator($this, $this->get('validator'));
    }
    protected function getJsfv_RepeatedFieldListenerService()
    {
        return $this->services['jsfv.repeated_field_listener'] = new \APY\JsFormValidationBundle\EventListener\RepeatedFieldListener();
    }
    protected function getJsfv_ValidationGroupsListenerService()
    {
        return $this->services['jsfv.validation_groups_listener'] = new \APY\JsFormValidationBundle\EventListener\ValidationGroupsListener();
    }
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }
    protected function getKernel_CacheWarmer_JsformvalidationService()
    {
        return $this->services['kernel.cache_warmer.jsformvalidation'] = new \APY\JsFormValidationBundle\CacheWarmer\JsFormValidationCacheWarmer($this);
    }
    protected function getKernel_Listener_HashnavResponseService()
    {
        return $this->services['kernel.listener.hashnav_response'] = new \Oro\Bundle\NavigationBundle\Event\ResponseHashnavListener($this);
    }
    protected function getKernel_Listener_NavHistoryResponseService()
    {
        return $this->services['kernel.listener.nav_history_response'] = new \Oro\Bundle\NavigationBundle\Event\ResponseHistoryListener($this->get('security.token_storage'), $this);
    }
    protected function getKernel_Listener_TitleService_RequestListenerService()
    {
        return $this->services['kernel.listener.title_service.request_listener'] = new \Oro\Bundle\NavigationBundle\Event\RequestTitleListener($this);
    }
    protected function getKnpMenu_FactoryService()
    {
        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();
        $instance->addExtension(new \Knp\Menu\Integration\Symfony\RoutingExtension($this->get('router')), 0);
        return $instance;
    }
    protected function getKnpMenu_Listener_VotersService()
    {
        $this->services['knp_menu.listener.voters'] = $instance = new \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener();
        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('knp_voter_request'));
        return $instance;
    }
    protected function getKnpMenu_MatcherService()
    {
        $this->services['knp_menu.matcher'] = $instance = new \Knp\Menu\Matcher\Matcher();
        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('knp_voter_request'));
        return $instance;
    }
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array()), 1 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory')), 2 => $this->get('oro_menu.builder_chain')));
    }
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer($this->get('knp_menu.matcher'), array(), 'UTF-8');
    }
    protected function getKnpMenu_Renderer_TwigService()
    {
        return $this->services['knp_menu.renderer.twig'] = new \Knp\Menu\Renderer\TwigRenderer($this->get('twig'), 'knp_menu.html.twig', $this->get('knp_menu.matcher'), array());
    }
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'));
    }
    protected function getKnpMenu_Voter_RouterService()
    {
        return $this->services['knp_menu.voter.router'] = new \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RoutePatternVoter();
    }
    protected function getKnpVoterRequestService()
    {
        return $this->services['knp_voter_request'] = new \Oro\Bundle\NavigationBundle\Menu\Matcher\Voter\RequestVoter();
    }
    protected function getLiipImagineService()
    {
        $this->services['liip_imagine'] = $instance = new \Imagine\Gd\Imagine();
        $instance->setMetadataReader(new \Imagine\Image\Metadata\ExifMetadataReader());
        return $instance;
    }
    protected function getLiipImagine_Binary_Loader_DefaultService()
    {
        return $this->services['liip_imagine.binary.loader.default'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), ($this->targetDirs[2].'/../web'));
    }
    protected function getLiipImagine_Binary_Loader_Prototype_FilesystemService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.filesystem'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), '');
    }
    protected function getLiipImagine_Binary_Loader_Prototype_StreamService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.stream'] = new \Liip\ImagineBundle\Binary\Loader\StreamLoader('', '');
    }
    protected function getLiipImagine_Binary_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.binary.mime_type_guesser'] = new \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser($this->get('liip_imagine.mime_type_guesser'));
    }
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager($this->get('liip_imagine.filter.configuration'), $this->get('router'), $this->get('liip_imagine.cache.signer'), $this->get('event_dispatcher'), 'default');
        $instance->addResolver('default', $this->get('liip_imagine.cache.resolver.default'));
        $instance->addResolver('no_cache', $this->get('liip_imagine.cache.resolver.no_cache_web_path'));
        return $instance;
    }
    protected function getLiipImagine_Cache_Resolver_DefaultService()
    {
        return $this->services['liip_imagine.cache.resolver.default'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver($this->get('filesystem'), $this->get('router.request_context'), ($this->targetDirs[2].'/../web'), 'media/cache');
    }
    protected function getLiipImagine_Cache_Resolver_NoCacheWebPathService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache_web_path'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver($this->get('router.request_context'));
    }
    protected function getLiipImagine_Cache_SignerService()
    {
        return $this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('ThisTokenIsNotSoSecretChangeIt');
    }
    protected function getLiipImagine_ControllerService()
    {
        return $this->services['liip_imagine.controller'] = new \Liip\ImagineBundle\Controller\ImagineController($this->get('liip_imagine.data.manager'), $this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'), $this->get('liip_imagine.cache.signer'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getLiipImagine_Data_ManagerService()
    {
        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager($this->get('liip_imagine.binary.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), $this->get('liip_imagine.filter.configuration'), 'flysystem_data_loader', NULL);
        $instance->addLoader('default', $this->get('liip_imagine.binary.loader.default'));
        $instance->addLoader('flysystem_data_loader', $this->get('pim_enrich.imagine.loader.flysystem'));
        return $instance;
    }
    protected function getLiipImagine_ExtensionGuesserService()
    {
        return $this->services['liip_imagine.extension_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser::getInstance();
    }
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        return $this->services['liip_imagine.filter.configuration'] = new \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration(array('avatar_med' => array('quality' => 95, 'format' => 'jpg', 'filters' => array('thumbnail' => array('size' => array(0 => 58, 1 => 58), 'mode' => 'outbound'), 'strip' => array()), 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'preview' => array('quality' => 95, 'format' => 'jpg', 'filters' => array('thumbnail' => array('size' => array(0 => 900, 1 => 600), 'mode' => 'inset'), 'strip' => array()), 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumbnail' => array('quality' => 95, 'format' => 'jpg', 'filters' => array('thumbnail' => array('size' => array(0 => 320, 1 => 240), 'mode' => 'outbound'), 'strip' => array()), 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumbnail_small' => array('quality' => 95, 'format' => 'jpg', 'filters' => array('thumbnail' => array('size' => array(0 => 80, 1 => 120), 'mode' => 'inset'), 'strip' => array()), 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array())));
    }
    protected function getLiipImagine_Filter_Loader_AutoRotateService()
    {
        return $this->services['liip_imagine.filter.loader.auto_rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_BackgroundService()
    {
        return $this->services['liip_imagine.filter.loader.background'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($this->get('liip_imagine'));
    }
    protected function getLiipImagine_Filter_Loader_CropService()
    {
        return $this->services['liip_imagine.filter.loader.crop'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_InterlaceService()
    {
        return $this->services['liip_imagine.filter.loader.interlace'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_PasteService()
    {
        return $this->services['liip_imagine.filter.loader.paste'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($this->get('liip_imagine'), $this->targetDirs[2]);
    }
    protected function getLiipImagine_Filter_Loader_RelativeResizeService()
    {
        return $this->services['liip_imagine.filter.loader.relative_resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ResizeService()
    {
        return $this->services['liip_imagine.filter.loader.resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_RotateService()
    {
        return $this->services['liip_imagine.filter.loader.rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_StripService()
    {
        return $this->services['liip_imagine.filter.loader.strip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ThumbnailService()
    {
        return $this->services['liip_imagine.filter.loader.thumbnail'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_UpscaleService()
    {
        return $this->services['liip_imagine.filter.loader.upscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_WatermarkService()
    {
        return $this->services['liip_imagine.filter.loader.watermark'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($this->get('liip_imagine'), $this->targetDirs[2]);
    }
    protected function getLiipImagine_Filter_ManagerService()
    {
        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager($this->get('liip_imagine.filter.configuration'), $this->get('liip_imagine'), $this->get('liip_imagine.binary.mime_type_guesser'));
        $instance->addLoader('relative_resize', $this->get('liip_imagine.filter.loader.relative_resize'));
        $instance->addLoader('resize', $this->get('liip_imagine.filter.loader.resize'));
        $instance->addLoader('thumbnail', $this->get('liip_imagine.filter.loader.thumbnail'));
        $instance->addLoader('crop', $this->get('liip_imagine.filter.loader.crop'));
        $instance->addLoader('paste', $this->get('liip_imagine.filter.loader.paste'));
        $instance->addLoader('watermark', $this->get('liip_imagine.filter.loader.watermark'));
        $instance->addLoader('background', $this->get('liip_imagine.filter.loader.background'));
        $instance->addLoader('strip', $this->get('liip_imagine.filter.loader.strip'));
        $instance->addLoader('upscale', $this->get('liip_imagine.filter.loader.upscale'));
        $instance->addLoader('auto_rotate', $this->get('liip_imagine.filter.loader.auto_rotate'));
        $instance->addLoader('rotate', $this->get('liip_imagine.filter.loader.rotate'));
        $instance->addLoader('interlace', $this->get('liip_imagine.filter.loader.interlace'));
        $instance->addPostProcessor('jpegoptim', $this->get('liip_imagine.filter.post_processor.jpegoptim'));
        return $instance;
    }
    protected function getLiipImagine_Filter_PostProcessor_JpegoptimService()
    {
        return $this->services['liip_imagine.filter.post_processor.jpegoptim'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor('/usr/bin/jpegoptim');
    }
    protected function getLiipImagine_Form_Type_ImageService()
    {
        return $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }
    protected function getLiipImagine_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.mime_type_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser::getInstance();
    }
    protected function getLiipImagine_Templating_HelperService()
    {
        return $this->services['liip_imagine.templating.helper'] = new \Liip\ImagineBundle\Templating\Helper\ImagineHelper($this->get('liip_imagine.cache.manager'));
    }
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener('en', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Handler_FirephpService()
    {
        return $this->services['monolog.handler.firephp'] = new \Symfony\Bridge\Monolog\Handler\FirePHPHandler(200, true);
    }
    protected function getMonolog_Handler_MainService()
    {
        return $this->services['monolog.handler.main'] = new \Monolog\Handler\StreamHandler(($this->targetDirs[2].'/logs/dev.log'), 100, true, NULL);
    }
    protected function getMonolog_Logger_BatchService()
    {
        $this->services['monolog.logger.batch'] = $instance = new \Symfony\Bridge\Monolog\Logger('batch');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('akeneo_batch.logger.batch_log_handler'));
        return $instance;
    }
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_ProfilerService()
    {
        $this->services['monolog.logger.profiler'] = $instance = new \Symfony\Bridge\Monolog\Logger('profiler');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');
        $instance->pushHandler($this->get('monolog.handler.firephp'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getOneupFlysystem_ArchivistFilesystemService()
    {
        $this->services['oneup_flysystem.archivist_filesystem'] = $instance = new \League\Flysystem\Filesystem(new \League\Flysystem\Adapter\Local(($this->targetDirs[2].'/archive')), array());
        $instance->addPlugin($this->get('oneup_flysystem.plugin.list_files'));
        return $instance;
    }
    protected function getOneupFlysystem_CatalogStorageFilesystemService()
    {
        return $this->services['oneup_flysystem.catalog_storage_filesystem'] = new \League\Flysystem\Filesystem(new \League\Flysystem\Adapter\Local(($this->targetDirs[2].'/file_storage/catalog')), array());
    }
    protected function getOneupFlysystem_MountManagerService()
    {
        $this->services['oneup_flysystem.mount_manager'] = $instance = new \League\Flysystem\MountManager();
        $instance->mountFilesystem('catalogStorage', $this->get('oneup_flysystem.catalog_storage_filesystem'));
        $instance->mountFilesystem('tmpStorage', $this->get('oneup_flysystem.tmp_storage_filesystem'));
        $instance->mountFilesystem('archivist', $this->get('oneup_flysystem.archivist_filesystem'));
        return $instance;
    }
    protected function getOneupFlysystem_Plugin_EmptyDirService()
    {
        return $this->services['oneup_flysystem.plugin.empty_dir'] = new \League\Flysystem\Plugin\EmptyDir();
    }
    protected function getOneupFlysystem_Plugin_GetWithMetadataService()
    {
        return $this->services['oneup_flysystem.plugin.get_with_metadata'] = new \League\Flysystem\Plugin\GetWithMetadata();
    }
    protected function getOneupFlysystem_Plugin_ListFilesService()
    {
        return $this->services['oneup_flysystem.plugin.list_files'] = new \League\Flysystem\Plugin\ListFiles();
    }
    protected function getOneupFlysystem_Plugin_ListPathsService()
    {
        return $this->services['oneup_flysystem.plugin.list_paths'] = new \League\Flysystem\Plugin\ListPaths();
    }
    protected function getOneupFlysystem_Plugin_ListWithService()
    {
        return $this->services['oneup_flysystem.plugin.list_with'] = new \League\Flysystem\Plugin\ListWith();
    }
    protected function getOneupFlysystem_TmpStorageFilesystemService()
    {
        $this->services['oneup_flysystem.tmp_storage_filesystem'] = $instance = new \League\Flysystem\Filesystem(new \League\Flysystem\Adapter\Local('/tmp/pim/file_storage'), array());
        $instance->addPlugin($this->get('oneup_flysystem.plugin.list_files'));
        return $instance;
    }
    protected function getOroAssetic_AssetManagerService()
    {
        return $this->services['oro_assetic.asset_manager'] = new \Oro\Bundle\AsseticBundle\Factory\OroAssetManager($this->get('assetic.asset_manager'), $this->get('twig'), array('css' => array(0 => 'lib', 1 => 'lib_customization', 2 => 'bem', 3 => 'grids')), array('css' => array()));
    }
    protected function getOroAssetic_Twig_ExtensionService()
    {
        return $this->services['oro_assetic.twig.extension'] = new \Oro\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('assetic.asset_factory'), array('css' => array('compress' => array(0 => array(0 => 'bundles/pimui/lib/bootstrap/less/bootstrap.less', 1 => 'bundles/pimui/lib/font-awesome/css/font-awesome.css', 2 => 'bundles/pimui/lib/bootstrap-switch/bootstrap.switch.css', 3 => 'bundles/pimui/lib/bootstrap-datetimepicker/css/bootstrap-datepicker.css', 4 => 'bundles/pimui/lib/select2/select2.css', 5 => 'bundles/pimui/lib/slimbox2/slimbox2.css', 6 => 'bundles/pimui/lib/summernote/summernote.css', 7 => 'bundles/pimui/less/lib/bootstrap.switch.less', 8 => 'bundles/pimui/less/lib/dialog.less', 9 => 'bundles/pimui/less/lib/dropdown.less', 10 => 'bundles/pimui/less/lib/flags.less', 11 => 'bundles/pimui/less/lib/font-awesome.less', 12 => 'bundles/pimui/less/lib/jquery.jstree.less', 13 => 'bundles/pimui/less/lib/jquery-ui.less', 14 => 'bundles/pimui/less/lib/jquery.multiselect.less', 15 => 'bundles/pimui/less/lib/jquery.sidebarize.less', 16 => 'bundles/pimui/less/lib/modal.less', 17 => 'bundles/pimui/less/lib/navs.less', 18 => 'bundles/pimui/less/lib/select2.less', 19 => 'bundles/pimui/less/lib/slimbox2.less', 20 => 'bundles/pimui/less/lib/tabs.less', 21 => 'bundles/pimui/less/lib/wizard.less', 22 => 'bundles/pimui/less/lib/select2.less', 23 => 'bundles/pimui/less/base/general.less', 24 => 'bundles/pimui/less/components/button/ActionButton.less', 25 => 'bundles/pimui/less/components/button/SeveralActionsButton.less', 26 => 'bundles/pimui/less/components/button/Button.less', 27 => 'bundles/pimui/less/components/button/ButtonList.less', 28 => 'bundles/pimui/less/components/button/DropdownButton.less', 29 => 'bundles/pimui/less/components/button/IconButton.less', 30 => 'bundles/pimui/less/components/grid/FilterBox.less', 31 => 'bundles/pimui/less/components/grid/FilterChoice.less', 32 => 'bundles/pimui/less/components/grid/FilterDate.less', 33 => 'bundles/pimui/less/components/grid/Grid.less', 34 => 'bundles/pimui/less/components/grid/GridsLine.less', 35 => 'bundles/pimui/less/components/grid/GridContainer.less', 36 => 'bundles/pimui/less/components/grid/GridToolbar.less', 37 => 'bundles/pimui/less/components/product-edit-form/AttributeActions.less', 38 => 'bundles/pimui/less/components/product-edit-form/CommentPanel.less', 39 => 'bundles/pimui/less/components/product-edit-form/CompletenessBlock.less', 40 => 'bundles/pimui/less/components/product-edit-form/ComparableFields.less', 41 => 'bundles/pimui/less/components/product-edit-form/FieldContainer.less', 42 => 'bundles/pimui/less/components/product-edit-form/FormContainer.less', 43 => 'bundles/pimui/less/components/product-edit-form/HorizontalNavtab.less', 44 => 'bundles/pimui/less/components/product-edit-form/MediaField.less', 45 => 'bundles/pimui/less/components/product-edit-form/MetricField.less', 46 => 'bundles/pimui/less/components/product-edit-form/PanelContainer.less', 47 => 'bundles/pimui/less/components/product-edit-form/PriceList.less', 48 => 'bundles/pimui/less/components/product-edit-form/TabHeader.less', 49 => 'bundles/pimui/less/components/product-edit-form/TextareaField.less', 50 => 'bundles/pimui/less/components/product-edit-form/TextField.less', 51 => 'bundles/pimui/less/components/product-edit-form/VerticalNavtab.less', 52 => 'bundles/pimui/less/components/Acl.less', 53 => 'bundles/pimui/less/components/Badge.less', 54 => 'bundles/pimui/less/components/Bell.less', 55 => 'bundles/pimui/less/components/Breadcrumb.less', 56 => 'bundles/pimui/less/components/BreadcrumbContainer.less', 57 => 'bundles/pimui/less/components/Caret.less', 58 => 'bundles/pimui/less/components/ColumnConfigurator.less', 59 => 'bundles/pimui/less/components/DashboardButtons.less', 60 => 'bundles/pimui/less/components/Diff.less', 61 => 'bundles/pimui/less/components/Dropdown.less', 62 => 'bundles/pimui/less/components/Flash.less', 63 => 'bundles/pimui/less/components/Footer.less', 64 => 'bundles/pimui/less/components/Header.less', 65 => 'bundles/pimui/less/components/InfoBlock.less', 66 => 'bundles/pimui/less/components/List.less', 67 => 'bundles/pimui/less/components/LoadingMask.less', 68 => 'bundles/pimui/less/components/MessageBox.less', 69 => 'bundles/pimui/less/components/MainMenu.less', 70 => 'bundles/pimui/less/components/Notification.less', 71 => 'bundles/pimui/less/components/NotificationList.less', 72 => 'bundles/pimui/less/components/Progress.less', 73 => 'bundles/pimui/less/components/ProjectWidget.less', 74 => 'bundles/pimui/less/components/Rule.less', 75 => 'bundles/pimui/less/components/SequentialEdit.less', 76 => 'bundles/pimui/less/components/TabContainer.less', 77 => 'bundles/pimui/less/components/TitleContainer.less', 78 => 'bundles/pimui/less/components/UserMenu.less', 79 => 'bundles/pimui/less/components/VerticalList.less', 80 => 'bundles/pimui/less/components/Widget.less', 81 => 'bundles/pimui/less/pages/Default.less', 82 => 'bundles/pimui/less/pages/Login.less', 83 => 'bundles/pimdatagrid/lib/multiselect/jquery.multiselect.css', 84 => 'bundles/pimdatagrid/lib/multiselect/jquery.multiselect.filter.css')), 'uncompress' => array(0 => array()))), $this->get('templating.name_parser'), array(0 => 'OroAsseticBundle', 1 => 'OroNavigationBundle', 2 => 'PimUserBundle', 3 => 'PimUIBundle', 4 => 'PimCatalogBundle', 5 => 'PimEnrichBundle', 6 => 'PimNotificationBundle'));
    }
    protected function getOroConfig_Controller_ConfigurationService()
    {
        return $this->services['oro_config.controller.configuration'] = new \Oro\Bundle\ConfigBundle\Controller\Rest\ConfigurationController($this->get('oro_config.global'), $this->get('file_locator'), '@PimUIBundle/Resources/config/loading_messages.txt', array(0 => array('section' => 'pim_localization', 'name' => 'language'), 1 => array('section' => 'pim_analytics', 'name' => 'version_update'), 2 => array('section' => 'pim_ui', 'name' => 'loading_message_enabled'), 3 => array('section' => 'pim_ui', 'name' => 'loading_messages')));
    }
    protected function getOroConfig_Form_ConfigSubscriberService()
    {
        return $this->services['oro_config.form.config_subscriber'] = new \Oro\Bundle\ConfigBundle\Form\EventListener\ConfigSubscriber($this->get('oro_config.user'));
    }
    protected function getOroConfig_GlobalService()
    {
        return $this->services['oro_config.global'] = new \Oro\Bundle\ConfigBundle\Config\ConfigManager($this->get('doctrine.orm.default_entity_manager'), array('oro_navigation' => array('maxItems' => array('value' => 20, 'scope' => 'app'), 'title_suffix' => array('value' => '', 'scope' => 'app'), 'title_delimiter' => array('value' => '-', 'scope' => 'app'), 'breadcrumb_menu' => array('value' => 'application_menu', 'scope' => 'app')), 'pim_analytics' => array('version_update' => array('value' => true, 'scope' => 'app')), 'pim_ui' => array('loading_message_enabled' => array('value' => true, 'scope' => 'app')), 'pim_localization' => array('language' => array('value' => 'en', 'scope' => 'app'))));
    }
    protected function getOroConfig_Twig_ConfigExtensionService()
    {
        return $this->services['oro_config.twig.config_extension'] = new \Oro\Bundle\ConfigBundle\Twig\ConfigExtension($this->get('oro_config.global'));
    }
    protected function getOroConfig_UserService()
    {
        $this->services['oro_config.user'] = $instance = new \Oro\Bundle\ConfigBundle\Config\UserConfigManager($this->get('doctrine.orm.default_entity_manager'), array('oro_navigation' => array('maxItems' => array('value' => 20, 'scope' => 'app'), 'title_suffix' => array('value' => '', 'scope' => 'app'), 'title_delimiter' => array('value' => '-', 'scope' => 'app'), 'breadcrumb_menu' => array('value' => 'application_menu', 'scope' => 'app')), 'pim_analytics' => array('version_update' => array('value' => true, 'scope' => 'app')), 'pim_ui' => array('loading_message_enabled' => array('value' => true, 'scope' => 'app')), 'pim_localization' => array('language' => array('value' => 'en', 'scope' => 'app'))));
        $instance->setSecurity($this->get('security.token_storage'));
        return $instance;
    }
    protected function getOroDatagrid_Configuration_ProviderService()
    {
        return $this->services['oro_datagrid.configuration.provider'] = new \Oro\Bundle\DataGridBundle\Provider\ConfigurationProvider(array('roles-grid' => array('options' => array('entityHint' => 'role'), 'source' => array('acl_resource' => 'pim_user_role_index', 'type' => 'orm', 'query' => array('select' => array(0 => 'r.id', 1 => 'r.role', 2 => 'r.label'), 'from' => array(0 => array('table' => 'OroUserBundle:Role', 'alias' => 'r')), 'where' => array('and' => array(0 => 'r.role <> \'Pim\\Bundle\\UserBundle\\Entity\\User::ROLE_ANONYMOUS\'')))), 'columns' => array('label' => array('label' => 'oro.user.grid.roles.columns.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_role_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_user_role_delete', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'Update', 'link' => 'update_link', 'icon' => 'edit', 'acl_resource' => 'pim_user_role_edit', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'pim_user_role_remove')), 'sorters' => array('columns' => array('label' => array('data_name' => 'r.label')), 'default' => array('label' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'r.label')))), 'pim-user-relation-grid' => array('source' => array('type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName'), 'from' => array(0 => array('table' => 'Pim\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')))), 'columns' => array(), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName')), 'default' => array('id' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array()), 'groups-grid' => array('options' => array('entityHint' => 'group'), 'source' => array('acl_resource' => 'pim_user_group_index', 'type' => 'orm', 'query' => array('select' => array(0 => 'g.id', 1 => 'g.name'), 'from' => array(0 => array('table' => 'OroUserBundle:Group', 'alias' => 'g')), 'where' => array('and' => array(0 => 'g.name <> \'Pim\\Bundle\\UserBundle\\Entity\\User::GROUP_DEFAULT\'')))), 'columns' => array('name' => array('label' => 'oro.user.grid.groups.columns.name')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_group_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_user_group_delete', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'Update', 'link' => 'update_link', 'icon' => 'pencil', 'acl_resource' => 'pim_user_group_edit', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'pim_user_group_remove')), 'sorters' => array('columns' => array('name' => array('data_name' => 'g.name')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'g.name')))), 'pim-role-grid' => array('options' => array('entityHint' => 'role'), 'source' => array('acl_resource' => 'pim_user_role_index', 'type' => 'orm', 'query' => array('select' => array(0 => 'r.id', 1 => 'r.role', 2 => 'r.label'), 'from' => array(0 => array('table' => 'OroUserBundle:Role', 'alias' => 'r')), 'where' => array('and' => array(0 => 'r.role <> \'Pim\\Bundle\\UserBundle\\Entity\\User::ROLE_ANONYMOUS\'')))), 'columns' => array('label' => array('label' => 'oro.user.grid.roles.columns.label')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_role_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_user_role_delete', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'Update', 'link' => 'update_link', 'icon' => 'pencil', 'acl_resource' => 'pim_user_role_edit', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'pim_user_role_remove')), 'sorters' => array('columns' => array('label' => array('data_name' => 'r.label')), 'default' => array('label' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('label' => array('type' => 'string', 'data_name' => 'r.label')))), 'pim-group-user-grid' => array('extend' => 'pim-user-relation-grid', 'source' => array('acl_resource' => 'pim_user_group_edit', 'query' => array('select' => array(0 => '(CASE WHEN (:group_id IS NOT NULL) THEN   CASE WHEN (:group_id MEMBER OF u.groups OR u.id IN (:data_in)) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END ELSE   CASE WHEN u.id IN (:data_in) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END END) as has_group'))), 'columns' => array('has_group' => array('label' => 'Has group', 'editable' => true, 'frontend_type' => 'boolean'), 'firstName' => array('label' => 'oro.user.grid.users.columns.firstName'), 'lastName' => array('label' => 'oro.user.grid.users.columns.lastName'), 'username' => array('label' => 'oro.user.grid.users.columns.username'), 'email' => array('label' => 'oro.user.grid.users.columns.email')), 'filters' => array('columns' => array('has_group' => array('type' => 'boolean', 'data_name' => 'has_group', 'filter_by_having' => true), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'))), 'sorters' => array('multiple_sorting' => true, 'columns' => array('has_group' => array('data_name' => 'has_group')), 'default' => array('has_group' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC', 'lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'options' => array('requireJSModules' => array(0 => 'oro/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'has_group', 'selectors' => array('included' => '#groupAppendUsers', 'excluded' => '#groupRemoveUsers')))), 'pim-user-group-grid' => array('options' => array('entityHint' => 'group'), 'source' => array('acl_resource' => 'pim_user_group_index', 'type' => 'orm', 'query' => array('select' => array(0 => 'g.id', 1 => 'g.name'), 'from' => array(0 => array('table' => 'OroUserBundle:Group', 'alias' => 'g')), 'where' => array('and' => array(0 => 'g.name <> \'Pim\\Bundle\\UserBundle\\Entity\\User::GROUP_DEFAULT\'')))), 'columns' => array('name' => array('label' => 'oro.user.grid.groups.columns.name')), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_group_update', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_user_group_delete', 'params' => array(0 => 'id'))), 'actions' => array('update' => array('type' => 'navigate', 'label' => 'Update', 'link' => 'update_link', 'icon' => 'pencil', 'acl_resource' => 'pim_user_group_edit', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'pim_user_group_remove')), 'sorters' => array('columns' => array('name' => array('data_name' => 'g.name')), 'default' => array('name' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('name' => array('type' => 'string', 'data_name' => 'g.name')))), 'pim-role-user-grid' => array('extend' => 'pim-user-relation-grid', 'source' => array('acl_resource' => 'pim_user_role_edit', 'query' => array('select' => array(0 => '(CASE WHEN (:role_id IS NOT NULL) THEN   CASE WHEN (:role_id MEMBER OF u.roles OR u.id IN (:data_in)) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END ELSE   CASE WHEN u.id IN (:data_in) AND u.id NOT IN (:data_not_in)   THEN true ELSE false END END) as has_role'))), 'columns' => array('has_role' => array('label' => 'Has role', 'editable' => true, 'frontend_type' => 'boolean'), 'firstName' => array('label' => 'oro.user.grid.users.columns.firstName'), 'lastName' => array('label' => 'oro.user.grid.users.columns.lastName'), 'username' => array('label' => 'oro.user.grid.users.columns.username'), 'email' => array('label' => 'oro.user.grid.users.columns.email')), 'filters' => array('columns' => array('has_role' => array('type' => 'boolean', 'data_name' => 'has_role', 'filter_by_having' => true), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'))), 'sorters' => array('multiple_sorting' => true, 'columns' => array('has_role' => array('data_name' => 'has_role')), 'default' => array('has_role' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC', 'lastName' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'options' => array('requireJSModules' => array(0 => 'oro/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'has_role', 'selectors' => array('included' => '#roleAppendUsers', 'excluded' => '#roleRemoveUsers')))), 'pim-user-grid' => array('extended_entity_name' => 'Pim\\Bundle\\UserBundle\\Entity\\User', 'options' => array('entityHint' => 'user'), 'source' => array('acl_resource' => 'pim_user_user_index', 'type' => 'orm', 'query' => array('select' => array(0 => 'u.id', 1 => 'u.username', 2 => 'u.email', 3 => 'u.firstName', 4 => 'u.lastName', 5 => 'u.createdAt', 6 => 'u.updatedAt', 7 => 'u.enabled'), 'from' => array(0 => array('table' => 'Pim\\Bundle\\UserBundle\\Entity\\User', 'alias' => 'u')))), 'columns' => array('username' => array('label' => 'oro.user.grid.users.columns.username'), 'email' => array('label' => 'oro.user.grid.users.columns.email'), 'firstName' => array('label' => 'oro.user.grid.users.columns.firstName'), 'lastName' => array('label' => 'oro.user.grid.users.columns.lastName'), 'createdAt' => array('label' => 'oro.user.grid.users.columns.createdAt', 'type' => 'product_value_datetime', 'frontend_type' => 'datetime'), 'updatedAt' => array('label' => 'oro.user.grid.users.columns.updatedAt', 'type' => 'product_value_datetime', 'frontend_type' => 'datetime'), 'enabled' => array('label' => 'oro.user.grid.users.columns.enabled', 'frontend_type' => 'select', 'choices' => array(0 => 'Inactive', 1 => 'Active'))), 'properties' => array('id' => NULL, 'update_link' => array('type' => 'url', 'route' => 'oro_user_update', 'params' => array(0 => 'id')), 'view_link' => array('type' => 'url', 'route' => 'oro_user_view', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'oro_user_user_delete', 'params' => array(0 => 'id'))), 'sorters' => array('columns' => array('username' => array('data_name' => 'u.username'), 'email' => array('data_name' => 'u.email'), 'firstName' => array('data_name' => 'u.firstName'), 'lastName' => array('data_name' => 'u.lastName'), 'createdAt' => array('data_name' => 'u.createdAt'), 'updatedAt' => array('data_name' => 'u.updatedAt'), 'enabled' => array('data_name' => 'u.enabled')), 'default' => array('username' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('username' => array('type' => 'string', 'data_name' => 'u.username'), 'email' => array('type' => 'string', 'data_name' => 'u.email'), 'firstName' => array('type' => 'string', 'data_name' => 'u.firstName'), 'lastName' => array('type' => 'string', 'data_name' => 'u.lastName'), 'createdAt' => array('type' => 'datetime', 'data_name' => 'u.createdAt'), 'updatedAt' => array('type' => 'datetime', 'data_name' => 'u.updatedAt'), 'enabled' => array('type' => 'choice', 'data_name' => 'u.enabled', 'options' => array('field_options' => array('choices' => array(0 => 'Inactive', 1 => 'Active')))))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'View', 'link' => 'view_link', 'icon' => 'user', 'acl_resource' => 'pim_user_user_index', 'rowAction' => true), 'update' => array('type' => 'navigate', 'label' => 'Update', 'link' => 'update_link', 'icon' => 'pencil', 'acl_resource' => 'pim_user_user_edit'), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'link' => 'delete_link', 'icon' => 'trash', 'acl_resource' => 'pim_user_user_remove'))), 'export-execution-grid' => array('extend' => 'job-execution-grid', 'options' => array('entityHint' => 'export report'), 'source' => array('acl_resource' => 'pim_importexport_export_execution_index'), 'properties' => array('show_link' => array('route' => 'pim_importexport_export_execution_show')), 'filters' => array('columns' => array('job_name' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getExportJobChoices')))))), 'import-profile-grid' => array('extend' => 'job-profile-grid', 'options' => array('entityHint' => 'import profile'), 'source' => array('acl_resource' => 'pim_importexport_import_profile_index'), 'properties' => array('edit_link' => array('route' => 'pim_importexport_import_profile_edit'), 'delete_link' => array('route' => 'pim_enrich_job_instance_rest_import_delete'), 'show_link' => array('route' => 'pim_importexport_import_profile_show')), 'filters' => array('columns' => array('job_name' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getImportJobChoices'))), 'connector' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getImportConnectorChoices')))))), 'job-profile-grid' => array('source' => array('type' => 'pim_datasource_default', 'entity' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'job_name' => array('label' => 'Job', 'type' => 'job_name'), 'connector' => array('label' => 'Connector'), 'status' => array('label' => 'Status', 'type' => 'translateable', 'data_name' => 'statusLabel')), 'properties' => array('code' => NULL, 'edit_link' => array('type' => 'url', 'params' => array(0 => 'code')), 'delete_link' => array('type' => 'url', 'params' => array(0 => 'code')), 'show_link' => array('type' => 'url', 'params' => array(0 => 'code'))), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'pim.grid.action.show.title', 'icon' => 'eye-open', 'link' => 'show_link', 'rowAction' => true), 'edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link'), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('code' => array('data_name' => 'j.code'), 'label' => array('data_name' => 'j.label'), 'connector' => array('data_name' => 'j.connector'), 'status' => array('data_name' => 'statusLabel')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'data_name' => 'j.code'), 'label' => array('type' => 'string', 'data_name' => 'j.label'), 'job_name' => array('type' => 'choice', 'data_name' => 'j.jobName', 'options' => array('field_options' => array('multiple' => true))), 'connector' => array('type' => 'choice', 'data_name' => 'j.connector', 'options' => array('field_options' => array('multiple' => true))), 'status' => array('type' => 'choice', 'data_name' => 'j.status', 'options' => array('field_options' => array('multiple' => true, 'choices' => array(0 => 'pim_import_export.status.0'))))))), 'import-execution-grid' => array('extend' => 'job-execution-grid', 'options' => array('entityHint' => 'import report'), 'source' => array('acl_resource' => 'pim_importexport_import_execution_index'), 'properties' => array('show_link' => array('route' => 'pim_importexport_import_execution_show')), 'filters' => array('columns' => array('job_name' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getImportJobChoices')))))), 'job-execution-grid' => array('source' => array('type' => 'pim_datasource_default', 'entity' => 'Akeneo\\Component\\Batch\\Model\\JobExecution', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code', 'data_name' => 'jobCode'), 'label' => array('label' => 'Label', 'data_name' => 'jobLabel'), 'job_name' => array('label' => 'Job', 'type' => 'translateable', 'data_name' => 'jobName'), 'date' => array('label' => 'Date', 'data_name' => 'date', 'type' => 'product_value_datetime', 'frontend_type' => 'datetime'), 'status' => array('label' => 'Status', 'type' => 'translateable', 'data_name' => 'statusLabel')), 'properties' => array('id' => NULL, 'show_link' => array('type' => 'url', 'params' => array(0 => 'id'))), 'actions' => array('show' => array('type' => 'navigate', 'label' => 'pim.grid.action.show.title', 'icon' => 'list-alt', 'link' => 'show_link', 'rowAction' => true)), 'sorters' => array('columns' => array('code' => array('data_name' => 'jobCode'), 'label' => array('data_name' => 'jobLabel'), 'job_name' => array('data_name' => 'jobName'), 'date' => array('data_name' => 'date'), 'status' => array('data_name' => 'statusLabel')), 'default' => array('date' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'data_name' => 'j.code'), 'label' => array('type' => 'string', 'data_name' => 'j.label'), 'job_name' => array('type' => 'choice', 'data_name' => 'j.jobName', 'options' => array('field_options' => array('multiple' => true))), 'date' => array('type' => 'datetime', 'data_name' => 'date', 'filter_by_having' => true), 'status' => array('type' => 'choice', 'data_name' => 'status', 'filter_by_having' => true, 'options' => array('field_options' => array('multiple' => true, 'choices' => 'Akeneo\\Component\\Batch\\Job\\BatchStatus::getAllLabels()')))))), 'export-profile-grid' => array('extend' => 'job-profile-grid', 'options' => array('entityHint' => 'export profile'), 'source' => array('acl_resource' => 'pim_importexport_export_profile_index'), 'properties' => array('edit_link' => array('route' => 'pim_importexport_export_profile_edit'), 'delete_link' => array('route' => 'pim_enrich_job_instance_rest_export_delete'), 'show_link' => array('route' => 'pim_importexport_export_profile_show')), 'filters' => array('columns' => array('job_name' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getExportJobChoices'))), 'connector' => array('options' => array('field_options' => array('choices' => '@pim_import_export.datagrid.provider.job->getExportConnectorChoices')))))), 'product-group-grid' => array('options' => array('entityHint' => 'product', 'requireJSModules' => array(0 => 'pim/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'is_checked', 'selectors' => array('included' => '#appendProducts', 'excluded' => '#removeProducts'))), 'source' => array('acl_resource' => 'pim_enrich_product_index', 'type' => 'pim_datasource_product', 'entity' => 'Pim\\Component\\Catalog\\Model\\Product', 'repository_method' => 'createGroupDatagridQueryBuilder', 'user_config_alias' => 'product-grid'), 'columns' => array('is_checked' => array('frontend_type' => 'boolean', 'data_name' => 'is_checked', 'editable' => true), 'in_group' => array('label' => 'In group', 'data_name' => 'in_group', 'selector' => 'product_in_group', 'type' => 'twig', 'primary' => true, 'template' => 'PimDataGridBundle:Property:boolean.html.twig', 'frontend_type' => 'html'), 'label' => array('label' => 'Label', 'data_name' => 'productLabel', 'selector' => 'product_label'), 'family' => array('label' => 'Family', 'data_name' => 'familyLabel', 'selector' => 'product_family'), 'enabled' => array('label' => 'Status', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:enabled.html.twig', 'frontend_type' => 'html'), 'completeness' => array('label' => 'Complete', 'type' => 'twig', 'data_name' => 'ratio', 'template' => 'PimDataGridBundle:Property:completeness.html.twig', 'frontend_type' => 'html', 'selector' => 'product_completeness'), 'created' => array('label' => 'Created At', 'type' => 'product_value_date', 'frontend_type' => 'date'), 'updated' => array('label' => 'Updated At', 'type' => 'product_value_date', 'frontend_type' => 'date')), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('in_group' => array('data_name' => 'in_group', 'sorter' => 'product_in_group'), 'family' => array('data_name' => 'familyLabel', 'sorter' => 'product_family'), 'enabled' => array('data_name' => 'enabled', 'sorter' => 'product_field'), 'completeness' => array('data_name' => 'ratio', 'sorter' => 'product_completeness'), 'created' => array('data_name' => 'created', 'sorter' => 'product_field'), 'updated' => array('data_name' => 'updated', 'sorter' => 'product_field')), 'default' => array('in_group' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('in_group' => array('type' => 'product_in_group', 'ftype' => 'boolean', 'label' => 'In group', 'data_name' => 'in_group'), 'family' => array('type' => 'product_family', 'label' => 'Family', 'data_name' => 'family', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'enabled' => array('type' => 'product_enabled', 'ftype' => 'choice', 'label' => 'Status', 'data_name' => 'enabled', 'options' => array('field_options' => array('choices' => array(1 => 'Enabled', 0 => 'Disabled')))), 'completeness' => array('type' => 'product_completeness', 'label' => 'Complete', 'data_name' => 'ratio'), 'created' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'created', 'label' => 'Created At'), 'updated' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'updated', 'label' => 'Updated At'), 'scope' => array('type' => 'product_scope', 'label' => 'Scope', 'data_name' => 'values.scope', 'options' => array('field_options' => array('choices' => '@pim_catalog.repository.channel->getLabelsIndexedByCode(@pim_user.context.user->getUiLocaleCode())')))))), 'group-grid' => array('options' => array('entityHint' => 'group'), 'source' => array('acl_resource' => 'pim_enrich_group_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'type' => array('label' => 'Type')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_group_edit', 'params' => array(0 => 'code')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_group_rest_remove', 'params' => array(0 => 'code'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('code' => array('data_name' => 'g.code'), 'label' => array('data_name' => 'groupLabel'), 'type' => array('data_name' => 'typeLabel')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'g.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label'), 'type' => array('type' => 'choice', 'label' => 'Type', 'data_name' => 'g.type', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_enrich.repository.group_type->findTranslatedLabels')))))), 'family-grid' => array('options' => array('entityHint' => 'family', 'locale_parameter' => 'localeCode'), 'source' => array('acl_resource' => 'pim_enrich_family_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Family', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'attributeAsLabel' => array('label' => 'Attribute as label')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_family_edit', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_family_remove', 'params' => array(0 => 'id'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('code' => array('data_name' => 'f.code'), 'label' => array('data_name' => 'familyLabel'), 'attributeAsLabel' => array('data_name' => 'f.attributeAsLabel')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'f.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label'), 'attributeAsLabel' => array('type' => 'choice', 'label' => 'Attribute as label', 'data_name' => 'a.code', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_enrich.repository.attribute->findTranslatedLabels'))))), 'mass_actions' => array('mass_edit' => array('type' => 'edit', 'label' => 'pim.grid.mass_action.mass_edit', 'route' => 'pim_enrich_mass_edit_family_action_choose', 'acl_resource' => 'pim_enrich_family_edit_attributes', 'icon' => 'pencil', 'className' => 'AknActionButton'))), 'variant-group-grid' => array('options' => array('entityHint' => 'group'), 'source' => array('acl_resource' => 'pim_enrich_variant_group_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'attributes' => array('label' => 'Axis', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:options.html.twig', 'frontend_type' => 'html')), 'properties' => array('code' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_variant_group_edit', 'params' => array(0 => 'code')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_variant_group_rest_remove', 'params' => array(0 => 'code'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('code' => array('data_name' => 'g.code'), 'label' => array('data_name' => 'groupLabel')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'g.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label'), 'attributes' => array('type' => 'choice', 'label' => 'Axis', 'data_name' => 'attribute', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_catalog.repository.attribute->findAvailableAxes(@pim_user.context.user->getCurrentLocaleCode())')))))), 'product-history-grid' => array('extend' => 'history-grid'), 'job-tracker-grid' => array('source' => array('type' => 'pim_datasource_default', 'entity' => 'Akeneo\\Component\\Batch\\Model\\JobExecution', 'repository_method' => 'createJobTrackerDatagridQueryBuilder'), 'columns' => array('type' => array('label' => 'Type', 'type' => 'job_type'), 'job' => array('label' => 'Job', 'data_name' => 'jobLabel'), 'user' => array('label' => 'User'), 'status' => array('label' => 'Status', 'type' => 'translateable'), 'started_at' => array('label' => 'job_tracker.filter.started_at', 'data_name' => 'startTime', 'type' => 'product_value_datetime', 'frontend_type' => 'datetime')), 'actions' => array('view' => array('type' => 'navigate', 'label' => 'pim.grid.action.show.title', 'icon' => 'list-alt', 'link' => 'show_link', 'rowAction' => true)), 'sorters' => array('columns' => array('type' => array('data_name' => 'type'), 'job' => array('data_name' => 'jobLabel'), 'user' => array('data_name' => 'user'), 'status' => array('data_name' => 'statusLabel'), 'started_at' => array('data_name' => 'startTime')), 'default' => array('started_at' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('type' => array('type' => 'string', 'label' => 'Type', 'data_name' => 'type'), 'job' => array('type' => 'string', 'label' => 'Job', 'data_name' => 'jobLabel'), 'user' => array('type' => 'string', 'label' => 'User', 'data_name' => 'user'), 'status' => array('type' => 'choice', 'data_name' => 'status', 'filter_by_having' => true, 'options' => array('field_options' => array('multiple' => true, 'choices' => 'Akeneo\\Component\\Batch\\Job\\BatchStatus::getAllLabels()'))), 'started_at' => array('type' => 'datetime', 'data_name' => 'startTime', 'filter_by_having' => true))), 'properties' => array('id' => NULL, 'show_link' => array('type' => 'url', 'params' => array(0 => 'id'), 'route' => 'pim_enrich_job_tracker_show'))), 'attribute-grid' => array('extend' => 'translatable-entity-grid', 'options' => array('entityHint' => 'attribute'), 'source' => array('acl_resource' => 'pim_enrich_attribute_index', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute'), 'columns' => array('attributeType' => array('label' => 'Type', 'type' => 'translateable'), 'scopable' => array('label' => 'Scopable', 'frontend_type' => 'boolean'), 'localizable' => array('label' => 'Localizable', 'frontend_type' => 'boolean'), 'group' => array('label' => 'Group', 'data_name' => 'groupLabel')), 'properties' => array('edit_link' => array('route' => 'pim_enrich_attribute_edit'), 'delete_link' => array('route' => 'pim_enrich_attribute_remove')), 'sorters' => array('columns' => array('code' => array('data_name' => 'a.code'), 'scopable' => array('data_name' => 'a.scopable'), 'localizable' => array('data_name' => 'a.localizable'), 'group' => array('data_name' => 'groupLabel'))), 'filters' => array('columns' => array('code' => array('data_name' => 'a.code'), 'attributeType' => array('type' => 'choice', 'data_name' => 'a.attributeType', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_catalog.registry.attribute_type->getSortedAliases'))), 'scopable' => array('type' => 'boolean', 'data_name' => 'a.scopable'), 'localizable' => array('type' => 'boolean', 'data_name' => 'a.localizable'), 'group' => array('type' => 'choice', 'data_name' => 'attributeGroup.code', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_enrich.repository.attribute_group->findTranslatedLabels')))))), 'association-product-grid' => array('options' => array('entityHint' => 'product', 'requireJSModules' => array(0 => 'pim/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'is_checked')), 'source' => array('type' => 'pim_datasource_associated_product', 'entity' => 'Pim\\Component\\Catalog\\Model\\Product', 'repository_method' => 'createAssociationDatagridQueryBuilder', 'user_config_alias' => 'product-grid', 'repository_parameters' => array(0 => 'product')), 'columns' => array('is_checked' => array('frontend_type' => 'boolean', 'data_name' => 'is_checked', 'editable' => true), 'is_associated' => array('label' => 'Is associated', 'data_name' => 'is_associated', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:boolean.html.twig', 'frontend_type' => 'html', 'primary' => true), 'label' => array('label' => 'Label', 'data_name' => 'productLabel', 'selector' => 'product_label'), 'family' => array('label' => 'Family', 'data_name' => 'familyLabel', 'selector' => 'product_family'), 'enabled' => array('label' => 'Status', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:enabled.html.twig', 'frontend_type' => 'html'), 'completeness' => array('label' => 'Complete', 'type' => 'twig', 'data_name' => 'ratio', 'template' => 'PimDataGridBundle:Property:completeness.html.twig', 'frontend_type' => 'html', 'selector' => 'product_completeness'), 'created' => array('label' => 'Created', 'type' => 'product_value_date', 'frontend_type' => 'date'), 'updated' => array('label' => 'Updated', 'type' => 'product_value_date', 'frontend_type' => 'date')), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('is_associated' => array('data_name' => 'is_associated', 'sorter' => 'product_is_associated'), 'family' => array('data_name' => 'familyLabel', 'sorter' => 'product_family'), 'enabled' => array('data_name' => 'enabled', 'sorter' => 'product_field'), 'completeness' => array('data_name' => 'ratio', 'sorter' => 'product_completeness'), 'created' => array('data_name' => 'created', 'sorter' => 'product_field'), 'updated' => array('data_name' => 'updated', 'sorter' => 'product_field')), 'default' => array('is_associated' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('is_associated' => array('type' => 'product_is_associated', 'ftype' => 'boolean', 'label' => 'Is associated', 'data_name' => 'is_associated'), 'family' => array('type' => 'product_family', 'label' => 'Family', 'data_name' => 'family', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'enabled' => array('type' => 'product_enabled', 'ftype' => 'choice', 'label' => 'Status', 'data_name' => 'enabled', 'options' => array('field_options' => array('choices' => array(1 => 'Enabled', 0 => 'Disabled')))), 'completeness' => array('type' => 'product_completeness', 'label' => 'Complete', 'data_name' => 'ratio'), 'created' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'created', 'label' => 'Created At'), 'updated' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'updated', 'label' => 'Updated At'), 'scope' => array('type' => 'product_scope', 'label' => 'Scope', 'data_name' => 'values.scope', 'options' => array('field_options' => array('choices' => '@pim_catalog.repository.channel->getLabelsIndexedByCode(@pim_user.context.user->getUiLocaleCode())'))), 'category' => array('type' => 'product_category', 'label' => 'Category', 'data_name' => 'category')))), 'association-type-grid' => array('options' => array('entityHint' => 'association type', 'locale_parameter' => 'localeCode'), 'source' => array('type' => 'pim_datasource_default', 'acl_resource' => 'pim_enrich_associationtype_index', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_associationtype_edit', 'params' => array(0 => 'code')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_associationtype_rest_remove', 'params' => array(0 => 'code'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'edit', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('label' => array('data_name' => 'label'), 'code' => array('data_name' => 'a.code')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'a.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label')))), 'translatable-entity-grid' => array('options' => array('locale_parameter' => 'localeCode'), 'source' => array('type' => 'pim_datasource_default', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'params' => array(0 => 'id'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('label' => array('data_name' => 'label')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label')))), 'product-variant-group-grid' => array('options' => array('entityHint' => 'product', 'requireJSModules' => array(0 => 'pim/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'is_checked', 'selectors' => array('included' => '#appendProducts', 'excluded' => '#removeProducts'))), 'source' => array('acl_resource' => 'pim_enrich_product_index', 'type' => 'pim_datasource_product', 'entity' => 'Pim\\Component\\Catalog\\Model\\Product', 'repository_method' => 'createVariantGroupDatagridQueryBuilder', 'repository_parameters' => array(0 => 'currentGroup')), 'columns' => array('is_checked' => array('frontend_type' => 'boolean', 'data_name' => 'is_checked', 'editable' => true), 'in_group' => array('label' => 'In group', 'data_name' => 'in_group', 'selector' => 'product_in_group', 'type' => 'twig', 'primary' => true, 'template' => 'PimDataGridBundle:Property:boolean.html.twig', 'frontend_type' => 'html'), 'label' => array('label' => 'Label', 'data_name' => 'productLabel', 'selector' => 'product_label'), 'family' => array('label' => 'Family', 'data_name' => 'familyLabel', 'selector' => 'product_family'), 'enabled' => array('label' => 'Status', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:enabled.html.twig', 'frontend_type' => 'html'), 'completeness' => array('label' => 'Complete', 'type' => 'twig', 'data_name' => 'ratio', 'template' => 'PimDataGridBundle:Property:completeness.html.twig', 'frontend_type' => 'html', 'selector' => 'product_completeness'), 'created' => array('label' => 'Created At', 'type' => 'product_value_date', 'frontend_type' => 'date'), 'updated' => array('label' => 'Updated At', 'type' => 'product_value_date', 'frontend_type' => 'date')), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('in_group' => array('data_name' => 'in_group', 'sorter' => 'product_in_group'), 'family' => array('data_name' => 'familyLabel', 'sorter' => 'product_family'), 'enabled' => array('data_name' => 'enabled', 'sorter' => 'product_field'), 'completeness' => array('data_name' => 'ratio', 'sorter' => 'product_completeness'), 'created' => array('data_name' => 'created', 'sorter' => 'product_field'), 'updated' => array('data_name' => 'updated', 'sorter' => 'product_field')), 'default' => array('in_group' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('in_group' => array('type' => 'product_in_group', 'ftype' => 'boolean', 'label' => 'In group', 'data_name' => 'in_group'), 'family' => array('type' => 'product_family', 'label' => 'Family', 'data_name' => 'family', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'enabled' => array('type' => 'product_enabled', 'ftype' => 'choice', 'label' => 'Status', 'data_name' => 'enabled', 'options' => array('field_options' => array('choices' => array(1 => 'Enabled', 0 => 'Disabled')))), 'completeness' => array('type' => 'product_completeness', 'label' => 'Complete', 'data_name' => 'ratio'), 'created' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'created', 'label' => 'Created At'), 'updated' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'updated', 'label' => 'Updated At'), 'scope' => array('type' => 'product_scope', 'label' => 'Scope', 'data_name' => 'values.scope', 'options' => array('field_options' => array('choices' => '@pim_catalog.repository.channel->getLabelsIndexedByCode(@pim_user.context.user->getUiLocaleCode())')))))), 'history-grid' => array('source' => array('type' => 'pim_datasource_smart', 'entity' => 'Akeneo\\Component\\Versioning\\Model\\Version', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('version' => array('label' => 'Version', 'type' => 'field', 'frontend_type' => 'integer'), 'author' => array('label' => 'Author', 'type' => 'field', 'frontend_type' => 'string'), 'loggedAt' => array('label' => 'Logged at', 'type' => 'product_value_datetime', 'frontend_type' => 'datetime'), 'old' => array('label' => 'Old values', 'type' => 'twig', 'template' => 'PimVersioningBundle:Datagrid:Property/old.html.twig', 'frontend_type' => 'html', 'data_name' => 'changeset'), 'new' => array('label' => 'New values', 'type' => 'twig', 'template' => 'PimVersioningBundle:Datagrid:Property/new.html.twig', 'frontend_type' => 'html', 'data_name' => 'changeset')), 'sorters' => array('columns' => array('version' => array('data_name' => 'version'), 'author' => array('data_name' => 'author'), 'loggedAt' => array('data_name' => 'loggedAt')), 'default' => array('loggedAt' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC'))), 'group-type-grid' => array('extend' => 'translatable-entity-grid', 'options' => array('entityHint' => 'group type'), 'source' => array('acl_resource' => 'pim_enrich_grouptype_index', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupType'), 'properties' => array('edit_link' => array('route' => 'pim_enrich_grouptype_edit'), 'delete_link' => array('route' => 'pim_enrich_grouptype_remove')), 'sorters' => array('columns' => array('code' => array('data_name' => 'g.code'))), 'filters' => array('columns' => array('code' => array('data_name' => 'g.code')))), 'channel-grid' => array('options' => array('entityHint' => 'channel', 'locale_parameter' => 'localeCode'), 'source' => array('acl_resource' => 'pim_enrich_channel_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Channel', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'category' => array('label' => 'Category tree', 'data_name' => 'categoryLabel')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_channel_edit', 'params' => array(0 => 'id')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_channel_remove', 'params' => array(0 => 'id'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => 'Edit', 'icon' => 'pencil', 'link' => 'edit_link', 'rowAction' => true), 'delete' => array('type' => 'delete', 'label' => 'Delete', 'icon' => 'trash', 'link' => 'delete_link')), 'sorters' => array('columns' => array('code' => array('data_name' => 'c.code'), 'label' => array('data_name' => 'channelLabel'), 'category' => array('data_name' => 'categoryLabel')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'c.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label'), 'category' => array('type' => 'choice', 'label' => 'Category tree', 'data_name' => 'category.code', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_enrich.repository.category->findTranslatedLabels')))))), 'product-grid' => array('options' => array('entityHint' => 'product', 'requireJSModules' => array(0 => 'pim/datagrid/configure-columns-action')), 'source' => array('acl_resource' => 'pim_enrich_product_index', 'type' => 'pim_datasource_product', 'entity' => 'Pim\\Component\\Catalog\\Model\\Product', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('label' => array('label' => 'Label', 'data_name' => 'productLabel', 'selector' => 'product_label'), 'family' => array('label' => 'Family', 'data_name' => 'familyLabel', 'selector' => 'product_family'), 'enabled' => array('label' => 'Status', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:enabled.html.twig', 'frontend_type' => 'html'), 'completeness' => array('label' => 'Complete', 'type' => 'twig', 'data_name' => 'ratio', 'template' => 'PimDataGridBundle:Property:completeness.html.twig', 'frontend_type' => 'html', 'selector' => 'product_completeness'), 'created' => array('label' => 'Created At', 'type' => 'product_value_date', 'frontend_type' => 'date'), 'updated' => array('label' => 'Updated At', 'type' => 'product_value_date', 'frontend_type' => 'date'), 'groups' => array('label' => 'Groups', 'type' => 'product_groups', 'selector' => 'product_groups')), 'properties' => array('id' => NULL, 'edit_link' => array('type' => 'url', 'route' => 'pim_enrich_product_edit', 'params' => array(0 => 'id', 1 => 'dataLocale')), 'delete_link' => array('type' => 'url', 'route' => 'pim_enrich_product_rest_remove', 'params' => array(0 => 'id')), 'toggle_status_link' => array('type' => 'url', 'route' => 'pim_enrich_product_toggle_status', 'params' => array(0 => 'id'))), 'actions' => array('edit' => array('type' => 'navigate', 'label' => NULL, 'icon' => NULL, 'link' => 'edit_link', 'rowAction' => true), 'edit_attributes' => array('type' => 'tab-redirect', 'label' => 'Edit attributes of the product', 'tab' => 'pim-product-edit-form-attributes', 'icon' => 'pencil', 'link' => 'edit_link'), 'edit_categories' => array('type' => 'tab-redirect', 'label' => 'Classify the product', 'tab' => 'pim-product-edit-form-categories', 'icon' => 'folder-close', 'link' => 'edit_link'), 'delete' => array('type' => 'delete', 'label' => 'Delete the product', 'icon' => 'trash', 'link' => 'delete_link', 'acl_resource' => 'pim_enrich_product_remove'), 'toggle_status' => array('type' => 'ajax', 'label' => 'Toggle status', 'icon' => 'retweet', 'link' => 'toggle_status_link')), 'mass_actions_groups' => array('bulk_actions' => array('label' => 'pim_datagrid.mass_action_group.bulk_actions.label'), 'quick_export' => array('label' => 'pim_datagrid.mass_action_group.quick_export.label')), 'mass_actions' => array('mass_edit' => array('type' => 'edit', 'acl_resource' => 'pim_enrich_mass_edit', 'label' => 'pim.grid.mass_action.mass_edit', 'handler' => 'product_mass_edit', 'route' => 'pim_enrich_mass_edit_product_action_choose', 'launcherOptions' => array('group' => 'bulk_actions')), 'sequential_edit' => array('type' => 'edit', 'acl_resource' => 'pim_enrich_product_edit_attributes', 'label' => 'pim.grid.mass_action.sequential_edit', 'handler' => 'sequential_edit', 'route' => 'pim_enrich_mass_edit_action_sequential_edit', 'launcherOptions' => array('group' => 'bulk_actions')), 'category_edit' => array('type' => 'edit', 'acl_resource' => 'pim_enrich_mass_edit', 'label' => 'pim.grid.mass_action.category_edit', 'handler' => 'product_mass_edit', 'route' => 'pim_enrich_mass_edit_product_action_choose', 'route_parameters' => array('operationGroup' => 'category-edit'), 'launcherOptions' => array('group' => 'bulk_actions')), 'delete' => array('type' => 'delete', 'label' => 'pim.grid.mass_action.delete', 'entity_name' => 'product', 'acl_resource' => 'pim_enrich_product_remove', 'handler' => 'product_mass_delete', 'messages' => array('confirm_title' => 'pim_datagrid.mass_action.delete.confirm_title', 'confirm_content' => 'pim_datagrid.mass_action.delete.confirm_content', 'confirm_ok' => 'pim_datagrid.mass_action.delete.confirm_ok', 'success' => 'pim_datagrid.mass_action.delete.success', 'error' => 'pim_datagrid.mass_action.delete.error', 'empty_selection' => 'pim_datagrid.mass_action.delete.empty_selection'), 'launcherOptions' => array('group' => 'bulk_actions')), 'quick_export_grid_context_xlsx' => array('type' => 'export', 'label' => 'pim.grid.mass_action.quick_export.xlsx_grid_context', 'handler' => 'product_quick_export', 'route' => 'pim_datagrid_export_product_index', 'route_parameters' => array('_format' => 'xlsx', '_contentType' => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', '_jobCode' => 'xlsx_product_grid_context_quick_export', '_displayedColumnsOnly' => 1), 'context' => array('withHeader' => true), 'messages' => array('empty_selection' => 'pim_datagrid.mass_action.delete.empty_selection'), 'launcherOptions' => array('group' => 'quick_export')), 'quick_export_xlsx' => array('type' => 'export', 'label' => 'pim.grid.mass_action.quick_export.xlsx_all', 'handler' => 'product_quick_export', 'route' => 'pim_datagrid_export_product_index', 'route_parameters' => array('_format' => 'xlsx', '_contentType' => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', '_jobCode' => 'xlsx_product_quick_export', '_displayedColumnsOnly' => 0), 'context' => array('withHeader' => true), 'messages' => array('empty_selection' => 'pim_datagrid.mass_action.delete.empty_selection'), 'launcherOptions' => array('group' => 'quick_export')), 'quick_export_grid_context_csv' => array('type' => 'export', 'label' => 'pim.grid.mass_action.quick_export.csv_grid_context', 'handler' => 'product_quick_export', 'route' => 'pim_datagrid_export_product_index', 'route_parameters' => array('_format' => 'csv', '_contentType' => 'text/csv', '_jobCode' => 'csv_product_grid_context_quick_export', '_displayedColumnsOnly' => 1), 'context' => array('withHeader' => true), 'messages' => array('empty_selection' => 'pim_datagrid.mass_action.delete.empty_selection'), 'launcherOptions' => array('group' => 'quick_export')), 'quick_export_csv' => array('type' => 'export', 'label' => 'pim.grid.mass_action.quick_export.csv_all', 'handler' => 'product_quick_export', 'route' => 'pim_datagrid_export_product_index', 'route_parameters' => array('_format' => 'csv', '_contentType' => 'text/csv', '_jobCode' => 'csv_product_quick_export', '_displayedColumnsOnly' => 0), 'context' => array('withHeader' => true), 'messages' => array('empty_selection' => 'pim_datagrid.mass_action.delete.empty_selection'), 'launcherOptions' => array('group' => 'quick_export'))), 'sorters' => array('columns' => array('family' => array('data_name' => 'familyLabel', 'sorter' => 'product_family'), 'enabled' => array('data_name' => 'enabled', 'sorter' => 'product_field'), 'completeness' => array('data_name' => 'ratio', 'sorter' => 'product_completeness'), 'created' => array('data_name' => 'created', 'sorter' => 'product_field'), 'updated' => array('data_name' => 'updated', 'sorter' => 'product_field')), 'default' => array('updated' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('family' => array('type' => 'product_family', 'label' => 'Family', 'data_name' => 'family', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'groups' => array('type' => 'product_groups', 'label' => 'Groups', 'data_name' => 'groups', 'options' => array('field_options' => array('multiple' => true))), 'enabled' => array('type' => 'product_enabled', 'ftype' => 'choice', 'label' => 'Status', 'data_name' => 'enabled', 'options' => array('field_options' => array('choices' => array(1 => 'Enabled', 0 => 'Disabled')))), 'scope' => array('type' => 'product_scope', 'label' => 'Scope', 'data_name' => 'values.scope', 'options' => array('field_options' => array('choices' => '@pim_catalog.repository.channel->getLabelsIndexedByCode(@pim_user.context.user->getUiLocaleCode())'))), 'completeness' => array('type' => 'product_completeness', 'label' => 'Complete', 'data_name' => 'ratio'), 'created' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'created', 'label' => 'Created At'), 'updated' => array('type' => 'product_date', 'ftype' => 'date', 'data_name' => 'updated', 'label' => 'Updated At')))), 'association-group-grid' => array('options' => array('entityHint' => 'group', 'requireJSModules' => array(0 => 'pim/datagrid/column-form-listener'), 'columnListener' => array('dataField' => 'id', 'columnName' => 'is_checked')), 'source' => array('type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'repository_method' => 'createAssociationDatagridQueryBuilder'), 'columns' => array('is_checked' => array('frontend_type' => 'boolean', 'data_name' => 'is_checked', 'editable' => true), 'is_associated' => array('label' => 'Is associated', 'data_name' => 'is_associated', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:boolean.html.twig', 'frontend_type' => 'html', 'primary' => true), 'code' => array('label' => 'Code'), 'label' => array('label' => 'Label'), 'type' => array('label' => 'Type')), 'properties' => array('id' => NULL), 'sorters' => array('columns' => array('is_associated' => array('data_name' => 'is_associated'), 'code' => array('data_name' => 'g.code'), 'label' => array('data_name' => 'groupLabel'), 'type' => array('data_name' => 'typeLabel')), 'default' => array('is_associated' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_DESC')), 'filters' => array('columns' => array('is_associated' => array('type' => 'boolean', 'label' => 'Is associated', 'data_name' => 'is_associated', 'filter_by_having' => true), 'code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'g.code'), 'label' => array('type' => 'string', 'label' => 'Label', 'data_name' => 'translation.label'), 'type' => array('type' => 'choice', 'label' => 'Type', 'data_name' => 'g.type', 'options' => array('field_options' => array('multiple' => true, 'choices' => '@pim_enrich.repository.group_type->findTranslatedLabels')))))), 'currency-grid' => array('options' => array('entityHint' => 'currency'), 'source' => array('acl_resource' => 'pim_enrich_currency_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Currency', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:currency_label.html.twig', 'frontend_type' => 'html'), 'activated' => array('label' => 'Activated', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:activated.html.twig', 'frontend_type' => 'html')), 'properties' => array('id' => NULL, 'toggle_link' => array('type' => 'url', 'route' => 'pim_enrich_currency_toggle', 'params' => array(0 => 'id'))), 'actions' => array('toggle' => array('type' => 'navigate', 'label' => 'Change status', 'icon' => 'random', 'link' => 'toggle_link', 'acl_resource' => 'pim_enrich_currency_toggle')), 'sorters' => array('columns' => array('code' => array('data_name' => 'c.code'), 'activated' => array('data_name' => 'c.activated')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'c.code'), 'activated' => array('type' => 'boolean', 'label' => 'Activated', 'data_name' => 'c.activated')))), 'locale-grid' => array('options' => array('entityHint' => 'locale'), 'source' => array('acl_resource' => 'pim_enrich_locale_index', 'type' => 'pim_datasource_default', 'entity' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Locale', 'repository_method' => 'createDatagridQueryBuilder'), 'columns' => array('code' => array('label' => 'Code'), 'activated' => array('label' => 'Activated', 'type' => 'twig', 'template' => 'PimDataGridBundle:Property:activated.html.twig', 'frontend_type' => 'html')), 'properties' => NULL, 'actions' => NULL, 'sorters' => array('columns' => array('code' => array('data_name' => 'l.code'), 'activated' => array('data_name' => 'l.activated')), 'default' => array('code' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension::DIRECTION_ASC')), 'filters' => array('columns' => array('code' => array('type' => 'string', 'label' => 'Code', 'data_name' => 'l.code'), 'activated' => array('type' => 'boolean', 'label' => 'Activated', 'data_name' => 'l.activated'))))), $this->get('oro_datagrid.provider.resolver'));
    }
    protected function getOroDatagrid_Configuration_Provider_ChainService()
    {
        $this->services['oro_datagrid.configuration.provider.chain'] = $instance = new \Oro\Bundle\DataGridBundle\Provider\ChainConfigurationProvider();
        $instance->addProvider($this->get('oro_datagrid.configuration.provider'));
        return $instance;
    }
    protected function getOroDatagrid_Datagrid_BuilderService()
    {
        $this->services['oro_datagrid.datagrid.builder'] = $instance = new \Oro\Bundle\DataGridBundle\Datagrid\Builder('Oro\\Bundle\\DataGridBundle\\Datagrid\\Datagrid', 'Oro\\Bundle\\DataGridBundle\\Extension\\Acceptor', $this->get('event_dispatcher'), $this->get('oro_security.security_facade'));
        $instance->registerDatasource('orm', $this->get('oro_datagrid.datasource.orm'));
        $instance->registerDatasource('pim_datasource_default', $this->get('pim_datagrid.datasource.default'));
        $instance->registerDatasource('pim_datasource_smart', $this->get('pim_datagrid.datasource.smart'));
        $instance->registerDatasource('pim_datasource_product', $this->get('pim_datagrid.datasource.product'));
        $instance->registerDatasource('pim_datasource_associated_product', $this->get('pim_datagrid.datasource.associated_product'));
        $instance->registerExtension($this->get('oro_datagrid.extension.formatter'));
        $instance->registerExtension($this->get('oro_datagrid.extension.orm_pager'));
        $instance->registerExtension($this->get('oro_datagrid.extension.orm_sorter'));
        $instance->registerExtension($this->get('oro_datagrid.extension.action'));
        $instance->registerExtension($this->get('oro_datagrid.extension.mass_action'));
        $instance->registerExtension($this->get('oro_datagrid.extension.toolbar'));
        $instance->registerExtension($this->get('oro_datagrid.extension.views'));
        $instance->registerExtension($this->get('oro_filter.extension.orm_filter'));
        $instance->registerExtension($this->get('pim_datagrid.extension.filter'));
        $instance->registerExtension($this->get('pim_datagrid.extension.sorter'));
        $instance->registerExtension($this->get('pim_datagrid.extension.pager'));
        $instance->registerExtension($this->get('pim_datagrid.extension.selector.orm_selector'));
        return $instance;
    }
    protected function getOroDatagrid_Datagrid_ManagerService()
    {
        return $this->services['oro_datagrid.datagrid.manager'] = new \Oro\Bundle\DataGridBundle\Datagrid\Manager($this);
    }
    protected function getOroDatagrid_Datagrid_RequestParamsService()
    {
        $this->services['oro_datagrid.datagrid.request_params'] = $instance = new \Oro\Bundle\DataGridBundle\Datagrid\RequestParameters();
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getOroDatagrid_Datasource_OrmService()
    {
        return $this->services['oro_datagrid.datasource.orm'] = new \Oro\Bundle\DataGridBundle\Datasource\Orm\OrmDatasource($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getOroDatagrid_Extension_ActionService()
    {
        $this->services['oro_datagrid.extension.action'] = $instance = new \Oro\Bundle\DataGridBundle\Extension\Action\ActionExtension($this, $this->get('oro_security.security_facade'), $this->get('translator'));
        $instance->registerAction('navigate', 'oro_datagrid.extension.action.type.navigate');
        $instance->registerAction('ajax', 'oro_datagrid.extension.action.type.ajax');
        $instance->registerAction('delete', 'oro_datagrid.extension.action.type.delete');
        $instance->registerAction('tab-redirect', 'pim_datagrid.extension.action.type.tab_redirect');
        return $instance;
    }
    protected function getOroDatagrid_Extension_Action_Type_AjaxService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\AjaxAction();
    }
    protected function getOroDatagrid_Extension_Action_Type_DeleteService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\DeleteAction();
    }
    protected function getOroDatagrid_Extension_Action_Type_NavigateService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\Action\Actions\NavigateAction();
    }
    protected function getOroDatagrid_Extension_FormatterService()
    {
        $this->services['oro_datagrid.extension.formatter'] = $instance = new \Oro\Bundle\DataGridBundle\Extension\Formatter\FormatterExtension($this->get('translator'));
        $instance->registerProperty('field', $this->get('oro_datagrid.extension.formatter.field_property'));
        $instance->registerProperty('url', $this->get('oro_datagrid.extension.formatter.property.url_property'));
        $instance->registerProperty('twig', $this->get('oro_datagrid.extension.formatter.property.twig_property'));
        $instance->registerProperty('translateable', $this->get('oro_datagrid.extension.formatter.property.translateable_property'));
        $instance->registerProperty('callback', $this->get('oro_datagrid.extension.formatter.property.callback_property'));
        $instance->registerProperty('product_value_field', $this->get('pim_datagrid.extension.formatter.property.product_value.field_property'));
        $instance->registerProperty('product_value_options', $this->get('pim_datagrid.extension.formatter.property.product_value.attribute_options_property'));
        $instance->registerProperty('product_value_option', $this->get('pim_datagrid.extension.formatter.property.product_value.attribute_option_property'));
        $instance->registerProperty('product_value_price', $this->get('pim_datagrid.extension.formatter.property.product_value.price_property'));
        $instance->registerProperty('product_value_number', $this->get('pim_datagrid.extension.formatter.property.product_value.number_property'));
        $instance->registerProperty('product_value_image', $this->get('pim_datagrid.extension.formatter.property.product_value.image_property'));
        $instance->registerProperty('product_value_file', $this->get('pim_datagrid.extension.formatter.property.product_value.file_property'));
        $instance->registerProperty('product_value_metric', $this->get('pim_datagrid.extension.formatter.property.product_value.metric_property'));
        $instance->registerProperty('product_value_boolean', $this->get('pim_datagrid.extension.formatter.property.product_value.boolean_property'));
        $instance->registerProperty('product_value_date', $this->get('pim_datagrid.extension.formatter.property.product_value.date_property'));
        $instance->registerProperty('product_value_datetime', $this->get('pim_datagrid.extension.formatter.property.product_value.datetime_property'));
        $instance->registerProperty('product_value_twig', $this->get('pim_datagrid.extension.formatter.property.product_value.twig_property'));
        $instance->registerProperty('product_groups', $this->get('pim_datagrid.extension.formatter.property.product.groups_property'));
        $instance->registerProperty('job_name', $this->get('pim_datagrid.extension.formatter.property.job.name_property'));
        $instance->registerProperty('job_type', $this->get('pim_datagrid.extension.formatter.property.job.type_property'));
        $instance->registerProperty('product_value_reference_data', $this->get('pim_reference_data.extension.formatter.property.product_value.reference_data_property'));
        return $instance;
    }
    protected function getOroDatagrid_Extension_Formatter_FieldPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.field_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\FieldProperty($this->get('translator'));
    }
    protected function getOroDatagrid_Extension_Formatter_Property_CallbackPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.callback_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\CallbackProperty();
    }
    protected function getOroDatagrid_Extension_Formatter_Property_TranslateablePropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.translateable_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TranslateableProperty($this->get('translator'));
    }
    protected function getOroDatagrid_Extension_Formatter_Property_TwigPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.twig_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\TwigTemplateProperty($this->get('twig'));
    }
    protected function getOroDatagrid_Extension_Formatter_Property_UrlPropertyService()
    {
        return $this->services['oro_datagrid.extension.formatter.property.url_property'] = new \Oro\Bundle\DataGridBundle\Extension\Formatter\Property\UrlProperty($this->get('router'));
    }
    protected function getOroDatagrid_Extension_MassActionService()
    {
        $this->services['oro_datagrid.extension.mass_action'] = $instance = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionExtension($this, $this->get('oro_security.security_facade'), $this->get('translator'));
        $instance->registerAction('ajax', 'oro_datagrid.extension.mass_action.type.ajax');
        $instance->registerAction('delete', 'oro_datagrid.extension.mass_action.type.delete');
        $instance->registerAction('redirect', 'oro_datagrid.extension.mass_action.type.redirect');
        $instance->registerAction('widget', 'oro_datagrid.extension.mass_action.type.widget');
        $instance->registerAction('window', 'oro_datagrid.extension.mass_action.type.window');
        $instance->registerAction('export', 'pim_datagrid.extension.mass_action.type.export');
        $instance->registerAction('edit', 'pim_datagrid.extension.mass_action.type.edit');
        $instance->registerAction('delete', 'pim_datagrid.extension.mass_action.type.delete');
        return $instance;
    }
    protected function getOroDatagrid_Extension_MassAction_Handler_DeleteService()
    {
        return $this->services['oro_datagrid.extension.mass_action.handler.delete'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\DeleteMassActionHandler($this->get('doctrine.orm.default_entity_manager'), $this->get('translator'));
    }
    protected function getOroDatagrid_Extension_MassAction_Type_AjaxService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\AjaxMassAction();
    }
    protected function getOroDatagrid_Extension_MassAction_Type_DeleteService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\DeleteMassAction();
    }
    protected function getOroDatagrid_Extension_MassAction_Type_RedirectService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Redirect\RedirectMassAction();
    }
    protected function getOroDatagrid_Extension_MassAction_Type_WidgetService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WidgetMassAction();
    }
    protected function getOroDatagrid_Extension_MassAction_Type_WindowService()
    {
        return new \Oro\Bundle\DataGridBundle\Extension\MassAction\Actions\Widget\WindowMassAction();
    }
    protected function getOroDatagrid_Extension_OrmPagerService()
    {
        return $this->services['oro_datagrid.extension.orm_pager'] = new \Oro\Bundle\DataGridBundle\Extension\Pager\OrmPagerExtension($this->get('oro_datagrid.extension.pager.orm.pager'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getOroDatagrid_Extension_OrmSorterService()
    {
        return $this->services['oro_datagrid.extension.orm_sorter'] = new \Oro\Bundle\DataGridBundle\Extension\Sorter\OrmSorterExtension($this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getOroDatagrid_Extension_Pager_Orm_PagerService()
    {
        return $this->services['oro_datagrid.extension.pager.orm.pager'] = new \Oro\Bundle\DataGridBundle\Extension\Pager\Orm\Pager();
    }
    protected function getOroDatagrid_Extension_ToolbarService()
    {
        return $this->services['oro_datagrid.extension.toolbar'] = new \Oro\Bundle\DataGridBundle\Extension\Toolbar\ToolbarExtension();
    }
    protected function getOroDatagrid_Extension_ViewsService()
    {
        return $this->services['oro_datagrid.extension.views'] = new \Oro\Bundle\DataGridBundle\Extension\GridViews\GridViewsExtension($this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getOroDatagrid_MassAction_DispatcherService()
    {
        return $this->services['oro_datagrid.mass_action.dispatcher'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionDispatcher($this, $this->get('oro_datagrid.datagrid.manager'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getOroDatagrid_MassAction_ParametersParserService()
    {
        return $this->services['oro_datagrid.mass_action.parameters_parser'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionParametersParser();
    }
    protected function getOroDatagrid_Provider_ResolverService()
    {
        return $this->services['oro_datagrid.provider.resolver'] = new \Oro\Bundle\DataGridBundle\Provider\SystemAwareResolver($this);
    }
    protected function getOroDatagrid_Twig_MetadataService()
    {
        return $this->services['oro_datagrid.twig.metadata'] = new \Oro\Bundle\DataGridBundle\Twig\MetadataExtension($this);
    }
    protected function getOroFilter_BooleanFilterService()
    {
        return $this->services['oro_filter.boolean_filter'] = new \Oro\Bundle\FilterBundle\Filter\BooleanFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_ChoiceFilterService()
    {
        return $this->services['oro_filter.choice_filter'] = new \Oro\Bundle\FilterBundle\Filter\ChoiceFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_DateRangeFilterService()
    {
        return $this->services['oro_filter.date_range_filter'] = new \Oro\Bundle\FilterBundle\Filter\DateRangeFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_DatetimeRangeFilterService()
    {
        return $this->services['oro_filter.datetime_range_filter'] = new \Oro\Bundle\FilterBundle\Filter\DateTimeRangeFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_EntityFilterService()
    {
        return $this->services['oro_filter.entity_filter'] = new \Oro\Bundle\FilterBundle\Filter\EntityFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_Extension_OrmFilterService()
    {
        $this->services['oro_filter.extension.orm_filter'] = $instance = new \Oro\Bundle\FilterBundle\Grid\Extension\OrmFilterExtension($this->get('oro_datagrid.datagrid.request_params'), $this->get('translator'));
        $instance->addFilter('string', $this->get('oro_filter.string_filter'));
        $instance->addFilter('selectrow', $this->get('oro_filter.select_row_filter'));
        $instance->addFilter('number', $this->get('oro_filter.number_filter'));
        $instance->addFilter('percent', $this->get('oro_filter.percent_filter'));
        $instance->addFilter('choice', $this->get('oro_filter.choice_filter'));
        $instance->addFilter('entity', $this->get('oro_filter.entity_filter'));
        $instance->addFilter('boolean', $this->get('oro_filter.boolean_filter'));
        $instance->addFilter('date', $this->get('oro_filter.date_range_filter'));
        $instance->addFilter('datetime', $this->get('oro_filter.datetime_range_filter'));
        $instance->addFilter('ajax_choice', $this->get('pim_filter.ajax_choice_filter'));
        $instance->addFilter('product_scope', $this->get('pim_filter.product_scope_filter'));
        $instance->addFilter('product_category', $this->get('pim_filter.product_category_filter'));
        $instance->addFilter('product_groups', $this->get('pim_filter.product_groups_filter'));
        $instance->addFilter('product_family', $this->get('pim_filter.product_family_filter'));
        $instance->addFilter('product_completeness', $this->get('pim_filter.product_completeness_filter'));
        $instance->addFilter('product_date', $this->get('pim_filter.product_date_filter'));
        $instance->addFilter('product_enabled', $this->get('pim_filter.product_enabled_filter'));
        $instance->addFilter('product_in_group', $this->get('pim_filter.product_in_group_filter'));
        $instance->addFilter('product_is_associated', $this->get('pim_filter.product_is_associated_filter'));
        $instance->addFilter('product_value_string', $this->get('pim_filter.product_value_string'));
        $instance->addFilter('product_value_choice', $this->get('pim_filter.product_value_choice'));
        $instance->addFilter('product_value_number', $this->get('pim_filter.product_value_number'));
        $instance->addFilter('product_value_date', $this->get('pim_filter.product_value_date'));
        $instance->addFilter('product_value_datetime', $this->get('pim_filter.product_value_datetime'));
        $instance->addFilter('product_value_boolean', $this->get('pim_filter.product_value_boolean'));
        $instance->addFilter('product_value_metric', $this->get('pim_filter.product_value_metric'));
        $instance->addFilter('product_value_price', $this->get('pim_filter.product_value_price'));
        $instance->addFilter('product_value_reference_data', $this->get('pim_reference_data.filter.reference_data'));
        return $instance;
    }
    protected function getOroFilter_FilterUtilityService()
    {
        return $this->services['oro_filter.filter_utility'] = new \Oro\Bundle\FilterBundle\Filter\FilterUtility();
    }
    protected function getOroFilter_Form_Type_FilterService()
    {
        return $this->services['oro_filter.form.type.filter'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\FilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_BooleanService()
    {
        return $this->services['oro_filter.form.type.filter.boolean'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\BooleanFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_ChoiceService()
    {
        return $this->services['oro_filter.form.type.filter.choice'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\ChoiceFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_DateRangeService()
    {
        return $this->services['oro_filter.form.type.filter.date_range'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\DateRangeFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_DatetimeRangeService()
    {
        return $this->services['oro_filter.form.type.filter.datetime_range'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\DateTimeRangeFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_EntityService()
    {
        return $this->services['oro_filter.form.type.filter.entity'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\EntityFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_NumberService()
    {
        return $this->services['oro_filter.form.type.filter.number'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\NumberFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_SelectrowService()
    {
        return $this->services['oro_filter.form.type.filter.selectrow'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\SelectRowFilterType($this->get('translator'));
    }
    protected function getOroFilter_Form_Type_Filter_TextService()
    {
        return $this->services['oro_filter.form.type.filter.text'] = new \Oro\Bundle\FilterBundle\Form\Type\Filter\TextFilterType($this->get('translator'));
    }
    protected function getOroFilter_NumberFilterService()
    {
        return $this->services['oro_filter.number_filter'] = new \Oro\Bundle\FilterBundle\Filter\NumberFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_PercentFilterService()
    {
        return $this->services['oro_filter.percent_filter'] = new \Oro\Bundle\FilterBundle\Filter\PercentFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_SelectRowFilterService()
    {
        return $this->services['oro_filter.select_row_filter'] = new \Oro\Bundle\FilterBundle\Filter\SelectRowFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_StringFilterService()
    {
        return $this->services['oro_filter.string_filter'] = new \Oro\Bundle\FilterBundle\Filter\StringFilter($this->get('form.factory'), $this->get('oro_filter.filter_utility'));
    }
    protected function getOroFilter_Twig_Extension_RenderHeaderService()
    {
        return $this->services['oro_filter.twig.extension.render_header'] = new \Oro\Bundle\FilterBundle\Twig\RenderHeaderExtension('OroFilterBundle:Filter:header.html.twig');
    }
    protected function getOroFilter_Twig_Extension_RenderLayoutService()
    {
        return $this->services['oro_filter.twig.extension.render_layout'] = new \Oro\Bundle\FilterBundle\Twig\RenderLayoutExtension('PimFilterBundle:Filter:pim-layout.js.twig');
    }
    protected function getOroMenu_BuilderChainService()
    {
        $this->services['oro_menu.builder_chain'] = $instance = new \Oro\Bundle\NavigationBundle\Provider\BuilderChainProvider($this->get('oro_menu.factory'), $this->get('event_dispatcher'));
        $instance->addBuilder($this->get('oro_menu.configuration_builder'));
        $instance->addBuilder($this->get('oro_navigation.pinbar_menu.builder'), 'pinbar');
        $instance->addBuilder($this->get('oro_navigation.favorites_menu.builder'), 'favorite');
        $instance->addBuilder($this->get('oro_navigation.history_menu.builder'), 'history');
        $instance->addBuilder($this->get('oro_navigation.mostviewed_menu.builder'), 'mostviewed');
        $instance->addBuilder($this->get('oro_user.user_menu'), 'usermenu');
        return $instance;
    }
    protected function getOroMenu_CacheService()
    {
        $this->services['oro_menu.cache'] = $instance = new \Doctrine\Common\Cache\PhpFileCache(__DIR__);
        $instance->setNamespace('oro_menu.cache');
        return $instance;
    }
    protected function getOroMenu_ConfigurationBuilderService()
    {
        $this->services['oro_menu.configuration_builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\ConfigurationBuilder();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getOroMenu_FactoryService()
    {
        $this->services['oro_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();
        $instance->addExtension($this->get('oro_menu_acl_extension'));
        return $instance;
    }
    protected function getOroMenu_Twig_ExtensionService()
    {
        return $this->services['oro_menu.twig.extension'] = new \Oro\Bundle\NavigationBundle\Twig\MenuExtension($this->get('knp_menu.helper'), $this->get('oro_menu.builder_chain'), $this->get('oro_navigation.breadcrumb_manager'), $this);
    }
    protected function getOroMenuAclExtensionService()
    {
        $this->services['oro_menu_acl_extension'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\AclAwareMenuFactoryExtension($this->get('router'), $this->get('oro_security.security_facade'));
        $instance->setCache($this->get('oro_menu.cache'));
        return $instance;
    }
    protected function getOroNavigation_BreadcrumbManagerService()
    {
        return $this->services['oro_navigation.breadcrumb_manager'] = new \Oro\Bundle\NavigationBundle\Menu\BreadcrumbManager($this->get('oro_menu.builder_chain'), $this->get('knp_menu.matcher'), $this->get('router'));
    }
    protected function getOroNavigation_FavoritesMenu_BuilderService()
    {
        return $this->services['oro_navigation.favorites_menu.builder'] = new \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder($this->get('security.token_storage'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
    }
    protected function getOroNavigation_Form_Handler_PagestateService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_navigation.form.handler.pagestate', 'request');
        }
        return $this->services['oro_navigation.form.handler.pagestate'] = $this->scopedServices['request']['oro_navigation.form.handler.pagestate'] = new \Oro\Bundle\NavigationBundle\Form\Handler\PageStateHandler($this->get('oro_navigation.form.pagestate'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'), $this->get('security.token_storage'));
    }
    protected function getOroNavigation_Form_PagestateService()
    {
        return $this->services['oro_navigation.form.pagestate'] = $this->get('form.factory')->createNamed('pagestate', 'pagestate', NULL);
    }
    protected function getOroNavigation_Form_Type_PagestateService()
    {
        return $this->services['oro_navigation.form.type.pagestate'] = new \Oro\Bundle\NavigationBundle\Form\Type\PageStateType();
    }
    protected function getOroNavigation_HistoryMenu_BuilderService()
    {
        $this->services['oro_navigation.history_menu.builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\NavigationHistoryBuilder($this->get('security.token_storage'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
        $instance->setMatcher($this->get('knp_menu.matcher'));
        $instance->setOptions($this->get('oro_config.user'));
        return $instance;
    }
    protected function getOroNavigation_Item_Builder_FavoriteService()
    {
        return $this->services['oro_navigation.item.builder.favorite'] = new \Oro\Bundle\NavigationBundle\Entity\Builder\NavigationItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'favorite');
    }
    protected function getOroNavigation_Item_Builder_HistoryService()
    {
        return $this->services['oro_navigation.item.builder.history'] = new \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'history');
    }
    protected function getOroNavigation_Item_Builder_MostviewedService()
    {
        return $this->services['oro_navigation.item.builder.mostviewed'] = new \Oro\Bundle\NavigationBundle\Entity\Builder\HistoryItemBuilder($this->get('doctrine.orm.default_entity_manager'), 'mostviewed');
    }
    protected function getOroNavigation_Item_Builder_PinbarService()
    {
        return $this->services['oro_navigation.item.builder.pinbar'] = new \Oro\Bundle\NavigationBundle\Entity\Builder\PinbarTabBuilder($this->get('doctrine.orm.default_entity_manager'), 'pinbar');
    }
    protected function getOroNavigation_Item_FactoryService()
    {
        $this->services['oro_navigation.item.factory'] = $instance = new \Oro\Bundle\NavigationBundle\Entity\Builder\ItemFactory();
        $instance->addBuilder($this->get('oro_navigation.item.builder.pinbar'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.favorite'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.history'));
        $instance->addBuilder($this->get('oro_navigation.item.builder.mostviewed'));
        return $instance;
    }
    protected function getOroNavigation_Item_Pinbar_PostPersistListenerService()
    {
        return $this->services['oro_navigation.item.pinbar.post_persist_listener'] = new \Oro\Bundle\NavigationBundle\Entity\Listener\PinbarPostPersist();
    }
    protected function getOroNavigation_MostviewedMenu_BuilderService()
    {
        $this->services['oro_navigation.mostviewed_menu.builder'] = $instance = new \Oro\Bundle\NavigationBundle\Menu\NavigationMostviewedBuilder($this->get('security.token_storage'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
        $instance->setOptions($this->get('oro_config.user'));
        return $instance;
    }
    protected function getOroNavigation_PinbarMenu_BuilderService()
    {
        return $this->services['oro_navigation.pinbar_menu.builder'] = new \Oro\Bundle\NavigationBundle\Menu\NavigationItemBuilder($this->get('security.token_storage'), $this->get('doctrine.orm.default_entity_manager'), $this->get('oro_navigation.item.factory'));
    }
    protected function getOroNavigation_TitleAnnotationsReaderService()
    {
        return $this->services['oro_navigation.title_annotations_reader'] = new \Oro\Bundle\NavigationBundle\Title\TitleReader\AnnotationsReader($this->get('kernel'), $this->get('annotation_reader'));
    }
    protected function getOroNavigation_TitleConfigReaderService()
    {
        return $this->services['oro_navigation.title_config_reader'] = new \Oro\Bundle\NavigationBundle\Title\TitleReader\ConfigReader(array('oro_config_configuration_system' => 'pim_title.system_configuration.index', 'oro_pinbar_help' => 'How To Use Pinbar', 'oro_user_view' => '%username%', 'oro_user_update' => '%username% - Edit', 'oro_user_create' => 'Create User', 'oro_user_index' => 'pim_title.user.index', 'oro_user_profile_view' => '%username%', 'oro_user_profile_update' => '%username% - Edit', 'oro_user_role_update' => '%role% - Edit', 'oro_user_role_create' => 'Create Role', 'oro_user_role_index' => 'pim_title.user_role.index', 'oro_user_security_login' => 'Login', 'oro_user_reset_reset' => 'Password Reset', 'oro_user_reset_request' => 'Forgot Password', 'oro_user_reset_check_email' => 'Password Reset - Check Email', 'oro_user_group_create' => 'Create Group', 'oro_user_group_update' => '%group% - Edit', 'oro_user_group_index' => 'pim_title.user_group.index', 'pim_analytics_system_info_index' => 'pim_analytics.system_info.title', 'pim_importexport_export_profile_index' => 'pim_title.export_profile.index', 'pim_importexport_export_profile_edit' => 'pim_title.export_profile.edit', 'pim_importexport_export_profile_show' => 'pim_title.export_profile.show', 'pim_importexport_export_execution_index' => 'pim_title.export_execution.index', 'pim_importexport_export_execution_show' => 'pim_title.export_execution.show', 'pim_importexport_import_profile_index' => 'pim_title.import_profile.index', 'pim_importexport_import_profile_edit' => 'pim_title.import_profile.edit', 'pim_importexport_import_profile_show' => 'pim_title.import_profile.show', 'pim_importexport_import_execution_index' => 'pim_title.import_execution.index', 'pim_importexport_import_execution_show' => 'pim_title.import_execution.show', 'oro_default' => 'pim_title.dashboard', 'pim_enrich_attributegroup_index' => 'pim_title.attribute_group.index', 'pim_enrich_attributegroup_create' => 'pim_title.attribute_group.create', 'pim_enrich_attributegroup_edit' => 'pim_title.attribute_group.edit', 'pim_enrich_categorytree_index' => 'pim_title.category.index', 'pim_enrich_categorytree_create' => 'pim_title.category.create', 'pim_enrich_categorytree_edit' => 'pim_title.category.edit', 'pim_enrich_attribute_index' => 'pim_title.attribute.index', 'pim_enrich_attribute_create' => 'pim_title.attribute.create', 'pim_enrich_attribute_edit' => 'pim_title.attribute.edit', 'pim_enrich_product_index' => 'pim_title.product.index', 'pim_enrich_product_edit' => 'pim_title.product.edit', 'pim_enrich_family_index' => 'pim_title.family.index', 'pim_enrich_family_edit' => 'pim_title.family.edit', 'pim_enrich_channel_index' => 'pim_title.channel.index', 'pim_enrich_channel_create' => 'pim_title.channel.create', 'pim_enrich_channel_edit' => 'pim_title.channel.edit', 'pim_enrich_currency_index' => 'pim_title.currency.index', 'pim_enrich_locale_index' => 'pim_title.locale.index', 'pim_enrich_group_index' => 'pim_title.group.index', 'pim_enrich_group_edit' => 'pim_title.group.edit', 'pim_enrich_variant_group_index' => 'pim_title.variant_group.index', 'pim_enrich_variant_group_edit' => 'pim_title.variant_group.edit', 'pim_enrich_associationtype_index' => 'pim_title.association_type.index', 'pim_enrich_associationtype_edit' => 'pim_title.association_type.edit', 'pim_enrich_grouptype_index' => 'pim_title.group_type.index', 'pim_enrich_grouptype_edit' => 'pim_title.group_type.edit', 'pim_enrich_mass_edit_family_action_choose' => 'pim_title.mass_edit_family_action.choose', 'pim_enrich_mass_edit_product_action_choose' => 'pim_title.mass_edit_product_action.choose', 'pim_enrich_mass_edit_family_action_configure' => 'pim_title.mass_edit_family_action.configure', 'pim_enrich_mass_edit_product_action_configure' => 'pim_title.mass_edit_product_action.configure', 'pim_enrich_mass_edit_family_action_perform' => 'pim_title.mass_edit_family_action.configure', 'pim_enrich_mass_edit_product_action_perform' => 'pim_title.mass_edit_product_action.configure', 'pim_enrich_job_tracker_index' => 'pim_title.job_tracker.index', 'pim_enrich_job_tracker_show' => 'pim_title.job_tracker.show'));
    }
    protected function getOroNavigation_TitleServiceService()
    {
        $this->services['oro_navigation.title_service'] = $instance = new \Pim\Bundle\NavigationBundle\Provider\TitleService($this->get('oro_navigation.title_annotations_reader'), $this->get('oro_navigation.title_config_reader'), $this->get('translator.default'), $this->get('doctrine.orm.default_entity_manager'), $this->get('jms_serializer'), $this->get('oro_config.user'), $this->get('oro_navigation.breadcrumb_manager'));
        $instance->setTitles(array('oro_config_configuration_system' => 'pim_title.system_configuration.index', 'oro_pinbar_help' => 'How To Use Pinbar', 'oro_user_view' => '%username%', 'oro_user_update' => '%username% - Edit', 'oro_user_create' => 'Create User', 'oro_user_index' => 'pim_title.user.index', 'oro_user_profile_view' => '%username%', 'oro_user_profile_update' => '%username% - Edit', 'oro_user_role_update' => '%role% - Edit', 'oro_user_role_create' => 'Create Role', 'oro_user_role_index' => 'pim_title.user_role.index', 'oro_user_security_login' => 'Login', 'oro_user_reset_reset' => 'Password Reset', 'oro_user_reset_request' => 'Forgot Password', 'oro_user_reset_check_email' => 'Password Reset - Check Email', 'oro_user_group_create' => 'Create Group', 'oro_user_group_update' => '%group% - Edit', 'oro_user_group_index' => 'pim_title.user_group.index', 'pim_analytics_system_info_index' => 'pim_analytics.system_info.title', 'pim_importexport_export_profile_index' => 'pim_title.export_profile.index', 'pim_importexport_export_profile_edit' => 'pim_title.export_profile.edit', 'pim_importexport_export_profile_show' => 'pim_title.export_profile.show', 'pim_importexport_export_execution_index' => 'pim_title.export_execution.index', 'pim_importexport_export_execution_show' => 'pim_title.export_execution.show', 'pim_importexport_import_profile_index' => 'pim_title.import_profile.index', 'pim_importexport_import_profile_edit' => 'pim_title.import_profile.edit', 'pim_importexport_import_profile_show' => 'pim_title.import_profile.show', 'pim_importexport_import_execution_index' => 'pim_title.import_execution.index', 'pim_importexport_import_execution_show' => 'pim_title.import_execution.show', 'oro_default' => 'pim_title.dashboard', 'pim_enrich_attributegroup_index' => 'pim_title.attribute_group.index', 'pim_enrich_attributegroup_create' => 'pim_title.attribute_group.create', 'pim_enrich_attributegroup_edit' => 'pim_title.attribute_group.edit', 'pim_enrich_categorytree_index' => 'pim_title.category.index', 'pim_enrich_categorytree_create' => 'pim_title.category.create', 'pim_enrich_categorytree_edit' => 'pim_title.category.edit', 'pim_enrich_attribute_index' => 'pim_title.attribute.index', 'pim_enrich_attribute_create' => 'pim_title.attribute.create', 'pim_enrich_attribute_edit' => 'pim_title.attribute.edit', 'pim_enrich_product_index' => 'pim_title.product.index', 'pim_enrich_product_edit' => 'pim_title.product.edit', 'pim_enrich_family_index' => 'pim_title.family.index', 'pim_enrich_family_edit' => 'pim_title.family.edit', 'pim_enrich_channel_index' => 'pim_title.channel.index', 'pim_enrich_channel_create' => 'pim_title.channel.create', 'pim_enrich_channel_edit' => 'pim_title.channel.edit', 'pim_enrich_currency_index' => 'pim_title.currency.index', 'pim_enrich_locale_index' => 'pim_title.locale.index', 'pim_enrich_group_index' => 'pim_title.group.index', 'pim_enrich_group_edit' => 'pim_title.group.edit', 'pim_enrich_variant_group_index' => 'pim_title.variant_group.index', 'pim_enrich_variant_group_edit' => 'pim_title.variant_group.edit', 'pim_enrich_associationtype_index' => 'pim_title.association_type.index', 'pim_enrich_associationtype_edit' => 'pim_title.association_type.edit', 'pim_enrich_grouptype_index' => 'pim_title.group_type.index', 'pim_enrich_grouptype_edit' => 'pim_title.group_type.edit', 'pim_enrich_mass_edit_family_action_choose' => 'pim_title.mass_edit_family_action.choose', 'pim_enrich_mass_edit_product_action_choose' => 'pim_title.mass_edit_product_action.choose', 'pim_enrich_mass_edit_family_action_configure' => 'pim_title.mass_edit_family_action.configure', 'pim_enrich_mass_edit_product_action_configure' => 'pim_title.mass_edit_product_action.configure', 'pim_enrich_mass_edit_family_action_perform' => 'pim_title.mass_edit_family_action.configure', 'pim_enrich_mass_edit_product_action_perform' => 'pim_title.mass_edit_product_action.configure', 'pim_enrich_job_tracker_index' => 'pim_title.job_tracker.index', 'pim_enrich_job_tracker_show' => 'pim_title.job_tracker.show'));
        return $instance;
    }
    protected function getOroNavigation_TitleService_Twig_ExtensionService()
    {
        return $this->services['oro_navigation.title_service.twig.extension'] = new \Oro\Bundle\NavigationBundle\Twig\TitleExtension($this->get('oro_navigation.title_service'));
    }
    protected function getOroNavigation_Translation_ExtractorService()
    {
        return $this->services['oro_navigation.translation.extractor'] = new \Oro\Bundle\NavigationBundle\Title\TranslationExtractor($this->get('oro_navigation.title_service'), $this->get('router'));
    }
    protected function getOroNavigation_Twig_HashNavExtensionService()
    {
        return $this->services['oro_navigation.twig.hash_nav_extension'] = new \Oro\Bundle\NavigationBundle\Twig\HashNavExtension();
    }
    protected function getOroRequirejs_CacheService()
    {
        $this->services['oro_requirejs.cache'] = $instance = new \Doctrine\Common\Cache\PhpFileCache(__DIR__);
        $instance->setNamespace('oro_requirejs.cache');
        return $instance;
    }
    protected function getOroRequirejs_Twig_RequirejsExtensionService()
    {
        return $this->services['oro_requirejs.twig.requirejs_extension'] = new \Oro\Bundle\RequireJSBundle\Twig\OroRequireJSExtension($this);
    }
    protected function getOroRequirejsConfigProviderService()
    {
        $this->services['oro_requirejs_config_provider'] = $instance = new \Oro\Bundle\RequireJSBundle\Provider\Config($this);
        $instance->setCache($this->get('oro_requirejs.cache'));
        return $instance;
    }
    protected function getOroSecurity_Acl_AnnotationProviderService()
    {
        $this->services['oro_security.acl.annotation_provider'] = $instance = new \Oro\Bundle\SecurityBundle\Metadata\AclAnnotationProvider(new \Doctrine\Common\Cache\FilesystemCache((__DIR__.'/oro_acl_annotations')));
        $instance->addLoader(new \Oro\Bundle\SecurityBundle\Annotation\Loader\AclAnnotationLoader(array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle'), array(0 => 'Controller'), $this->get('annotation_reader')));
        $instance->addLoader(new \Oro\Bundle\SecurityBundle\Annotation\Loader\AclYamlConfigLoader(array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle')));
        return $instance;
    }
    protected function getOroSecurity_Acl_EntityClassResolverService()
    {
        return $this->services['oro_security.acl.entity_class_resolver'] = new \Oro\Bundle\SecurityBundle\Acl\Extension\EntityClassResolver($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
    }
    protected function getOroSecurity_Acl_ManagerService()
    {
        return $this->services['oro_security.acl.manager'] = new \Oro\Bundle\SecurityBundle\Acl\Persistence\AclManager($this->get('oro_security.acl.object_identity_factory'), $this->get('oro_security.acl.extension_selector'), $this->get('security.acl.provider', ContainerInterface::NULL_ON_INVALID_REFERENCE), new \Oro\Bundle\SecurityBundle\Acl\Persistence\AceManipulationHelper(), 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclPrivilegeRepository');
    }
    protected function getOroSecurity_Acl_ObjectIdentityFactoryService()
    {
        return $this->services['oro_security.acl.object_identity_factory'] = new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityFactory($this->get('oro_security.acl.extension_selector'));
    }
    protected function getOroSecurity_Acl_SidManagerService()
    {
        return $this->services['oro_security.acl.sid_manager'] = new \Oro\Bundle\SecurityBundle\Acl\Persistence\AclSidManager($this->get('security.acl.provider', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getOroSecurity_Acl_VoterLinkService()
    {
        return $this->services['oro_security.acl.voter_link'] = new \Oro\Bundle\SecurityBundle\DependencyInjection\Utils\ServiceLink($this, 'security.acl.voter.basic_permissions', true);
    }
    protected function getOroSecurity_Form_Type_ObjectLabelTypeService()
    {
        return $this->services['oro_security.form.type.object_label_type'] = new \Oro\Bundle\SecurityBundle\Form\Type\ObjectLabelType();
    }
    protected function getOroSecurity_Link_SidManagerService()
    {
        return $this->services['oro_security.link.sid_manager'] = new \Oro\Bundle\SecurityBundle\DependencyInjection\Utils\ServiceLink($this, 'oro_security.acl.sid_manager', false);
    }
    protected function getOroSecurity_Listener_ControllerService()
    {
        return $this->services['oro_security.listener.controller'] = new \Oro\Bundle\SecurityBundle\EventListener\ControllerListener($this->get('oro_security.security_facade'), $this->get('monolog.logger.security'));
    }
    protected function getOroSecurity_SecurityFacadeService()
    {
        return $this->services['oro_security.security_facade'] = new \Oro\Bundle\SecurityBundle\SecurityFacade($this->get('security.authorization_checker'), $this->get('oro_security.acl.annotation_provider'), $this->get('oro_security.acl.object_identity_factory'), $this->get('monolog.logger.security'));
    }
    protected function getOroSecurity_Twig_SecurityExtensionService()
    {
        return $this->services['oro_security.twig.security_extension'] = new \Oro\Bundle\SecurityBundle\Twig\OroSecurityExtension($this->get('oro_security.security_facade'));
    }
    protected function getOroTranslation_ControllerService()
    {
        return $this->services['oro_translation.controller'] = new \Oro\Bundle\TranslationBundle\Controller\Controller($this->get('translator'), $this->get('templating'), 'OroTranslationBundle:Translation:translation.js.twig', array('domains' => array(0 => 'measures', 1 => 'jsmessages', 2 => 'validators'), 'debug' => false));
    }
    protected function getOroUser_ChangePassword_SubscriberService()
    {
        return $this->services['oro_user.change_password.subscriber'] = new \Oro\Bundle\UserBundle\Form\EventListener\ChangePasswordSubscriber($this->get('form.factory'), $this->get('security.token_storage'));
    }
    protected function getOroUser_EntityWithImage_SubscriberService()
    {
        return $this->services['oro_user.entity_with_image.subscriber'] = new \Oro\Bundle\UserBundle\Entity\EventListener\UploadedImageSubscriber($this->targetDirs[2]);
    }
    protected function getOroUser_Form_GroupService()
    {
        return $this->services['oro_user.form.group'] = $this->get('form.factory')->createNamed('oro_user_group_form', 'oro_user_group');
    }
    protected function getOroUser_Form_Group_ApiService()
    {
        return $this->services['oro_user.form.group.api'] = $this->get('form.factory')->createNamed('group', 'group', NULL);
    }
    protected function getOroUser_Form_Handler_AclRoleService()
    {
        $instance = new \Pim\Bundle\UserBundle\Form\Handler\AclRoleHandler($this->get('form.factory'), array('action' => array('label' => 'rights.action', 'view_type' => 'groups', 'types' => array(0 => 'action'), 'field_type' => 'pim_acl_access_level_selector', 'default_value' => 5, 'show_default' => true)));
        $instance->setAclManager($this->get('oro_security.acl.manager'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequest($this->get('request'));
        return $instance;
    }
    protected function getOroUser_Form_Handler_GroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.group', 'request');
        }
        return $this->services['oro_user.form.handler.group'] = $this->scopedServices['request']['oro_user.form.handler.group'] = new \Oro\Bundle\UserBundle\Form\Handler\GroupHandler($this->get('oro_user.form.group'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getOroUser_Form_Handler_Group_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.group.api', 'request');
        }
        return $this->services['oro_user.form.handler.group.api'] = $this->scopedServices['request']['oro_user.form.handler.group.api'] = new \Oro\Bundle\UserBundle\Form\Handler\GroupHandler($this->get('oro_user.form.group.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getOroUser_Form_Handler_ResetService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.reset', 'request');
        }
        return $this->services['oro_user.form.handler.reset'] = $this->scopedServices['request']['oro_user.form.handler.reset'] = new \Pim\Bundle\UserBundle\Form\Handler\ResetHandler($this->get('oro_user.form.reset'), $this->get('request'), $this->get('oro_user.manager'));
    }
    protected function getOroUser_Form_Handler_Role_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.role.api', 'request');
        }
        return $this->services['oro_user.form.handler.role.api'] = $this->scopedServices['request']['oro_user.form.handler.role.api'] = new \Oro\Bundle\UserBundle\Form\Handler\RoleHandler($this->get('oro_user.form.role.api'), $this->get('request'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getOroUser_Form_Handler_UserService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.user', 'request');
        }
        return $this->services['oro_user.form.handler.user'] = $this->scopedServices['request']['oro_user.form.handler.user'] = new \Pim\Bundle\UserBundle\Form\Handler\UserHandler($this->get('oro_user.form.user'), $this->get('request'), $this->get('oro_user.manager'));
    }
    protected function getOroUser_Form_Handler_User_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.handler.user.api', 'request');
        }
        return $this->services['oro_user.form.handler.user.api'] = $this->scopedServices['request']['oro_user.form.handler.user.api'] = new \Pim\Bundle\UserBundle\Form\Handler\UserHandler($this->get('oro_user.form.user.api'), $this->get('request'), $this->get('oro_user.manager'));
    }
    protected function getOroUser_Form_ResetService()
    {
        return $this->services['oro_user.form.reset'] = $this->get('form.factory')->createNamed('oro_user_reset_form', 'oro_user_reset', NULL, array('validation_groups' => array(0 => 'ResetPassword', 1 => 'Default')));
    }
    protected function getOroUser_Form_RoleService()
    {
        return $this->services['oro_user.form.role'] = $this->get('form.factory')->createNamed('oro_user_role_form', 'oro_user_role');
    }
    protected function getOroUser_Form_Role_ApiService()
    {
        return $this->services['oro_user.form.role.api'] = $this->get('form.factory')->createNamed('role', 'role', NULL);
    }
    protected function getOroUser_Form_Type_ChangePasswordService()
    {
        return $this->services['oro_user.form.type.change_password'] = new \Oro\Bundle\UserBundle\Form\Type\ChangePasswordType($this->get('oro_user.change_password.subscriber'));
    }
    protected function getOroUser_Form_Type_GroupService()
    {
        return $this->services['oro_user.form.type.group'] = new \Oro\Bundle\UserBundle\Form\Type\GroupType();
    }
    protected function getOroUser_Form_Type_Group_ApiService()
    {
        return $this->services['oro_user.form.type.group.api'] = new \Oro\Bundle\UserBundle\Form\Type\GroupApiType();
    }
    protected function getOroUser_Form_Type_ResetService()
    {
        return $this->services['oro_user.form.type.reset'] = new \Oro\Bundle\UserBundle\Form\Type\ResetType('Pim\\Bundle\\UserBundle\\Entity\\User');
    }
    protected function getOroUser_Form_Type_Role_ApiService()
    {
        return $this->services['oro_user.form.type.role.api'] = new \Oro\Bundle\UserBundle\Form\Type\RoleApiType();
    }
    protected function getOroUser_Form_Type_User_ApiService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('oro_user.form.type.user.api', 'request');
        }
        return $this->services['oro_user.form.type.user.api'] = $this->scopedServices['request']['oro_user.form.type.user.api'] = new \Oro\Bundle\UserBundle\Form\Type\UserApiType($this->get('security.token_storage'), $this->get('request'));
    }
    protected function getOroUser_Form_UserService()
    {
        return $this->services['oro_user.form.user'] = $this->get('form.factory')->createNamed('pim_user_user_form', 'pim_user_user', NULL);
    }
    protected function getOroUser_Form_User_ApiService()
    {
        return $this->services['oro_user.form.user.api'] = $this->get('form.factory')->createNamed('user', 'user', NULL);
    }
    protected function getOroUser_ManagerService()
    {
        return $this->services['oro_user.manager'] = new \Oro\Bundle\UserBundle\Entity\UserManager('Pim\\Bundle\\UserBundle\\Entity\\User', $this->get('doctrine.orm.default_entity_manager'), $this->get('security.encoder_factory'));
    }
    protected function getOroUser_Role_ListenerService()
    {
        return $this->services['oro_user.role.listener'] = new \Oro\Bundle\UserBundle\EventListener\RoleListener($this->get('oro_security.link.sid_manager'));
    }
    protected function getOroUser_Security_LoginService()
    {
        return $this->services['oro_user.security.login'] = new \Oro\Bundle\UserBundle\EventListener\LoginSubscriber($this->get('oro_user.manager'));
    }
    protected function getOroUser_UserMenuService()
    {
        return $this->services['oro_user.user_menu'] = new \Oro\Bundle\UserBundle\Menu\UserMenuBuilder();
    }
    protected function getPimAnalytics_Controller_DataService()
    {
        return $this->services['pim_analytics.controller.data'] = new \Pim\Bundle\AnalyticsBundle\Controller\DataController($this->get('pim_analytics.data_collector.chained'));
    }
    protected function getPimAnalytics_Controller_SystemInfoService()
    {
        return $this->services['pim_analytics.controller.system_info'] = new \Pim\Bundle\AnalyticsBundle\Controller\SystemInfoController($this->get('templating'), $this->get('pim_analytics.data_collector.chained'));
    }
    protected function getPimAnalytics_DataCollector_BundlesService()
    {
        return $this->services['pim_analytics.data_collector.bundles'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\BundlesDataCollector(array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle'));
    }
    protected function getPimAnalytics_DataCollector_ChainedService()
    {
        $a = $this->get('pim_analytics.data_collector.version');
        $b = $this->get('pim_analytics.data_collector.database');
        $c = $this->get('pim_analytics.data_collector.operating_system');
        $d = $this->get('pim_analytics.data_collector.storage');
        $this->services['pim_analytics.data_collector.chained'] = $instance = new \Akeneo\Component\Analytics\ChainedDataCollector();
        $instance->addCollector($this->get('pim_analytics.data_collector.request'), 'update_checker');
        $instance->addCollector($this->get('pim_analytics.data_collector.token_storage'), 'update_checker');
        $instance->addCollector($a, 'update_checker');
        $instance->addCollector($a, 'system_info_report');
        $instance->addCollector($b, 'update_checker');
        $instance->addCollector($b, 'system_info_report');
        $instance->addCollector($c, 'update_checker');
        $instance->addCollector($c, 'system_info_report');
        $instance->addCollector($this->get('pim_analytics.data_collector.bundles'), 'system_info_report');
        $instance->addCollector($d, 'system_info_report');
        $instance->addCollector($d, 'system_info_report');
        return $instance;
    }
    protected function getPimAnalytics_DataCollector_DatabaseService()
    {
        return $this->services['pim_analytics.data_collector.database'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\DBDataCollector($this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.family'), $this->get('pim_user.repository.user'));
    }
    protected function getPimAnalytics_DataCollector_OperatingSystemService()
    {
        return $this->services['pim_analytics.data_collector.operating_system'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\OSDataCollector();
    }
    protected function getPimAnalytics_DataCollector_RequestService()
    {
        return $this->services['pim_analytics.data_collector.request'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\RequestDataCollector($this->get('request_stack'));
    }
    protected function getPimAnalytics_DataCollector_StorageService()
    {
        return $this->services['pim_analytics.data_collector.storage'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\StorageDataCollector('doctrine/orm');
    }
    protected function getPimAnalytics_DataCollector_TokenStorageService()
    {
        return $this->services['pim_analytics.data_collector.token_storage'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\TokenStorageDataCollector($this->get('security.token_storage'));
    }
    protected function getPimAnalytics_DataCollector_VersionService()
    {
        return $this->services['pim_analytics.data_collector.version'] = new \Pim\Bundle\AnalyticsBundle\DataCollector\VersionDataCollector($this->get('request_stack'), $this->get('pim_catalog.version_provider'), 'dev', NULL);
    }
    protected function getPimAnalytics_Twig_UpdateExtensionService()
    {
        return $this->services['pim_analytics.twig.update_extension'] = new \Pim\Bundle\AnalyticsBundle\Twig\UpdateExtension($this->get('oro_config.global'), 'https://updates.akeneo.com');
    }
    protected function getPimCatalog_Applier_ProductTemplateService()
    {
        return $this->services['pim_catalog.applier.product_template'] = new \Pim\Component\Catalog\Manager\ProductTemplateApplier($this->get('pim_catalog.updater.product_template'), $this->get('pim_catalog.validator.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_catalog.saver.product'));
    }
    protected function getPimCatalog_Attributetype_BooleanService()
    {
        return $this->services['pim_catalog.attributetype.boolean'] = new \Pim\Bundle\CatalogBundle\AttributeType\BooleanType('boolean', 'switch', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_DateService()
    {
        return $this->services['pim_catalog.attributetype.date'] = new \Pim\Bundle\CatalogBundle\AttributeType\DateType('date', 'pim_date', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_FileService()
    {
        return $this->services['pim_catalog.attributetype.file'] = new \Pim\Bundle\CatalogBundle\AttributeType\FileType('media', 'pim_enrich_media', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_IdentifierService()
    {
        return $this->services['pim_catalog.attributetype.identifier'] = new \Pim\Bundle\CatalogBundle\AttributeType\IdentifierType('varchar', 'text', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_ImageService()
    {
        return $this->services['pim_catalog.attributetype.image'] = new \Pim\Bundle\CatalogBundle\AttributeType\ImageType('media', 'pim_enrich_image', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_MetricService()
    {
        return $this->services['pim_catalog.attributetype.metric'] = new \Pim\Bundle\CatalogBundle\AttributeType\MetricType('metric', 'pim_enrich_metric', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_MultiselectService()
    {
        return $this->services['pim_catalog.attributetype.multiselect'] = new \Pim\Bundle\CatalogBundle\AttributeType\OptionMultiSelectType('options', 'pim_ajax_entity', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_NumberService()
    {
        return $this->services['pim_catalog.attributetype.number'] = new \Pim\Bundle\CatalogBundle\AttributeType\NumberType('decimal', 'pim_number', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_PricecollectionService()
    {
        return $this->services['pim_catalog.attributetype.pricecollection'] = new \Pim\Bundle\CatalogBundle\AttributeType\PriceCollectionType('prices', 'pim_enrich_price_collection', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'), $this->get('pim_catalog.repository.currency'));
    }
    protected function getPimCatalog_Attributetype_SimpleselectService()
    {
        return $this->services['pim_catalog.attributetype.simpleselect'] = new \Pim\Bundle\CatalogBundle\AttributeType\OptionSimpleSelectType('option', 'pim_ajax_entity', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_TextService()
    {
        return $this->services['pim_catalog.attributetype.text'] = new \Pim\Bundle\CatalogBundle\AttributeType\TextType('varchar', 'text', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Attributetype_TextareaService()
    {
        return $this->services['pim_catalog.attributetype.textarea'] = new \Pim\Bundle\CatalogBundle\AttributeType\TextAreaType('text', 'textarea', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'));
    }
    protected function getPimCatalog_Builder_ChoicesService()
    {
        return $this->services['pim_catalog.builder.choices'] = new \Pim\Bundle\CatalogBundle\Builder\ChoicesBuilder();
    }
    protected function getPimCatalog_Builder_ProductService()
    {
        return $this->services['pim_catalog.builder.product'] = new \Pim\Component\Catalog\Builder\ProductBuilder($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.family'), $this->get('pim_catalog.repository.currency'), $this->get('pim_catalog.repository.association_type'), $this->get('event_dispatcher'), $this->get('pim_catalog.resolver.attribute_values'), $this->get('pim_catalog.factory.product_value'), array('product' => 'Pim\\Component\\Catalog\\Model\\Product', 'product_price' => 'Pim\\Component\\Catalog\\Model\\ProductPrice', 'association' => 'Pim\\Component\\Catalog\\Model\\Association'));
    }
    protected function getPimCatalog_Builder_ProductTemplateService()
    {
        $a = $this->get('pim_serializer');
        return $this->services['pim_catalog.builder.product_template'] = new \Pim\Component\Catalog\Builder\ProductTemplateBuilder($a, $a, $this->get('pim_catalog.builder.product'), 'Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate', 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_CommandLauncherService()
    {
        return $this->services['pim_catalog.command_launcher'] = new \Akeneo\Component\Console\CommandLauncher($this->targetDirs[2], 'dev');
    }
    protected function getPimCatalog_Comparator_Filter_ProductService()
    {
        return $this->services['pim_catalog.comparator.filter.product'] = new \Pim\Component\Catalog\Comparator\Filter\ProductFilter($this->get('pim_catalog.normalizer.standard.product.properties'), $this->get('pim_catalog.comparator.registry'), $this->get('pim_catalog.repository.attribute'), array(0 => 'family', 1 => 'enabled', 2 => 'groups', 3 => 'variant_group', 4 => 'categories'));
    }
    protected function getPimCatalog_Comparator_Filter_ProductAssociationService()
    {
        return $this->services['pim_catalog.comparator.filter.product_association'] = new \Pim\Component\Catalog\Comparator\Filter\ProductAssociationFilter($this->get('pim_catalog.normalizer.standard.product.associations'), $this->get('pim_catalog.comparator.registry'));
    }
    protected function getPimCatalog_Completeness_Checker_ChainedService()
    {
        $this->services['pim_catalog.completeness.checker.chained'] = $instance = new \Pim\Component\Catalog\Completeness\Checker\ChainedProductValueCompleteChecker();
        $instance->addProductValueChecker($this->get('pim_catalog.completeness.checker.empty'));
        $instance->addProductValueChecker($this->get('pim_catalog.completeness.checker.media'));
        $instance->addProductValueChecker($this->get('pim_catalog.completeness.checker.metric'));
        $instance->addProductValueChecker($this->get('pim_catalog.completeness.checker.price'));
        return $instance;
    }
    protected function getPimCatalog_Completeness_Checker_EmptyService()
    {
        return $this->services['pim_catalog.completeness.checker.empty'] = new \Pim\Component\Catalog\Completeness\Checker\EmptyChecker();
    }
    protected function getPimCatalog_Completeness_Checker_MediaService()
    {
        return $this->services['pim_catalog.completeness.checker.media'] = new \Pim\Component\Catalog\Completeness\Checker\MediaCompleteChecker();
    }
    protected function getPimCatalog_Completeness_Checker_MetricService()
    {
        return $this->services['pim_catalog.completeness.checker.metric'] = new \Pim\Component\Catalog\Completeness\Checker\MetricCompleteChecker();
    }
    protected function getPimCatalog_Completeness_Checker_PriceService()
    {
        return $this->services['pim_catalog.completeness.checker.price'] = new \Pim\Component\Catalog\Completeness\Checker\PriceCompleteChecker();
    }
    protected function getPimCatalog_Context_CatalogService()
    {
        return $this->services['pim_catalog.context.catalog'] = new \Pim\Bundle\CatalogBundle\Context\CatalogContext();
    }
    protected function getPimCatalog_Converter_MetricService()
    {
        return $this->services['pim_catalog.converter.metric'] = new \Pim\Component\Catalog\Converter\MetricConverter($this->get('akeneo_measure.measure_converter'));
    }
    protected function getPimCatalog_DataCollector_DatabaseService()
    {
        return $this->services['pim_catalog.data_collector.database'] = new \Pim\Bundle\CatalogBundle\Collector\DatabaseCollector($this->get('pim_catalog.version_provider'), $this->get('pim_catalog.repository.product_value_counter'), 'doctrine/orm');
    }
    protected function getPimCatalog_Denormalizer_Standard_AttributeOptionService()
    {
        return $this->services['pim_catalog.denormalizer.standard.attribute_option'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\AttributeOptionDenormalizer(array(0 => 'pim_catalog_simpleselect'), $this->get('pim_catalog.repository.attribute_option'));
    }
    protected function getPimCatalog_Denormalizer_Standard_AttributeOptionsService()
    {
        return $this->services['pim_catalog.denormalizer.standard.attribute_options'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\AttributeOptionsDenormalizer(array(0 => 'pim_catalog_multiselect'));
    }
    protected function getPimCatalog_Denormalizer_Standard_BaseValueService()
    {
        return $this->services['pim_catalog.denormalizer.standard.base_value'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\BaseValueDenormalizer(array(0 => 'pim_catalog_identifier', 1 => 'pim_catalog_text', 2 => 'pim_catalog_textarea'));
    }
    protected function getPimCatalog_Denormalizer_Standard_BooleanService()
    {
        return $this->services['pim_catalog.denormalizer.standard.boolean'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\BooleanDenormalizer(array(0 => 'pim_catalog_boolean'));
    }
    protected function getPimCatalog_Denormalizer_Standard_DatetimeService()
    {
        return $this->services['pim_catalog.denormalizer.standard.datetime'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\DateTimeDenormalizer(array(0 => 'pim_catalog_date'));
    }
    protected function getPimCatalog_Denormalizer_Standard_FileService()
    {
        return $this->services['pim_catalog.denormalizer.standard.file'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\FileDenormalizer(array(0 => 'pim_catalog_image', 1 => 'pim_catalog_file'), $this->get('akeneo_file_storage.repository.file_info'));
    }
    protected function getPimCatalog_Denormalizer_Standard_MetricService()
    {
        return $this->services['pim_catalog.denormalizer.standard.metric'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\MetricDenormalizer(array(0 => 'pim_catalog_metric'), $this->get('pim_catalog.factory.metric'), $this->get('pim_catalog.localization.localizer.metric'));
    }
    protected function getPimCatalog_Denormalizer_Standard_NumberService()
    {
        return $this->services['pim_catalog.denormalizer.standard.number'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\NumberDenormalizer(array(0 => 'pim_catalog_number'), $this->get('pim_catalog.localization.localizer.number'));
    }
    protected function getPimCatalog_Denormalizer_Standard_PricesService()
    {
        return $this->services['pim_catalog.denormalizer.standard.prices'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValue\PricesDenormalizer(array(0 => 'pim_catalog_price_collection'), $this->get('pim_catalog.localization.localizer.metric'), 'Pim\\Component\\Catalog\\Model\\ProductPrice');
    }
    protected function getPimCatalog_Denormalizer_Standard_ProductValueService()
    {
        return $this->services['pim_catalog.denormalizer.standard.product_value'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValueDenormalizer($this->get('pim_catalog.factory.product_value'), 'Pim\\Component\\Catalog\\Model\\ProductValue');
    }
    protected function getPimCatalog_Denormalizer_Standard_ProductValuesService()
    {
        return $this->services['pim_catalog.denormalizer.standard.product_values'] = new \Pim\Component\Catalog\Denormalizer\Standard\ProductValuesDenormalizer($this->get('pim_catalog.denormalizer.standard.product_value'), $this->get('pim_catalog.repository.attribute'), 'Pim\\Component\\Catalog\\Model\\ProductValue');
    }
    protected function getPimCatalog_Doctrine_CompletenessGeneratorService()
    {
        return $this->services['pim_catalog.doctrine.completeness_generator'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\CompletenessGenerator($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product', 'Pim\\Component\\Catalog\\Model\\ProductValue', 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimCatalog_Doctrine_Query_Filter_BooleanService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.boolean'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\BooleanFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_boolean'), array(0 => 'enabled'), array(0 => '=', 1 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_CategoryService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.category'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Filter\CategoryFilter($this->get('pim_catalog.repository.category'), $this->get('pim_catalog.repository.product_category'), $this->get('pim_catalog.doctrine.query.filter.object_id_resolver'), array(0 => 'categories', 1 => 'categories.id', 2 => 'categories.code'), array(0 => 'IN', 1 => 'NOT IN', 2 => 'UNCLASSIFIED', 3 => 'IN OR UNCLASSIFIED', 4 => 'IN CHILDREN', 5 => 'NOT IN CHILDREN'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_CompletenessService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.completeness'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\CompletenessFilter(array(0 => 'completeness'), array(0 => '<', 1 => '<=', 2 => '=', 3 => '>=', 4 => '>', 5 => '!=', 6 => 'GREATER THAN ON ALL LOCALES', 7 => 'GREATER OR EQUALS THAN ON ALL LOCALES', 8 => 'LOWER OR EQUALS THAN ON ALL LOCALES', 9 => 'LOWER THAN ON ALL LOCALES'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_DateService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.date'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\DateFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_date'), array(0 => '=', 1 => '<', 2 => '>', 3 => 'BETWEEN', 4 => 'NOT BETWEEN', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_DatetimeService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.datetime'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\DateTimeFilter($this->get('pim_import_export.repository.job_instance'), $this->get('akeneo_batch.job_repository'), array(0 => 'created', 1 => 'updated'), array(0 => '=', 1 => '<', 2 => '>', 3 => 'BETWEEN', 4 => 'NOT BETWEEN', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!=', 8 => 'SINCE LAST N DAYS', 9 => 'SINCE LAST JOB'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_DummyService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.dummy'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Filter\DummyFilter(array(), array(0 => 'enabled', 1 => 'completeness'), array(0 => 'ALL'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_FamilyService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.family'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\FamilyFilter($this->get('pim_catalog.doctrine.query.filter.object_id_resolver'), array(0 => 'family', 1 => 'family.id', 2 => 'family.code'), array(0 => 'IN', 1 => 'NOT IN', 2 => 'EMPTY', 3 => 'NOT EMPTY'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_GroupsService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.groups'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\GroupsFilter($this->get('pim_catalog.doctrine.query.filter.object_id_resolver'), array(0 => 'groups', 1 => 'groups.id', 2 => 'groups.code'), array(0 => 'IN', 1 => 'NOT IN', 2 => 'EMPTY', 3 => 'NOT EMPTY'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_IdentifierService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.identifier'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\StringFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_identifier'), array(0 => 'STARTS WITH', 1 => 'ENDS WITH', 2 => 'CONTAINS', 3 => 'DOES NOT CONTAIN', 4 => '=', 5 => 'IN', 6 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_MediaService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.media'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\MediaFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_image', 1 => 'pim_catalog_file'), array(0 => 'STARTS WITH', 1 => 'ENDS WITH', 2 => 'CONTAINS', 3 => 'DOES NOT CONTAIN', 4 => '=', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_MetricService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.metric'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\MetricFilter($this->get('pim_catalog.validator.helper.attribute'), $this->get('akeneo_measure.manager'), $this->get('akeneo_measure.measure_converter'), array(0 => 'pim_catalog_metric'), array(0 => '<', 1 => '<=', 2 => '=', 3 => '>=', 4 => '>', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_NumberService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.number'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\NumberFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_number'), array(0 => '<', 1 => '<=', 2 => '=', 3 => '>=', 4 => '>', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_ObjectCodeResolverService()
    {
        $this->services['pim_catalog.doctrine.query.filter.object_code_resolver'] = $instance = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Filter\ObjectCodeResolver($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
        $instance->addFieldMapping('family', 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
        $instance->addFieldMapping('option', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
        $instance->addFieldMapping('category', 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
        $instance->addFieldMapping('group', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
        return $instance;
    }
    protected function getPimCatalog_Doctrine_Query_Filter_ObjectIdResolverService()
    {
        $this->services['pim_catalog.doctrine.query.filter.object_id_resolver'] = $instance = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Filter\ObjectIdResolver($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
        $instance->addFieldMapping('family', 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
        $instance->addFieldMapping('option', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
        $instance->addFieldMapping('category', 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
        $instance->addFieldMapping('group', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
        return $instance;
    }
    protected function getPimCatalog_Doctrine_Query_Filter_OptionService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.option'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\OptionFilter($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.doctrine.query.filter.object_id_resolver'), array(0 => 'pim_catalog_simpleselect'), array(0 => 'IN', 1 => 'EMPTY', 2 => 'NOT EMPTY', 3 => 'NOT IN'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_OptionsService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.options'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\OptionsFilter($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.doctrine.query.filter.object_id_resolver'), array(0 => 'pim_catalog_multiselect'), array(0 => 'IN', 1 => 'EMPTY', 2 => 'NOT EMPTY', 3 => 'NOT IN'));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_PriceService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.price'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\PriceFilter($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.repository.currency'), array(0 => 'pim_catalog_price_collection'), array(0 => '<', 1 => '<=', 2 => '=', 3 => '>=', 4 => '>', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_ProductIdService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.product_id'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\ProductIdFilter(array(0 => 'id'), array(0 => '=', 1 => 'IN', 2 => 'NOT IN', 3 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Filter_StringService()
    {
        return $this->services['pim_catalog.doctrine.query.filter.string'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Filter\StringFilter($this->get('pim_catalog.validator.helper.attribute'), array(0 => 'pim_catalog_text', 1 => 'pim_catalog_textarea'), array(0 => 'STARTS WITH', 1 => 'ENDS WITH', 2 => 'CONTAINS', 3 => 'DOES NOT CONTAIN', 4 => '=', 5 => 'EMPTY', 6 => 'NOT EMPTY', 7 => '!='));
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_BaseService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.base'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\BaseSorter();
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_CompletenessService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.completeness'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\CompletenessSorter();
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_EntityService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.entity'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\EntitySorter();
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_FamilyService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.family'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\FamilySorter();
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_InGroupService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.in_group'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\InGroupSorter();
    }
    protected function getPimCatalog_Doctrine_Query_Sorter_IsAssociatedService()
    {
        return $this->services['pim_catalog.doctrine.query.sorter.is_associated'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Sorter\IsAssociatedSorter();
    }
    protected function getPimCatalog_EventSubscriber_Category_CheckChannelsService()
    {
        return $this->services['pim_catalog.event_subscriber.category.check_channels'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\Category\CheckChannelsOnDeletionSubscriber($this->get('translator'));
    }
    protected function getPimCatalog_EventSubscriber_CreateAttributeRequirementService()
    {
        return $this->services['pim_catalog.event_subscriber.create_attribute_requirement'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\CreateAttributeRequirementSubscriber($this->get('pim_catalog.factory.attribute_requirement'));
    }
    protected function getPimCatalog_EventSubscriber_CurrencyDisablingService()
    {
        return $this->services['pim_catalog.event_subscriber.currency_disabling'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\CurrencyDisablingSubscriber($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimCatalog_EventSubscriber_LocalizableService()
    {
        return $this->services['pim_catalog.event_subscriber.localizable'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\LocalizableSubscriber($this->get('pim_catalog.context.catalog'));
    }
    protected function getPimCatalog_EventSubscriber_MetricBaseValuesService()
    {
        return $this->services['pim_catalog.event_subscriber.metric_base_values'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ORM\MetricBaseValuesSubscriber($this->get('akeneo_measure.measure_converter'), $this->get('akeneo_measure.manager'));
    }
    protected function getPimCatalog_EventSubscriber_Orm_InjectProductReferenceService()
    {
        return $this->services['pim_catalog.event_subscriber.orm.inject_product_reference'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ORM\InjectProductReferenceSubscriber('Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_EventSubscriber_OutdateIndexedValuesService()
    {
        return $this->services['pim_catalog.event_subscriber.outdate_indexed_values'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\OutdateIndexedValuesSubscriber();
    }
    protected function getPimCatalog_EventSubscriber_ProductCategoryService()
    {
        return $this->services['pim_catalog.event_subscriber.product_category'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ProductCategorySubscriber($this->get('pim_catalog.saver.product'));
    }
    protected function getPimCatalog_EventSubscriber_ProductTemplateAttributeService()
    {
        return $this->services['pim_catalog.event_subscriber.product_template_attribute'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ProductTemplateAttributeSubscriber($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_catalog.builder.product_template'), $this->get('pim_catalog.repository.product_template'));
    }
    protected function getPimCatalog_EventSubscriber_ResetUniqueValidationService()
    {
        return $this->services['pim_catalog.event_subscriber.reset_unique_validation'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ResetUniqueValidationSubscriber($this->get('pim_catalog.validator.unique_value_set'));
    }
    protected function getPimCatalog_EventSubscriber_ScopableService()
    {
        return $this->services['pim_catalog.event_subscriber.scopable'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\ScopableSubscriber($this->get('pim_catalog.context.catalog'));
    }
    protected function getPimCatalog_EventSubscriber_TimestampableService()
    {
        return $this->services['pim_catalog.event_subscriber.timestampable'] = new \Pim\Bundle\CatalogBundle\EventSubscriber\TimestampableSubscriber();
    }
    protected function getPimCatalog_Factory_AssociationTypeService()
    {
        return $this->services['pim_catalog.factory.association_type'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType');
    }
    protected function getPimCatalog_Factory_AttributeService()
    {
        return $this->services['pim_catalog.factory.attribute'] = new \Pim\Component\Catalog\Factory\AttributeFactory($this->get('pim_catalog.registry.attribute_type'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_Factory_AttributeGroupService()
    {
        return $this->services['pim_catalog.factory.attribute_group'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
    }
    protected function getPimCatalog_Factory_AttributeOptionService()
    {
        return $this->services['pim_catalog.factory.attribute_option'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimCatalog_Factory_AttributeOptionValueService()
    {
        return $this->services['pim_catalog.factory.attribute_option_value'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOptionValue');
    }
    protected function getPimCatalog_Factory_AttributeRequirementService()
    {
        return $this->services['pim_catalog.factory.attribute_requirement'] = new \Pim\Component\Catalog\Factory\AttributeRequirementFactory('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement');
    }
    protected function getPimCatalog_Factory_CategoryService()
    {
        return $this->services['pim_catalog.factory.category'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimCatalog_Factory_ChannelService()
    {
        return $this->services['pim_catalog.factory.channel'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\Channel');
    }
    protected function getPimCatalog_Factory_CurrencyService()
    {
        return $this->services['pim_catalog.factory.currency'] = new \Pim\Component\Catalog\Factory\CurrencyFactory('Pim\\Bundle\\CatalogBundle\\Entity\\Currency');
    }
    protected function getPimCatalog_Factory_FamilyService()
    {
        return $this->services['pim_catalog.factory.family'] = new \Pim\Component\Catalog\Factory\FamilyFactory($this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.factory.attribute_requirement'), $this->get('pim_catalog.repository.attribute'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimCatalog_Factory_GroupService()
    {
        return $this->services['pim_catalog.factory.group'] = new \Pim\Component\Catalog\Factory\GroupFactory($this->get('pim_catalog.repository.group_type'), $this->get('pim_catalog.factory.product_template'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimCatalog_Factory_GroupTypeService()
    {
        return $this->services['pim_catalog.factory.group_type'] = new \Pim\Component\Catalog\Factory\GroupTypeFactory('Pim\\Bundle\\CatalogBundle\\Entity\\GroupType');
    }
    protected function getPimCatalog_Factory_LocaleService()
    {
        return $this->services['pim_catalog.factory.locale'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\CatalogBundle\\Entity\\Locale');
    }
    protected function getPimCatalog_Factory_MetricService()
    {
        return $this->services['pim_catalog.factory.metric'] = new \Pim\Component\Catalog\Factory\MetricFactory('Pim\\Component\\Catalog\\Model\\Metric');
    }
    protected function getPimCatalog_Factory_ProductCursorService()
    {
        return $this->services['pim_catalog.factory.product_cursor'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\ORM\Cursor\CursorFactory('Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\Cursor', $this->get('doctrine.orm.default_entity_manager'), 1);
    }
    protected function getPimCatalog_Factory_ProductTemplateService()
    {
        return $this->services['pim_catalog.factory.product_template'] = new \Pim\Component\Catalog\Factory\ProductTemplateFactory('Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate');
    }
    protected function getPimCatalog_Factory_ProductValueService()
    {
        return $this->services['pim_catalog.factory.product_value'] = new \Pim\Component\Catalog\Factory\ProductValueFactory($this->get('pim_catalog.validator.helper.attribute'), 'Pim\\Component\\Catalog\\Model\\ProductValue');
    }
    protected function getPimCatalog_Filter_ChainedService()
    {
        $a = $this->get('pim_enrich.filter.product_value.locale');
        $b = $this->get('pim_enrich.filter.product_value.channel');
        $this->services['pim_catalog.filter.chained'] = $instance = new \Pim\Bundle\CatalogBundle\Filter\ChainedFilter();
        $instance->addCollectionFilter($a, 'pim.transform.product_value.flat');
        $instance->addCollectionFilter($a, 'pim.transform.product_value.structured');
        $instance->addCollectionFilter($a, 'pim.external_api.product.view');
        $instance->addCollectionFilter($b, 'pim.transform.product_value.flat');
        $instance->addCollectionFilter($b, 'pim.transform.product_value.structured');
        $instance->addCollectionFilter($b, 'pim.external_api.product.view');
        return $instance;
    }
    protected function getPimCatalog_Helper_LocaleService()
    {
        return $this->services['pim_catalog.helper.locale'] = new \Pim\Bundle\CatalogBundle\Helper\LocaleHelper($this->get('pim_user.context.user'), $this->get('pim_catalog.repository.locale'));
    }
    protected function getPimCatalog_Localization_Factory_CurrencyService()
    {
        return $this->services['pim_catalog.localization.factory.currency'] = new \Akeneo\Component\Localization\Factory\NumberFactory(array('en_US' => '¤#,##0.00', 'fr_FR' => '#,##0.00 ¤'));
    }
    protected function getPimCatalog_Localization_Factory_DateService()
    {
        return $this->services['pim_catalog.localization.factory.date'] = new \Akeneo\Component\Localization\Factory\DateFactory(array('en_US' => 'MM/dd/yyyy', 'fr_FR' => 'dd/MM/yyyy'));
    }
    protected function getPimCatalog_Localization_Factory_DatetimeService()
    {
        return $this->services['pim_catalog.localization.factory.datetime'] = new \Akeneo\Component\Localization\Factory\DateTimeFactory(array('en_US' => 'MM/dd/yyyy hh:mm a', 'fr_FR' => 'dd/MM/yyyy HH:mm'));
    }
    protected function getPimCatalog_Localization_Factory_NumberService()
    {
        return $this->services['pim_catalog.localization.factory.number'] = new \Akeneo\Component\Localization\Factory\NumberFactory(array());
    }
    protected function getPimCatalog_Localization_Localizer_ConverterService()
    {
        return $this->services['pim_catalog.localization.localizer.converter'] = new \Pim\Component\Catalog\Localization\Localizer\AttributeConverter($this->get('pim_catalog.localization.localizer.registry'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Localization_Localizer_DateService()
    {
        return $this->services['pim_catalog.localization.localizer.date'] = new \Akeneo\Component\Localization\Localizer\DateLocalizer($this->get('validator'), $this->get('pim_catalog.localization.factory.date'), array(0 => 'pim_catalog_date'));
    }
    protected function getPimCatalog_Localization_Localizer_MetricService()
    {
        return $this->services['pim_catalog.localization.localizer.metric'] = new \Pim\Component\Catalog\Localization\Localizer\MetricLocalizer($this->get('validator'), $this->get('pim_catalog.localization.factory.number'), array(0 => 'pim_catalog_metric'));
    }
    protected function getPimCatalog_Localization_Localizer_NumberService()
    {
        return $this->services['pim_catalog.localization.localizer.number'] = new \Akeneo\Component\Localization\Localizer\NumberLocalizer($this->get('validator'), $this->get('pim_catalog.localization.factory.number'), array(0 => 'pim_catalog_number'));
    }
    protected function getPimCatalog_Localization_Localizer_PriceService()
    {
        return $this->services['pim_catalog.localization.localizer.price'] = new \Pim\Component\Catalog\Localization\Localizer\PriceLocalizer($this->get('validator'), $this->get('pim_catalog.localization.factory.number'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimCatalog_Localization_Localizer_RegistryService()
    {
        $this->services['pim_catalog.localization.localizer.registry'] = $instance = new \Pim\Component\Catalog\Localization\Localizer\LocalizerRegistry();
        $instance->register($this->get('pim_catalog.localization.localizer.number'));
        $instance->register($this->get('pim_catalog.localization.localizer.price'));
        $instance->register($this->get('pim_catalog.localization.localizer.metric'));
        $instance->register($this->get('pim_catalog.localization.localizer.date'));
        return $instance;
    }
    protected function getPimCatalog_Localization_Presenter_DateService()
    {
        return $this->services['pim_catalog.localization.presenter.date'] = new \Akeneo\Component\Localization\Presenter\DatePresenter($this->get('pim_catalog.localization.factory.date'), array(0 => 'pim_catalog_date'));
    }
    protected function getPimCatalog_Localization_Presenter_Date_AttributeOptionService()
    {
        return $this->services['pim_catalog.localization.presenter.date.attribute_option'] = new \Akeneo\Component\Localization\Presenter\DatePresenter($this->get('pim_catalog.localization.factory.date'), array(0 => 'date_min', 1 => 'date_max'));
    }
    protected function getPimCatalog_Localization_Presenter_DatetimeService()
    {
        return $this->services['pim_catalog.localization.presenter.datetime'] = new \Akeneo\Component\Localization\Presenter\DatePresenter($this->get('pim_catalog.localization.factory.datetime'), array(0 => 'created_at', 1 => 'updated_at'));
    }
    protected function getPimCatalog_Localization_Presenter_MetricService()
    {
        return $this->services['pim_catalog.localization.presenter.metric'] = new \Pim\Component\Catalog\Localization\Presenter\MetricPresenter($this->get('pim_catalog.localization.factory.number'), array(0 => 'pim_catalog_metric'), $this->get('pim_catalog.localization.translator.proxy'));
    }
    protected function getPimCatalog_Localization_Presenter_NumberService()
    {
        return $this->services['pim_catalog.localization.presenter.number'] = new \Akeneo\Component\Localization\Presenter\NumberPresenter($this->get('pim_catalog.localization.factory.number'), array(0 => 'pim_catalog_number'));
    }
    protected function getPimCatalog_Localization_Presenter_Number_AttributeOptionService()
    {
        return $this->services['pim_catalog.localization.presenter.number.attribute_option'] = new \Akeneo\Component\Localization\Presenter\NumberPresenter($this->get('pim_catalog.localization.factory.number'), array(0 => 'number_min', 1 => 'number_max'));
    }
    protected function getPimCatalog_Localization_Presenter_PricesService()
    {
        return $this->services['pim_catalog.localization.presenter.prices'] = new \Pim\Component\Catalog\Localization\Presenter\PricesPresenter($this->get('pim_catalog.localization.factory.currency'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimCatalog_Localization_Presenter_ProductField_BooleanService()
    {
        return $this->services['pim_catalog.localization.presenter.product_field.boolean'] = new \Akeneo\Component\Localization\Presenter\BooleanPresenter(array(0 => 'enabled'));
    }
    protected function getPimCatalog_Localization_Presenter_ProductValue_BooleanService()
    {
        return $this->services['pim_catalog.localization.presenter.product_value.boolean'] = new \Akeneo\Component\Localization\Presenter\BooleanPresenter(array(0 => 'pim_catalog_boolean'));
    }
    protected function getPimCatalog_Localization_Presenter_RegistryService()
    {
        $this->services['pim_catalog.localization.presenter.registry'] = $instance = new \Pim\Component\Catalog\Localization\Presenter\PresenterRegistry($this->get('pim_catalog.repository.attribute'));
        $instance->register($this->get('pim_catalog.localization.presenter.prices'), 'product_value');
        $instance->register($this->get('pim_catalog.localization.presenter.metric'), 'product_value');
        $instance->register($this->get('pim_catalog.localization.presenter.number'), 'product_value');
        $instance->register($this->get('pim_catalog.localization.presenter.date'), 'product_value');
        $instance->register($this->get('pim_catalog.localization.presenter.product_value.boolean'), 'product_value');
        $instance->register($this->get('pim_catalog.localization.presenter.datetime'), 'product_field');
        $instance->register($this->get('pim_catalog.localization.presenter.product_field.boolean'), 'product_field');
        $instance->register($this->get('pim_catalog.localization.presenter.number.attribute_option'), 'attribute_option');
        $instance->register($this->get('pim_catalog.localization.presenter.date.attribute_option'), 'attribute_option');
        return $instance;
    }
    protected function getPimCatalog_Localization_Translator_ProxyService()
    {
        return $this->services['pim_catalog.localization.translator.proxy'] = new \Akeneo\Component\Localization\TranslatorProxy($this->get('translator'));
    }
    protected function getPimCatalog_Localization_Validator_Constraint_DateFormatService()
    {
        return $this->services['pim_catalog.localization.validator.constraint.date_format'] = new \Akeneo\Component\Localization\Validator\Constraints\DateFormatValidator($this->get('pim_catalog.localization.factory.date'));
    }
    protected function getPimCatalog_Localization_Validator_Constraint_NumberFormatService()
    {
        return $this->services['pim_catalog.localization.validator.constraint.number_format'] = new \Akeneo\Component\Localization\Validator\Constraints\NumberFormatValidator(array('.' => 'dot (.)', ',' => 'comma (,)', '٫' => 'arabic decimal separator (٫)'));
    }
    protected function getPimCatalog_Manager_AttributeGroupService()
    {
        return $this->services['pim_catalog.manager.attribute_group'] = new \Pim\Component\Catalog\Manager\AttributeGroupManager($this->get('pim_catalog.repository.attribute_group'), $this->get('pim_catalog.saver.attribute_group'), $this->get('pim_catalog.saver.attribute'));
    }
    protected function getPimCatalog_Manager_AttributeOptionsSorterService()
    {
        return $this->services['pim_catalog.manager.attribute_options_sorter'] = new \Pim\Component\Catalog\Manager\AttributeOptionsSorter($this->get('pim_catalog.saver.attribute_option'));
    }
    protected function getPimCatalog_Manager_CompletenessService()
    {
        return $this->services['pim_catalog.manager.completeness'] = new \Pim\Component\Catalog\Manager\CompletenessManager($this->get('pim_catalog.repository.family'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.doctrine.completeness_generator'), $this->get('pim_catalog.completeness.checker.chained'), 'Pim\\Component\\Catalog\\Model\\Completeness');
    }
    protected function getPimCatalog_Manager_ProductTemplateMediaService()
    {
        return $this->services['pim_catalog.manager.product_template_media'] = new \Pim\Component\Catalog\Manager\ProductTemplateMediaManager($this->get('akeneo_file_storage.file_storage.file.file_storer'), $this->get('pim_serializer'));
    }
    protected function getPimCatalog_Normalizer_Standard_AssociationTypeService()
    {
        return $this->services['pim_catalog.normalizer.standard.association_type'] = new \Pim\Component\Catalog\Normalizer\Standard\AssociationTypeNormalizer($this->get('pim_catalog.normalizer.standard.translation'));
    }
    protected function getPimCatalog_Normalizer_Standard_AttributeService()
    {
        return $this->services['pim_catalog.normalizer.standard.attribute'] = new \Pim\Component\Catalog\Normalizer\Standard\AttributeNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_catalog.normalizer.standard.datetime'));
    }
    protected function getPimCatalog_Normalizer_Standard_AttributeGroupService()
    {
        return $this->services['pim_catalog.normalizer.standard.attribute_group'] = new \Pim\Component\Catalog\Normalizer\Standard\AttributeGroupNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Normalizer_Standard_AttributeOptionService()
    {
        return $this->services['pim_catalog.normalizer.standard.attribute_option'] = new \Pim\Component\Catalog\Normalizer\Standard\AttributeOptionNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_CategoryService()
    {
        return $this->services['pim_catalog.normalizer.standard.category'] = new \Pim\Component\Catalog\Normalizer\Standard\CategoryNormalizer($this->get('pim_catalog.normalizer.standard.translation'));
    }
    protected function getPimCatalog_Normalizer_Standard_ChannelService()
    {
        return $this->services['pim_catalog.normalizer.standard.channel'] = new \Pim\Component\Catalog\Normalizer\Standard\ChannelNormalizer($this->get('pim_catalog.normalizer.standard.translation'));
    }
    protected function getPimCatalog_Normalizer_Standard_CurrencyService()
    {
        return $this->services['pim_catalog.normalizer.standard.currency'] = new \Pim\Component\Catalog\Normalizer\Standard\CurrencyNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_DatetimeService()
    {
        return $this->services['pim_catalog.normalizer.standard.datetime'] = new \Pim\Component\Catalog\Normalizer\Standard\DateTimeNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_FamilyService()
    {
        return $this->services['pim_catalog.normalizer.standard.family'] = new \Pim\Component\Catalog\Normalizer\Standard\FamilyNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_catalog.filter.chained'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.attribute_requirement'));
    }
    protected function getPimCatalog_Normalizer_Standard_FileService()
    {
        return $this->services['pim_catalog.normalizer.standard.file'] = new \Pim\Component\Catalog\Normalizer\Standard\FileNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_GroupService()
    {
        return $this->services['pim_catalog.normalizer.standard.group'] = new \Pim\Component\Catalog\Normalizer\Standard\GroupNormalizer($this->get('pim_catalog.normalizer.standard.translation'));
    }
    protected function getPimCatalog_Normalizer_Standard_GroupTypeService()
    {
        return $this->services['pim_catalog.normalizer.standard.group_type'] = new \Pim\Component\Catalog\Normalizer\Standard\GroupTypeNormalizer($this->get('pim_catalog.normalizer.standard.translation'));
    }
    protected function getPimCatalog_Normalizer_Standard_JobInstanceService()
    {
        return $this->services['pim_catalog.normalizer.standard.job_instance'] = new \Akeneo\Component\Batch\Normalizer\Standard\JobInstanceNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_LocaleService()
    {
        return $this->services['pim_catalog.normalizer.standard.locale'] = new \Pim\Component\Catalog\Normalizer\Standard\LocaleNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_ProductService()
    {
        return $this->services['pim_catalog.normalizer.standard.product'] = new \Pim\Component\Catalog\Normalizer\Standard\ProductNormalizer($this->get('pim_catalog.normalizer.standard.product.properties'), $this->get('pim_catalog.normalizer.standard.product.associations'));
    }
    protected function getPimCatalog_Normalizer_Standard_Product_AssociationsService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.associations'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\AssociationsNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_Product_MetricService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.metric'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\MetricNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_Product_PriceService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.price'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\PriceNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_Product_ProductValueService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.product_value'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\ProductValueNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_Product_ProductValuesService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.product_values'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\ProductValuesNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_Product_PropertiesService()
    {
        return $this->services['pim_catalog.normalizer.standard.product.properties'] = new \Pim\Component\Catalog\Normalizer\Standard\Product\PropertiesNormalizer($this->get('pim_catalog.filter.chained'));
    }
    protected function getPimCatalog_Normalizer_Standard_ProxyGroupService()
    {
        return $this->services['pim_catalog.normalizer.standard.proxy_group'] = new \Pim\Component\Catalog\Normalizer\Standard\ProxyGroupNormalizer($this->get('pim_catalog.normalizer.standard.group'), $this->get('pim_catalog.normalizer.standard.variant_group'));
    }
    protected function getPimCatalog_Normalizer_Standard_TranslationService()
    {
        return $this->services['pim_catalog.normalizer.standard.translation'] = new \Pim\Component\Catalog\Normalizer\Standard\TranslationNormalizer();
    }
    protected function getPimCatalog_Normalizer_Standard_VariantGroupService()
    {
        return $this->services['pim_catalog.normalizer.standard.variant_group'] = new \Pim\Component\Catalog\Normalizer\Standard\VariantGroupNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_catalog.normalizer.standard.product.product_values'), $this->get('pim_catalog.denormalizer.standard.product_values'));
    }
    protected function getPimCatalog_Query_Filter_AttributeDumperService()
    {
        return $this->services['pim_catalog.query.filter.attribute_dumper'] = new \Pim\Bundle\CatalogBundle\Command\ProductQueryHelp\AttributeFilterDumper($this->get('pim_catalog.query.filter.registry'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Query_Filter_FieldDumperService()
    {
        return $this->services['pim_catalog.query.filter.field_dumper'] = new \Pim\Bundle\CatalogBundle\Command\ProductQueryHelp\FieldFilterDumper($this->get('pim_catalog.query.filter.registry'));
    }
    protected function getPimCatalog_Query_Filter_RegistryService()
    {
        $this->services['pim_catalog.query.filter.registry'] = $instance = new \Pim\Component\Catalog\Query\Filter\FilterRegistry($this->get('pim_catalog.repository.attribute'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.category'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.dummy'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.boolean'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.family'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.groups'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.option'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.options'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.date'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.datetime'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.metric'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.number'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.price'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.product_id'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.string'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.identifier'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.media'));
        $instance->register($this->get('pim_catalog.doctrine.query.filter.completeness'));
        $instance->register($this->get('pim_reference_data.doctrine.query.filter.reference_data'));
        return $instance;
    }
    protected function getPimCatalog_Query_ProductQueryBuilderFactoryService()
    {
        return $this->services['pim_catalog.query.product_query_builder_factory'] = new \Pim\Component\Catalog\Query\ProductQueryBuilderFactory('Pim\\Component\\Catalog\\Query\\ProductQueryBuilder', $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product', $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.query.filter.registry'), $this->get('pim_catalog.query.sorter.registry'), $this->get('pim_catalog.factory.product_cursor'));
    }
    protected function getPimCatalog_Query_Sorter_RegistryService()
    {
        $this->services['pim_catalog.query.sorter.registry'] = $instance = new \Pim\Component\Catalog\Query\Sorter\SorterRegistry();
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.completeness'));
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.family'));
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.in_group'));
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.entity'));
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.is_associated'));
        $instance->register($this->get('pim_reference_data.doctrine.query.sorter.reference_data'));
        $instance->register($this->get('pim_catalog.doctrine.query.sorter.base'));
        return $instance;
    }
    protected function getPimCatalog_Registry_AttributeTypeService()
    {
        $this->services['pim_catalog.registry.attribute_type'] = $instance = new \Pim\Component\Catalog\AttributeTypeRegistry();
        $instance->register('pim_catalog_identifier', $this->get('pim_catalog.attributetype.identifier'));
        $instance->register('pim_catalog_text', $this->get('pim_catalog.attributetype.text'));
        $instance->register('pim_catalog_textarea', $this->get('pim_catalog.attributetype.textarea'));
        $instance->register('pim_catalog_multiselect', $this->get('pim_catalog.attributetype.multiselect'));
        $instance->register('pim_catalog_simpleselect', $this->get('pim_catalog.attributetype.simpleselect'));
        $instance->register('pim_catalog_price_collection', $this->get('pim_catalog.attributetype.pricecollection'));
        $instance->register('pim_catalog_number', $this->get('pim_catalog.attributetype.number'));
        $instance->register('pim_catalog_boolean', $this->get('pim_catalog.attributetype.boolean'));
        $instance->register('pim_catalog_date', $this->get('pim_catalog.attributetype.date'));
        $instance->register('pim_catalog_file', $this->get('pim_catalog.attributetype.file'));
        $instance->register('pim_catalog_image', $this->get('pim_catalog.attributetype.image'));
        $instance->register('pim_catalog_metric', $this->get('pim_catalog.attributetype.metric'));
        $instance->register('pim_reference_data_simpleselect', $this->get('pim_reference_data.attributetype.simpleselect'));
        $instance->register('pim_reference_data_multiselect', $this->get('pim_reference_data.attributetype.multiselect'));
        return $instance;
    }
    protected function getPimCatalog_Remover_AssociationTypeService()
    {
        return $this->services['pim_catalog.remover.association_type'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType');
    }
    protected function getPimCatalog_Remover_AttributeService()
    {
        return $this->services['pim_catalog.remover.attribute'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimCatalog_Remover_AttributeGroupService()
    {
        return $this->services['pim_catalog.remover.attribute_group'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
    }
    protected function getPimCatalog_Remover_AttributeOptionService()
    {
        return $this->services['pim_catalog.remover.attribute_option'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimCatalog_Remover_BaseOptionsResolverService()
    {
        return $this->services['pim_catalog.remover.base_options_resolver'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemovingOptionsResolver();
    }
    protected function getPimCatalog_Remover_CategoryService()
    {
        return $this->services['pim_catalog.remover.category'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimCatalog_Remover_ChannelService()
    {
        return $this->services['pim_catalog.remover.channel'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Channel');
    }
    protected function getPimCatalog_Remover_FamilyService()
    {
        return $this->services['pim_catalog.remover.family'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimCatalog_Remover_GroupService()
    {
        return $this->services['pim_catalog.remover.group'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimCatalog_Remover_GroupTypeService()
    {
        return $this->services['pim_catalog.remover.group_type'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupType');
    }
    protected function getPimCatalog_Remover_ProductService()
    {
        return $this->services['pim_catalog.remover.product'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_Repository_AssociationService()
    {
        return $this->services['pim_catalog.repository.association'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Component\\Catalog\\Model\\Association');
    }
    protected function getPimCatalog_Repository_AssociationTypeService()
    {
        return $this->services['pim_catalog.repository.association_type'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType');
    }
    protected function getPimCatalog_Repository_AttributeService()
    {
        return $this->services['pim_catalog.repository.attribute'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimCatalog_Repository_AttributeGroupService()
    {
        return $this->services['pim_catalog.repository.attribute_group'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
    }
    protected function getPimCatalog_Repository_AttributeOptionService()
    {
        return $this->services['pim_catalog.repository.attribute_option'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimCatalog_Repository_AttributeRequirementService()
    {
        return $this->services['pim_catalog.repository.attribute_requirement'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement');
    }
    protected function getPimCatalog_Repository_CachedAttributeService()
    {
        return $this->services['pim_catalog.repository.cached_attribute'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Repository_CachedAttributeOptionService()
    {
        return $this->services['pim_catalog.repository.cached_attribute_option'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.attribute_option'));
    }
    protected function getPimCatalog_Repository_CachedCategoryService()
    {
        return $this->services['pim_catalog.repository.cached_category'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.category'));
    }
    protected function getPimCatalog_Repository_CachedChannelService()
    {
        return $this->services['pim_catalog.repository.cached_channel'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimCatalog_Repository_CachedFamilyService()
    {
        return $this->services['pim_catalog.repository.cached_family'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.family'));
    }
    protected function getPimCatalog_Repository_CachedLocaleService()
    {
        return $this->services['pim_catalog.repository.cached_locale'] = new \Akeneo\Component\StorageUtils\Repository\BaseCachedObjectRepository($this->get('pim_catalog.repository.locale'));
    }
    protected function getPimCatalog_Repository_CategoryService()
    {
        return $this->services['pim_catalog.repository.category'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimCatalog_Repository_ChannelService()
    {
        return $this->services['pim_catalog.repository.channel'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Channel');
    }
    protected function getPimCatalog_Repository_CompletenessService()
    {
        return $this->services['pim_catalog.repository.completeness'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Repository\CompletenessRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_Repository_CurrencyService()
    {
        return $this->services['pim_catalog.repository.currency'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Currency');
    }
    protected function getPimCatalog_Repository_FamilyService()
    {
        return $this->services['pim_catalog.repository.family'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimCatalog_Repository_GroupService()
    {
        return $this->services['pim_catalog.repository.group'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimCatalog_Repository_GroupTypeService()
    {
        return $this->services['pim_catalog.repository.group_type'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\GroupType');
    }
    protected function getPimCatalog_Repository_LocaleService()
    {
        return $this->services['pim_catalog.repository.locale'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Locale');
    }
    protected function getPimCatalog_Repository_ProductService()
    {
        $this->services['pim_catalog.repository.product'] = $instance = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Component\\Catalog\\Model\\Product');
        $instance->setProductQueryBuilderFactory($this->get('pim_catalog.query.product_query_builder_factory'));
        $instance->setAttributeRepository($this->get('pim_catalog.repository.attribute'));
        $instance->setGroupRepository($this->get('pim_catalog.repository.group'));
        if ($this->has('pim_reference_data.registry')) {
            $instance->setReferenceDataRegistry($this->get('pim_reference_data.registry', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimCatalog_Repository_ProductCategoryService()
    {
        return $this->services['pim_catalog.repository.product_category'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Repository\ProductCategoryRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product', 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimCatalog_Repository_ProductMassActionService()
    {
        return $this->services['pim_catalog.repository.product_mass_action'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Repository\ProductMassActionRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_Repository_ProductTemplateService()
    {
        return $this->services['pim_catalog.repository.product_template'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate');
    }
    protected function getPimCatalog_Repository_ProductValueCounterService()
    {
        return $this->services['pim_catalog.repository.product_value_counter'] = new \Pim\Bundle\CatalogBundle\Doctrine\ORM\Repository\ProductValueCounterRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\ProductValue');
    }
    protected function getPimCatalog_Resolver_AttributeValuesService()
    {
        return $this->services['pim_catalog.resolver.attribute_values'] = new \Pim\Component\Catalog\Manager\AttributeValuesResolver($this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.locale'));
    }
    protected function getPimCatalog_Resolver_FqcnService()
    {
        return $this->services['pim_catalog.resolver.fqcn'] = new \Pim\Bundle\CatalogBundle\Resolver\FQCNResolver($this);
    }
    protected function getPimCatalog_Resolver_VariantGroupAttributesService()
    {
        return $this->services['pim_catalog.resolver.variant_group_attributes'] = new \Pim\Component\Catalog\Manager\VariantGroupAttributesResolver($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Saver_AssociationTypeService()
    {
        return $this->services['pim_catalog.saver.association_type'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\AssociationTypeInterface');
    }
    protected function getPimCatalog_Saver_AttributeService()
    {
        return $this->services['pim_catalog.saver.attribute'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Saver\AttributeSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'));
    }
    protected function getPimCatalog_Saver_AttributeGroupService()
    {
        return $this->services['pim_catalog.saver.attribute_group'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\AttributeGroupInterface');
    }
    protected function getPimCatalog_Saver_AttributeOptionService()
    {
        return $this->services['pim_catalog.saver.attribute_option'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\AttributeOptionInterface');
    }
    protected function getPimCatalog_Saver_CategoryService()
    {
        return $this->services['pim_catalog.saver.category'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\CategoryInterface');
    }
    protected function getPimCatalog_Saver_ChannelService()
    {
        return $this->services['pim_catalog.saver.channel'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\ChannelInterface');
    }
    protected function getPimCatalog_Saver_CurrencyService()
    {
        return $this->services['pim_catalog.saver.currency'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\CurrencyInterface');
    }
    protected function getPimCatalog_Saver_FamilyService()
    {
        return $this->services['pim_catalog.saver.family'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Saver\FamilySaver($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_catalog.manager.completeness'), $this->get('event_dispatcher'));
    }
    protected function getPimCatalog_Saver_GroupService()
    {
        return $this->services['pim_catalog.saver.group'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Saver\GroupSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_catalog.saver.product'), $this->get('pim_catalog.manager.product_template_media'), $this->get('pim_catalog.applier.product_template'), $this->get('pim_versioning.context.version'), $this->get('pim_catalog.saver.group_options_resolver'), $this->get('event_dispatcher'), $this->get('pim_catalog.query.product_query_builder_factory'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimCatalog_Saver_GroupOptionsResolverService()
    {
        return $this->services['pim_catalog.saver.group_options_resolver'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Saver\GroupSavingOptionsResolver();
    }
    protected function getPimCatalog_Saver_GroupTypeService()
    {
        return $this->services['pim_catalog.saver.group_type'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\GroupTypeInterface');
    }
    protected function getPimCatalog_Saver_LocaleService()
    {
        return $this->services['pim_catalog.saver.locale'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Component\\Catalog\\Model\\LocaleInterface');
    }
    protected function getPimCatalog_Saver_ProductService()
    {
        return $this->services['pim_catalog.saver.product'] = new \Pim\Bundle\CatalogBundle\Doctrine\Common\Saver\ProductSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_catalog.manager.completeness'), $this->get('event_dispatcher'));
    }
    protected function getPimCatalog_Updater_Adder_AssociationFieldService()
    {
        return $this->services['pim_catalog.updater.adder.association_field'] = new \Pim\Component\Catalog\Updater\Adder\AssociationFieldAdder($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.group'), $this->get('pim_catalog.builder.product'), array(0 => 'associations'));
    }
    protected function getPimCatalog_Updater_Adder_CategoryFieldService()
    {
        return $this->services['pim_catalog.updater.adder.category_field'] = new \Pim\Component\Catalog\Updater\Adder\CategoryFieldAdder($this->get('pim_catalog.repository.cached_category'), array(0 => 'categories'));
    }
    protected function getPimCatalog_Updater_Adder_GroupFieldService()
    {
        return $this->services['pim_catalog.updater.adder.group_field'] = new \Pim\Component\Catalog\Updater\Adder\GroupFieldAdder($this->get('pim_catalog.repository.group'), array(0 => 'groups'));
    }
    protected function getPimCatalog_Updater_Adder_MultiselectValueService()
    {
        return $this->services['pim_catalog.updater.adder.multiselect_value'] = new \Pim\Component\Catalog\Updater\Adder\MultiSelectAttributeAdder($this->get('pim_catalog.builder.product'), $this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.repository.cached_attribute_option'), array(0 => 'pim_catalog_multiselect'));
    }
    protected function getPimCatalog_Updater_Adder_PriceCollectionValueService()
    {
        return $this->services['pim_catalog.updater.adder.price_collection_value'] = new \Pim\Component\Catalog\Updater\Adder\PriceCollectionAttributeAdder($this->get('pim_catalog.builder.product'), $this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.repository.currency'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimCatalog_Updater_Adder_RegistryService()
    {
        $this->services['pim_catalog.updater.adder.registry'] = $instance = new \Pim\Component\Catalog\Updater\Adder\AdderRegistry($this->get('pim_catalog.repository.cached_attribute'));
        $instance->register($this->get('pim_catalog.updater.adder.category_field'));
        $instance->register($this->get('pim_catalog.updater.adder.group_field'));
        $instance->register($this->get('pim_catalog.updater.adder.multiselect_value'));
        $instance->register($this->get('pim_catalog.updater.adder.association_field'));
        $instance->register($this->get('pim_catalog.updater.adder.price_collection_value'));
        return $instance;
    }
    protected function getPimCatalog_Updater_AssociationTypeService()
    {
        return $this->services['pim_catalog.updater.association_type'] = new \Pim\Component\Catalog\Updater\AssociationTypeUpdater($this->get('pim_catalog.repository.association_type'));
    }
    protected function getPimCatalog_Updater_AttributeService()
    {
        return $this->services['pim_catalog.updater.attribute'] = new \Pim\Component\Catalog\Updater\AttributeUpdater($this->get('pim_catalog.repository.attribute_group'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.registry.attribute_type'));
    }
    protected function getPimCatalog_Updater_AttributeGroupService()
    {
        return $this->services['pim_catalog.updater.attribute_group'] = new \Pim\Component\Catalog\Updater\AttributeGroupUpdater($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.attribute_group'));
    }
    protected function getPimCatalog_Updater_AttributeOptionService()
    {
        return $this->services['pim_catalog.updater.attribute_option'] = new \Pim\Component\Catalog\Updater\AttributeOptionUpdater($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Updater_CategoryTranslatableService()
    {
        return $this->services['pim_catalog.updater.category_translatable'] = new \Pim\Component\Catalog\Localization\CategoryUpdater(new \Akeneo\Component\Classification\Updater\CategoryUpdater($this->get('pim_catalog.repository.category')), $this->get('pim_localization.updater.translatable'));
    }
    protected function getPimCatalog_Updater_ChannelService()
    {
        return $this->services['pim_catalog.updater.channel'] = new \Pim\Component\Catalog\Updater\ChannelUpdater($this->get('pim_catalog.repository.category'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.currency'));
    }
    protected function getPimCatalog_Updater_Copier_RegistryService()
    {
        $a = $this->get('pim_catalog.builder.product');
        $b = $this->get('pim_catalog.validator.helper.attribute');
        $c = $this->get('akeneo_file_storage.file_storage.file.file_fetcher');
        $d = $this->get('akeneo_file_storage.file_storage.file.file_storer');
        $e = $this->get('akeneo_file_storage.file_storage.filesystem_provider');
        $this->services['pim_catalog.updater.copier.registry'] = $instance = new \Pim\Component\Catalog\Updater\Copier\CopierRegistry($this->get('pim_catalog.repository.cached_attribute'));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_text'), array(0 => 'pim_catalog_text')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\MediaAttributeCopier($a, $b, $c, $d, $e, array(0 => 'pim_catalog_image'), array(0 => 'pim_catalog_image')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\MediaAttributeCopier($a, $b, $c, $d, $e, array(0 => 'pim_catalog_file'), array(0 => 'pim_catalog_file')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_textarea'), array(0 => 'pim_catalog_textarea')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_boolean'), array(0 => 'pim_catalog_boolean')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_number'), array(0 => 'pim_catalog_number')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_date'), array(0 => 'pim_catalog_date')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\MetricAttributeCopier($a, $b, $this->get('pim_catalog.factory.metric'), array(0 => 'pim_catalog_metric'), array(0 => 'pim_catalog_metric')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\BaseAttributeCopier($a, $b, array(0 => 'pim_catalog_simpleselect'), array(0 => 'pim_catalog_simpleselect')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\MultiSelectAttributeCopier($a, $b, array(0 => 'pim_catalog_multiselect'), array(0 => 'pim_catalog_multiselect')));
        $instance->register(new \Pim\Component\Catalog\Updater\Copier\PriceCollectionAttributeCopier($a, $b, array(0 => 'pim_catalog_price_collection'), array(0 => 'pim_catalog_price_collection')));
        $instance->register(new \Pim\Component\ReferenceData\Updater\Copier\ReferenceDataAttributeCopier($a, $b, array(0 => 'pim_reference_data_simpleselect'), array(0 => 'pim_reference_data_simpleselect')));
        $instance->register(new \Pim\Component\ReferenceData\Updater\Copier\ReferenceDataCollectionAttributeCopier($a, $b, array(0 => 'pim_reference_data_multiselect'), array(0 => 'pim_reference_data_multiselect')));
        return $instance;
    }
    protected function getPimCatalog_Updater_CurrencyService()
    {
        return $this->services['pim_catalog.updater.currency'] = new \Pim\Component\Catalog\Updater\CurrencyUpdater();
    }
    protected function getPimCatalog_Updater_FamilyService()
    {
        return $this->services['pim_catalog.updater.family'] = new \Pim\Component\Catalog\Updater\FamilyUpdater($this->get('pim_catalog.repository.family'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.factory.attribute_requirement'), $this->get('pim_catalog.repository.attribute_requirement'));
    }
    protected function getPimCatalog_Updater_GroupService()
    {
        return $this->services['pim_catalog.updater.group'] = new \Pim\Component\Catalog\Updater\GroupUpdater($this->get('pim_catalog.repository.group_type'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.query.product_query_builder_factory'));
    }
    protected function getPimCatalog_Updater_GroupTypeService()
    {
        return $this->services['pim_catalog.updater.group_type'] = new \Pim\Component\Catalog\Updater\GroupTypeUpdater();
    }
    protected function getPimCatalog_Updater_LocaleService()
    {
        return $this->services['pim_catalog.updater.locale'] = new \Pim\Component\Catalog\Updater\LocaleUpdater();
    }
    protected function getPimCatalog_Updater_ProductService()
    {
        return $this->services['pim_catalog.updater.product'] = new \Pim\Component\Catalog\Updater\ProductUpdater($this->get('pim_catalog.updater.product_property_setter'), $this->get('pim_catalog.updater.product_template'), array(0 => 'enabled', 1 => 'family', 2 => 'categories', 3 => 'variant_group', 4 => 'groups', 5 => 'associations'));
    }
    protected function getPimCatalog_Updater_ProductPropertyAdderService()
    {
        return $this->services['pim_catalog.updater.product_property_adder'] = new \Pim\Component\Catalog\Updater\ProductPropertyAdder($this->get('pim_catalog.repository.cached_attribute'), $this->get('pim_catalog.updater.adder.registry'));
    }
    protected function getPimCatalog_Updater_ProductPropertyCopierService()
    {
        return $this->services['pim_catalog.updater.product_property_copier'] = new \Pim\Component\Catalog\Updater\ProductPropertyCopier($this->get('pim_catalog.repository.cached_attribute'), $this->get('pim_catalog.updater.copier.registry'));
    }
    protected function getPimCatalog_Updater_ProductPropertyRemoverService()
    {
        return $this->services['pim_catalog.updater.product_property_remover'] = new \Pim\Component\Catalog\Updater\ProductPropertyRemover($this->get('pim_catalog.repository.cached_attribute'), $this->get('pim_catalog.updater.remover.registry'));
    }
    protected function getPimCatalog_Updater_ProductPropertySetterService()
    {
        return $this->services['pim_catalog.updater.product_property_setter'] = new \Pim\Component\Catalog\Updater\ProductPropertySetter($this->get('pim_catalog.repository.cached_attribute'), $this->get('pim_catalog.updater.setter.registry'));
    }
    protected function getPimCatalog_Updater_ProductTemplateService()
    {
        return $this->services['pim_catalog.updater.product_template'] = new \Pim\Component\Catalog\Updater\ProductTemplateUpdater($this->get('pim_catalog.updater.product_property_setter'));
    }
    protected function getPimCatalog_Updater_Remover_CategoryFieldService()
    {
        return $this->services['pim_catalog.updater.remover.category_field'] = new \Pim\Component\Catalog\Updater\Remover\CategoryFieldRemover($this->get('pim_catalog.repository.cached_category'), array(0 => 'categories'));
    }
    protected function getPimCatalog_Updater_Remover_GroupFieldService()
    {
        return $this->services['pim_catalog.updater.remover.group_field'] = new \Pim\Component\Catalog\Updater\Remover\GroupFieldRemover($this->get('pim_catalog.repository.group'), array(0 => 'groups'));
    }
    protected function getPimCatalog_Updater_Remover_MultiselectValueService()
    {
        return $this->services['pim_catalog.updater.remover.multiselect_value'] = new \Pim\Component\Catalog\Updater\Remover\MultiSelectAttributeRemover($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.repository.cached_attribute_option'), array(0 => 'pim_catalog_multiselect'));
    }
    protected function getPimCatalog_Updater_Remover_PriceCollectionValueService()
    {
        return $this->services['pim_catalog.updater.remover.price_collection_value'] = new \Pim\Component\Catalog\Updater\Remover\PriceCollectionAttributeRemover($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_catalog.repository.currency'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimCatalog_Updater_Remover_RegistryService()
    {
        $this->services['pim_catalog.updater.remover.registry'] = $instance = new \Pim\Component\Catalog\Updater\Remover\RemoverRegistry($this->get('pim_catalog.repository.cached_attribute'));
        $instance->register($this->get('pim_catalog.updater.remover.category_field'));
        $instance->register($this->get('pim_catalog.updater.remover.price_collection_value'));
        $instance->register($this->get('pim_catalog.updater.remover.group_field'));
        $instance->register($this->get('pim_catalog.updater.remover.multiselect_value'));
        return $instance;
    }
    protected function getPimCatalog_Updater_Setter_AssociationFieldService()
    {
        return $this->services['pim_catalog.updater.setter.association_field'] = new \Pim\Component\Catalog\Updater\Setter\AssociationFieldSetter($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.group'), $this->get('pim_catalog.builder.product'), array(0 => 'associations'));
    }
    protected function getPimCatalog_Updater_Setter_CategoryFieldService()
    {
        return $this->services['pim_catalog.updater.setter.category_field'] = new \Pim\Component\Catalog\Updater\Setter\CategoryFieldSetter($this->get('pim_catalog.repository.cached_category'), array(0 => 'categories'));
    }
    protected function getPimCatalog_Updater_Setter_EnabledFieldService()
    {
        return $this->services['pim_catalog.updater.setter.enabled_field'] = new \Pim\Component\Catalog\Updater\Setter\EnabledFieldSetter(array(0 => 'enabled'));
    }
    protected function getPimCatalog_Updater_Setter_FamilyFieldService()
    {
        return $this->services['pim_catalog.updater.setter.family_field'] = new \Pim\Component\Catalog\Updater\Setter\FamilyFieldSetter($this->get('pim_catalog.repository.cached_family'), array(0 => 'family'));
    }
    protected function getPimCatalog_Updater_Setter_GroupFieldService()
    {
        return $this->services['pim_catalog.updater.setter.group_field'] = new \Pim\Component\Catalog\Updater\Setter\GroupFieldSetter($this->get('pim_catalog.repository.group'), array(0 => 'groups'));
    }
    protected function getPimCatalog_Updater_Setter_RegistryService()
    {
        $a = $this->get('pim_catalog.builder.product');
        $b = $this->get('pim_catalog.validator.helper.attribute');
        $c = $this->get('pim_catalog.repository.cached_attribute_option');
        $d = $this->get('pim_reference_data.repository_resolver');
        $this->services['pim_catalog.updater.setter.registry'] = $instance = new \Pim\Component\Catalog\Updater\Setter\SetterRegistry($this->get('pim_catalog.repository.cached_attribute'));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\TextAttributeSetter($a, $b, array(0 => 'pim_catalog_text', 1 => 'pim_catalog_textarea', 2 => 'pim_catalog_identifier')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\MetricAttributeSetter($a, $b, $this->get('pim_catalog.factory.metric'), array(0 => 'pim_catalog_metric')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\BooleanAttributeSetter($a, $b, array(0 => 'pim_catalog_boolean')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\DateAttributeSetter($a, $b, array(0 => 'pim_catalog_date')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\NumberAttributeSetter($a, $b, array(0 => 'pim_catalog_number')));
        $instance->register($this->get('pim_catalog.updater.setter.association_field'));
        $instance->register($this->get('pim_catalog.updater.setter.category_field'));
        $instance->register($this->get('pim_catalog.updater.setter.group_field'));
        $instance->register($this->get('pim_catalog.updater.setter.variant_group_field'));
        $instance->register($this->get('pim_catalog.updater.setter.family_field'));
        $instance->register($this->get('pim_catalog.updater.setter.enabled_field'));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\MultiSelectAttributeSetter($a, $b, $c, array(0 => 'pim_catalog_multiselect')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\PriceCollectionAttributeSetter($a, $b, array(0 => 'pim_catalog_price_collection')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\SimpleSelectAttributeSetter($a, $b, $c, array(0 => 'pim_catalog_simpleselect')));
        $instance->register(new \Pim\Component\Catalog\Updater\Setter\MediaAttributeSetter($a, $b, $this->get('akeneo_file_storage.file_storage.file.file_storer'), $this->get('akeneo_file_storage.repository.file_info'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'), ($this->targetDirs[2].'/uploads/product')));
        $instance->register(new \Pim\Component\ReferenceData\Updater\Setter\ReferenceDataSetter($a, $b, $d, array(0 => 'pim_reference_data_simpleselect')));
        $instance->register(new \Pim\Component\ReferenceData\Updater\Setter\ReferenceDataCollectionSetter($a, $b, $d, array(0 => 'pim_reference_data_multiselect')));
        return $instance;
    }
    protected function getPimCatalog_Updater_Setter_VariantGroupFieldService()
    {
        return $this->services['pim_catalog.updater.setter.variant_group_field'] = new \Pim\Component\Catalog\Updater\Setter\VariantGroupFieldSetter($this->get('pim_catalog.repository.group'), array(0 => 'variant_group'));
    }
    protected function getPimCatalog_Updater_VariantGroupService()
    {
        return $this->services['pim_catalog.updater.variant_group'] = new \Pim\Component\Catalog\Updater\VariantGroupUpdater($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.group_type'), $this->get('pim_catalog.builder.product'), $this->get('pim_catalog.updater.product'), $this->get('pim_catalog.query.product_query_builder_factory'), 'Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate');
    }
    protected function getPimCatalog_Validator_Constraint_AttributeTypeForOptionService()
    {
        return $this->services['pim_catalog.validator.constraint.attribute_type_for_option'] = new \Pim\Component\Catalog\Validator\Constraints\AttributeTypeForOptionValidator();
    }
    protected function getPimCatalog_Validator_Constraint_CurrencyService()
    {
        return $this->services['pim_catalog.validator.constraint.currency'] = new \Pim\Component\Catalog\Validator\Constraints\CurrencyValidator($this->get('pim_catalog.repository.currency'));
    }
    protected function getPimCatalog_Validator_Constraint_FamilyRequirementsService()
    {
        return $this->services['pim_catalog.validator.constraint.family_requirements'] = new \Pim\Component\Catalog\Validator\Constraints\FamilyRequirementsValidator($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.channel'));
    }
    protected function getPimCatalog_Validator_Constraint_HasVariantAxesService()
    {
        return $this->services['pim_catalog.validator.constraint.has_variant_axes'] = new \Pim\Component\Catalog\Validator\Constraints\HasVariantAxesValidator();
    }
    protected function getPimCatalog_Validator_Constraint_ImmutableService()
    {
        return $this->services['pim_catalog.validator.constraint.immutable'] = new \Pim\Component\Catalog\Validator\Constraints\ImmutableValidator($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getPimCatalog_Validator_Constraint_IsReferenceDataConfiguredService()
    {
        return $this->services['pim_catalog.validator.constraint.is_reference_data_configured'] = new \Pim\Component\Catalog\Validator\Constraints\IsReferenceDataConfiguredValidator(array(0 => 'pim_reference_data_multiselect', 1 => 'pim_reference_data_simpleselect'), $this->get('pim_reference_data.registry', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getPimCatalog_Validator_Constraint_LocalizableValueService()
    {
        return $this->services['pim_catalog.validator.constraint.localizable_value'] = new \Pim\Component\Catalog\Validator\Constraints\LocalizableValueValidator($this->get('pim_catalog.repository.cached_locale'));
    }
    protected function getPimCatalog_Validator_Constraint_ScopableValueService()
    {
        return $this->services['pim_catalog.validator.constraint.scopable_value'] = new \Pim\Component\Catalog\Validator\Constraints\ScopableValueValidator($this->get('pim_catalog.repository.cached_channel'));
    }
    protected function getPimCatalog_Validator_Constraint_SingleIdentifierService()
    {
        return $this->services['pim_catalog.validator.constraint.single_identifier'] = new \Pim\Component\Catalog\Validator\Constraints\SingleIdentifierAttributeValidator($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Validator_Constraint_UniqueValueService()
    {
        return $this->services['pim_catalog.validator.constraint.unique_value'] = new \Pim\Component\Catalog\Validator\Constraints\UniqueValueValidator($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.validator.unique_value_set'));
    }
    protected function getPimCatalog_Validator_Constraint_UniqueVariantAxisService()
    {
        return $this->services['pim_catalog.validator.constraint.unique_variant_axis'] = new \Pim\Component\Catalog\Validator\Constraints\UniqueVariantAxisValidator($this->get('pim_catalog.repository.product'));
    }
    protected function getPimCatalog_Validator_Constraint_UniqueVariantGroupService()
    {
        return $this->services['pim_catalog.validator.constraint.unique_variant_group'] = new \Pim\Component\Catalog\Validator\Constraints\UniqueVariantGroupValidator();
    }
    protected function getPimCatalog_Validator_Constraint_UniqueVariantGroupTypeService()
    {
        return $this->services['pim_catalog.validator.constraint.unique_variant_group_type'] = new \Pim\Component\Catalog\Validator\Constraints\UniqueVariantGroupTypeValidator($this->get('pim_catalog.repository.group_type'));
    }
    protected function getPimCatalog_Validator_Constraint_ValidMetricService()
    {
        return $this->services['pim_catalog.validator.constraint.valid_metric'] = new \Pim\Component\Catalog\Validator\Constraints\ValidMetricValidator($this->get('property_accessor'), array('measures_config' => array('Area' => array('standard' => 'SQUARE_METER', 'units' => array('SQUARE_MILLIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mm²'), 'SQUARE_CENTIMETER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'cm²'), 'SQUARE_DECIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'dm²'), 'SQUARE_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm²'), 'CENTIARE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'ca'), 'SQUARE_DEKAMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'dam²'), 'ARE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'a'), 'SQUARE_HECTOMETER' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'hm²'), 'HECTARE' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'ha'), 'SQUARE_KILOMETER' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'km²'), 'SQUARE_MIL' => array('convert' => array(0 => array('mul' => 6.4515999999999997E-10)), 'symbol' => 'sq mil'), 'SQUARE_INCH' => array('convert' => array(0 => array('mul' => 0.00064515999999999998)), 'symbol' => 'in²'), 'SQUARE_FOOT' => array('convert' => array(0 => array('mul' => 0.092903040000000006)), 'symbol' => 'ft²'), 'SQUARE_YARD' => array('convert' => array(0 => array('mul' => 0.83612735999999999)), 'symbol' => 'yd²'), 'ARPENT' => array('convert' => array(0 => array('mul' => 3418.8899999999999)), 'symbol' => 'arpent'), 'ACRE' => array('convert' => array(0 => array('mul' => 4046.8564219999998)), 'symbol' => 'A'), 'SQUARE_FURLONG' => array('convert' => array(0 => array('mul' => 40468.726000000002)), 'symbol' => 'fur²'), 'SQUARE_MILE' => array('convert' => array(0 => array('mul' => 2589988.1103360001)), 'symbol' => 'mi²'))), 'Binary' => array('standard' => 'BYTE', 'units' => array('BIT' => array('convert' => array(0 => array('mul' => 0.125)), 'symbol' => 'b'), 'BYTE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'B'), 'KILOBYTE' => array('convert' => array(0 => array('mul' => 1024)), 'symbol' => 'kB'), 'MEGABYTE' => array('convert' => array(0 => array('mul' => 1048576)), 'symbol' => 'MB'), 'GIGABYTE' => array('convert' => array(0 => array('mul' => 1073741824)), 'symbol' => 'GB'), 'TERABYTE' => array('convert' => array(0 => array('mul' => 1099511627776)), 'symbol' => 'TB'))), 'Decibel' => array('standard' => 'DECIBEL', 'units' => array('DECIBEL' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'dB'))), 'Frequency' => array('standard' => 'HERTZ', 'units' => array('HERTZ' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Hz'), 'KILOHERTZ' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kHz'), 'MEGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MHz'), 'GIGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GHz'), 'TERAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'THz'))), 'Length' => array('standard' => 'METER', 'units' => array('MILLIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mm'), 'CENTIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cm'), 'DECIMETER' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dm'), 'METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm'), 'DEKAMETER' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'dam'), 'HECTOMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hm'), 'KILOMETER' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'km'), 'MIL' => array('convert' => array(0 => array('mul' => 2.5400000000000001E-5)), 'symbol' => 'mil'), 'INCH' => array('convert' => array(0 => array('mul' => 0.025399999999999999)), 'symbol' => 'in'), 'FEET' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ft'), 'YARD' => array('convert' => array(0 => array('mul' => 0.91439999999999999)), 'symbol' => 'yd'), 'CHAIN' => array('convert' => array(0 => array('mul' => 20.116800000000001)), 'symbol' => 'ch'), 'FURLONG' => array('convert' => array(0 => array('mul' => 201.16800000000001)), 'symbol' => 'fur'), 'MILE' => array('convert' => array(0 => array('mul' => 1609.3440000000001)), 'symbol' => 'mi'))), 'Power' => array('standard' => 'WATT', 'units' => array('WATT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'W'), 'KILOWATT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kW'), 'MEGAWATT' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MW'), 'GIGAWATT' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GW'), 'TERAWATT' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'TW'))), 'Voltage' => array('standard' => 'VOLT', 'units' => array('MILLIVOLT' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mV'), 'CENTIVOLT' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cV'), 'DECIVOLT' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dV'), 'VOLT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'V'), 'DEKAVOLT' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daV'), 'HECTOVOLT' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hV'), 'KILOVOLT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kV'))), 'Intensity' => array('standard' => 'AMPERE', 'units' => array('MILLIAMPERE' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mA'), 'CENTIAMPERE' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cA'), 'DECIAMPERE' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dA'), 'AMPERE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'A'), 'DEKAMPERE' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daA'), 'HECTOAMPERE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hA'), 'KILOAMPERE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kA'))), 'Resistance' => array('standard' => 'OHM', 'units' => array('MILLIOHM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mΩ'), 'CENTIOHM' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cΩ'), 'DECIOHM' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dΩ'), 'OHM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ω'), 'DEKAOHM' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daΩ'), 'HECTOHM' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hΩ'), 'KILOHM' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kΩ'), 'MEGOHM' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MΩ'))), 'Speed' => array('standard' => 'METER_PER_SECOND', 'units' => array('METER_PER_SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'mdivs'), 'METER_PER_MINUTE' => array('convert' => array(0 => array('div' => 60)), 'symbol' => 'mdivm'), 'METER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1), 1 => array('div' => 3600)), 'symbol' => 'mdivh'), 'KILOMETER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1000), 1 => array('div' => 3600)), 'symbol' => 'kmdivh'), 'FOOT_PER_SECOND' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ftdivs'), 'FOOT_PER_HOUR' => array('convert' => array(0 => array('mul' => 0.30480000000000002), 1 => array('div' => 3600)), 'symbol' => 'ftdivh'), 'YARD_PER_HOUR' => array('convert' => array(0 => array('mul' => '0.9144\''), 1 => array('div' => 3600)), 'symbol' => 'yddivh'), 'MILE_PER_HOUR' => array('convert' => array(0 => array('mul' => 1609.3440000000001), 1 => array('div' => 3600)), 'symbol' => 'midivh'))), 'ElectricCharge' => array('standard' => 'AMPEREHOUR', 'units' => array('MILLIAMPEREHOUR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mAh'), 'AMPEREHOUR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ah'), 'MILLICOULOMB' => array('convert' => array(0 => array('div' => 3600000)), 'symbol' => 'mC'), 'CENTICOULOMB' => array('convert' => array(0 => array('div' => 360000)), 'symbol' => 'cC'), 'DECICOULOMB' => array('convert' => array(0 => array('div' => 36000)), 'symbol' => 'dC'), 'COULOMB' => array('convert' => array(0 => array('div' => 3600)), 'symbol' => 'C'), 'DEKACOULOMB' => array('convert' => array(0 => array('div' => 360)), 'symbol' => 'daC'), 'HECTOCOULOMB' => array('convert' => array(0 => array('div' => 36)), 'symbol' => 'hC'), 'KILOCOULOMB' => array('convert' => array(0 => array('div' => 3.6000000000000001)), 'symbol' => 'kC'))), 'Duration' => array('standard' => 'SECOND', 'units' => array('MILLISECOND' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'ms'), 'SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 's'), 'MINUTE' => array('convert' => array(0 => array('mul' => 60)), 'symbol' => 'm'), 'HOUR' => array('convert' => array(0 => array('mul' => 3600)), 'symbol' => 'h'), 'DAY' => array('convert' => array(0 => array('mul' => 86400)), 'symbol' => 'd'), 'WEEK' => array('convert' => array(0 => array('mul' => 604800)), 'symbol' => 'week'), 'MONTH' => array('convert' => array(0 => array('mul' => 18748800)), 'symbol' => 'month'), 'YEAR' => array('convert' => array(0 => array('mul' => 31536000)), 'symbol' => 'year'))), 'Temperature' => array('standard' => 'KELVIN', 'units' => array('CELSIUS' => array('convert' => array(0 => array('add' => 273.14999999999998)), 'symbol' => '°C'), 'FAHRENHEIT' => array('convert' => array(0 => array('sub' => 32), 1 => array('div' => 1.8), 2 => array('add' => 273.14999999999998)), 'symbol' => '°F'), 'KELVIN' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => '°K'), 'RANKINE' => array('convert' => array(0 => array('div' => 1.8)), 'symbol' => '°R'), 'REAUMUR' => array('convert' => array(0 => array('mul' => 1.25), 1 => array('add' => 273.14999999999998)), 'symbol' => '°r'))), 'Volume' => array('standard' => 'CUBIC_METER', 'units' => array('CUBIC_MILLIMETER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-9)), 'symbol' => 'mm³'), 'CUBIC_CENTIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'cm³'), 'MILLILITER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'ml'), 'CENTILITER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'cl'), 'DECILITER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'dl'), 'CUBIC_DECIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'dm³'), 'LITER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'l'), 'CUBIC_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm³'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 160)), 'symbol' => 'oz'), 'PINT' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 8)), 'symbol' => 'pt'), 'BARREL' => array('convert' => array(0 => array('mul' => 0.16365924000000001)), 'symbol' => 'bbl'), 'GALLON' => array('convert' => array(0 => array('mul' => 0.00454609)), 'symbol' => 'gal'), 'CUBIC_FOOT' => array('convert' => array(0 => array('mul' => 6.5411915900000004), 1 => array('div' => 231)), 'symbol' => 'ft³'), 'CUBIC_INCH' => array('convert' => array(0 => array('mul' => 0.0037854118000000001), 1 => array('div' => 231)), 'symbol' => 'in³'), 'CUBIC_YARD' => array('convert' => array(0 => array('mul' => 0.76455486100000003)), 'symbol' => 'yd³'))), 'Weight' => array('standard' => 'KILOGRAM', 'units' => array('MILLIGRAM' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mg'), 'GRAM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'g'), 'KILOGRAM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'kg'), 'TON' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 't'), 'GRAIN' => array('convert' => array(0 => array('mul' => 6.4798909999999995E-5)), 'symbol' => 'gr'), 'DENIER' => array('convert' => array(0 => array('mul' => 0.0012750000000000001)), 'symbol' => 'denier'), 'ONCE' => array('convert' => array(0 => array('mul' => 0.030589999999999999)), 'symbol' => 'once'), 'MARC' => array('convert' => array(0 => array('mul' => 0.24475)), 'symbol' => 'marc'), 'LIVRE' => array('convert' => array(0 => array('mul' => 0.48949999999999999)), 'symbol' => 'livre'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.45359237000000002), 1 => array('div' => 16)), 'symbol' => 'oz'), 'POUND' => array('convert' => array(0 => array('mul' => 0.45359237000000002)), 'symbol' => 'lb'))), 'Pressure' => array('standard' => 'BAR', 'units' => array('BAR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Bar'), 'PASCAL' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'Pa'), 'HECTOPASCAL' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'hPa'), 'MILLIBAR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mBar'), 'ATM' => array('convert' => array(0 => array('mul' => 0.98692299999999999)), 'symbol' => 'atm'), 'PSI' => array('convert' => array(0 => array('mul' => 14.503769853730221)), 'symbol' => 'PSI'), 'TORR' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'Torr'), 'MMHG' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'mmHg'))), 'Energy' => array('standard' => 'JOULE', 'units' => array('JOULE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'J'), 'CALORIE' => array('convert' => array(0 => array('mul' => 4.1840000000000002)), 'symbol' => 'cal'), 'KILOCALORIE' => array('convert' => array(0 => array('mul' => 4184)), 'symbol' => 'kcal'), 'KILOJOULE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kJ'))), 'CaseBox' => array('standard' => 'PIECE', 'units' => array('PIECE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Pc'), 'DOZEN' => array('convert' => array(0 => array('mul' => 12)), 'symbol' => 'Dz'))))));
    }
    protected function getPimCatalog_Validator_Constraint_VariantGroupAxisService()
    {
        return $this->services['pim_catalog.validator.constraint.variant_group_axis'] = new \Pim\Component\Catalog\Validator\Constraints\VariantGroupAxisValidator();
    }
    protected function getPimCatalog_Validator_Constraint_VariantGroupValuesService()
    {
        return $this->services['pim_catalog.validator.constraint.variant_group_values'] = new \Pim\Component\Catalog\Validator\Constraints\VariantGroupValuesValidator($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimCatalog_Validator_ProductService()
    {
        $a = new \Pim\Component\Catalog\Validator\Mapping\DelegatingClassMetadataFactory();
        $a->addMetadataFactory(new \Pim\Component\Catalog\Validator\Mapping\ProductValueMetadataFactory($this->get('pim_catalog.validator.constraint_guesser.chained_attribute')));
        $a->addMetadataFactory($this->get('validator'));
        return $this->services['pim_catalog.validator.product'] = new \Symfony\Component\Validator\Validator\RecursiveValidator(new \Symfony\Component\Validator\Context\ExecutionContextFactory($this->get('translator.default'), 'validators'), $a, $this->get('validator.validator_factory'), array());
    }
    protected function getPimCatalog_Validator_UniqueValueSetService()
    {
        return $this->services['pim_catalog.validator.unique_value_set'] = new \Pim\Component\Catalog\Validator\UniqueValuesSet();
    }
    protected function getPimCatalog_VersionProviderService()
    {
        return $this->services['pim_catalog.version_provider'] = new \Pim\Bundle\CatalogBundle\VersionProvider('Pim\\Bundle\\CatalogBundle\\Version');
    }
    protected function getPimComment_Builder_CommentService()
    {
        return $this->services['pim_comment.builder.comment'] = new \Pim\Bundle\CommentBundle\Builder\CommentBuilder('Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimComment_Controller_CommentService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_comment.controller.comment', 'request');
        }
        return $this->services['pim_comment.controller.comment'] = $this->scopedServices['request']['pim_comment.controller.comment'] = new \Pim\Bundle\CommentBundle\Controller\CommentController($this->get('security.token_storage'), $this->get('akeneo_storage_utils.doctrine.smart_manager_registry'), $this->get('pim_comment.remover.comment'), 'Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimComment_Form_AttributeGroupService()
    {
        return $this->services['pim_comment.form.attribute_group'] = $this->get('form.factory')->createNamed('pim_comment_comment_form', 'pim_comment_comment');
    }
    protected function getPimComment_Form_Type_CommentService()
    {
        return $this->services['pim_comment.form.type.comment'] = new \Pim\Bundle\CommentBundle\Form\Type\CommentType($this->get('pim_comment.repository.comment'), $this->get('translator'), 'Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimComment_Normalizer_Standard_CommentService()
    {
        return $this->services['pim_comment.normalizer.standard.comment'] = new \Pim\Bundle\CommentBundle\Normalizer\Standard\CommentNormalizer();
    }
    protected function getPimComment_Remover_CommentService()
    {
        return $this->services['pim_comment.remover.comment'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimComment_Repository_CommentService()
    {
        return $this->services['pim_comment.repository.comment'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimComment_Saver_CommentService()
    {
        return $this->services['pim_comment.saver.comment'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\CommentBundle\\Entity\\Comment');
    }
    protected function getPimConnector_Analyzer_ProductService()
    {
        return $this->services['pim_connector.analyzer.product'] = new \Pim\Component\Connector\Analyzer\ProductAnalyzer();
    }
    protected function getPimConnector_Archiver_ArchivableFileWriterArchiverService()
    {
        return $this->services['pim_connector.archiver.archivable_file_writer_archiver'] = new \Pim\Component\Connector\Archiver\ArchivableFileWriterArchiver($this->get('pim_connector.factory.zip_filesystem'), $this->get('oneup_flysystem.archivist_filesystem'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimConnector_Archiver_FileReaderArchiverService()
    {
        return $this->services['pim_connector.archiver.file_reader_archiver'] = new \Pim\Component\Connector\Archiver\FileReaderArchiver($this->get('oneup_flysystem.archivist_filesystem'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimConnector_Archiver_FileWriterArchiverService()
    {
        return $this->services['pim_connector.archiver.file_writer_archiver'] = new \Pim\Component\Connector\Archiver\FileWriterArchiver($this->get('oneup_flysystem.archivist_filesystem'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimConnector_Archiver_InvalidItemCsvWriterService()
    {
        return $this->services['pim_connector.archiver.invalid_item_csv_writer'] = new \Pim\Component\Connector\Archiver\CsvInvalidItemWriter($this->get('pim_connector.event_listener.invalid_items_collector'), $this->get('pim_connector.writer.file.invalid_items_csv'), $this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('oneup_flysystem.archivist_filesystem'), $this->get('pim_connector.job.job_parameters.default_values_provider.product_csv_export'), 'csv');
    }
    protected function getPimConnector_Archiver_InvalidItemXlsxWriterService()
    {
        return $this->services['pim_connector.archiver.invalid_item_xlsx_writer'] = new \Pim\Component\Connector\Archiver\XlsxInvalidItemWriter($this->get('pim_connector.event_listener.invalid_items_collector'), $this->get('pim_connector.writer.file.invalid_items_xlsx'), $this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('oneup_flysystem.archivist_filesystem'), $this->get('pim_connector.job.job_parameters.default_values_provider.product_xslx_export'), 'xlsx');
    }
    protected function getPimConnector_ArrayConverter_DummyService()
    {
        return $this->services['pim_connector.array_converter.dummy'] = new \Pim\Component\Connector\ArrayConverter\DummyConverter($this->get('pim_connector.array_convertor.checker.fields_requirement'), array(), array());
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_AssociationTypeService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.association_type'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\AssociationType($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_AttributeService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.attribute'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Attribute($this->get('pim_connector.array_convertor.checker.fields_requirement'), array(0 => 'localizable', 1 => 'useable_as_grid_filter', 2 => 'unique', 3 => 'required', 4 => 'scopable', 5 => 'wysiwyg_enabled', 6 => 'decimals_allowed', 7 => 'negative_allowed'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_AttributeGroupService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.attribute_group'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\AttributeGroup($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_AttributeOptionService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.attribute_option'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\AttributeOption($this->get('pim_catalog.repository.locale'), $this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_CategoryService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.category'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Category($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_ChannelService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.channel'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Channel($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_CurrencyService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.currency'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Currency($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_FamilyService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.family'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Family($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_GroupService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.group'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Group($this->get('pim_catalog.repository.locale'), $this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_GroupTypeService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.group_type'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\GroupType($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_LocaleService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.locale'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Locale($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_ProductService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product($this->get('pim_connector.array_converter.flat_to_standard.product.association_columns_resolver'), $this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), $this->get('pim_connector.array_converter.flat_to_standard.product.field_converter'), $this->get('pim_connector.array_converter.flat_to_standard.product.columns_merger'), $this->get('pim_connector.array_converter.flat_to_standard.product.columns_mapper'), $this->get('pim_connector.array_convertor.checker.fields_requirement'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.array_converter.flat_to_standard.product_value'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_AssociationColumnsResolverService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.association_columns_resolver'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\AssociationColumnsResolver($this->get('pim_catalog.repository.association_type'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_AttributeColumnInfoExtractorService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.attribute_column_info_extractor'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\AttributeColumnInfoExtractor($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.locale'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_AttributeColumnsResolverService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\AttributeColumnsResolver($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.currency'), $this->get('pim_catalog.resolver.attribute_values'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ColumnsMapperService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.columns_mapper'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ColumnsMapper();
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ColumnsMergerService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.columns_merger'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ColumnsMerger($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_column_info_extractor'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_FieldConverterService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.field_converter'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\FieldConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), $this->get('pim_connector.array_converter.flat_to_standard.product.association_columns_resolver'), $this->get('pim_catalog.repository.group_type'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_FieldSplitterService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.field_splitter'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\FieldSplitter();
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_AbstractService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.abstract'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\AbstractValueConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_BooleanService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.boolean'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\BooleanConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_boolean'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_DateService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.date'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\DateConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_date'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MediaService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.media'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\MediaConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_image', 1 => 'pim_catalog_file'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MetricService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.metric'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\MetricConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_metric'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_MultiselectService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.multiselect'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\MultiSelectConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_NumberService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.number'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\NumberConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_number'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_PriceService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.price'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\PriceConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_RegistryService()
    {
        $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.registry'] = $instance = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\ValueConverterRegistry();
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.price'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.metric'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.multiselect'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.simpleselect'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.text'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.boolean'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.media'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.number'));
        $instance->register($this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.date'));
        return $instance;
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_SimpleselectService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.simpleselect'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\SimpleSelectConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_simpleselect', 1 => 'pim_reference_data_simpleselect'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_Product_ValueConverter_TextService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product.value_converter.text'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\Product\ValueConverter\TextConverter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'pim_catalog_identifier', 1 => 'pim_catalog_text', 2 => 'pim_catalog_textarea'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_ProductAssociationService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product_association'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\ProductAssociation($this->get('pim_connector.array_converter.flat_to_standard.product'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_ProductDelocalizedService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product_delocalized'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\ProductDelocalized($this->get('pim_connector.array_converter.flat_to_standard.product'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_ProductValueService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.product_value'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\ProductValue($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_column_info_extractor'), $this->get('pim_connector.array_converter.flat_to_standard.product.value_converter.registry'), $this->get('pim_connector.array_converter.flat_to_standard.product.columns_merger'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_UserService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.user'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\User($this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_UserGroupService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.user_group'] = new \Pim\Component\Connector\ArrayConverter\DummyConverter($this->get('pim_connector.array_convertor.checker.fields_requirement'), array(0 => 'name'), array(0 => 'name'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_UserRoleService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.user_role'] = new \Pim\Component\Connector\ArrayConverter\DummyConverter($this->get('pim_connector.array_convertor.checker.fields_requirement'), array(0 => 'role', 1 => 'label'), array(0 => 'role', 1 => 'label'));
    }
    protected function getPimConnector_ArrayConverter_FlatToStandard_VariantGroupService()
    {
        return $this->services['pim_connector.array_converter.flat_to_standard.variant_group'] = new \Pim\Component\Connector\ArrayConverter\FlatToStandard\VariantGroup($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.array_converter.flat_to_standard.product_value'), $this->get('pim_connector.array_convertor.checker.fields_requirement'));
    }
    protected function getPimConnector_ArrayConverter_Standard_JobInstanceService()
    {
        return $this->services['pim_connector.array_converter.standard.job_instance'] = new \Pim\Component\Connector\ArrayConverter\DummyConverter($this->get('pim_connector.array_convertor.checker.fields_requirement'), array(0 => 'code', 1 => 'type', 2 => 'connector', 3 => 'label', 4 => 'alias'), array(0 => 'code', 1 => 'type', 2 => 'connector', 3 => 'label'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_AssociationTypeService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.association_type'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\AssociationType();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_AttributeService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.attribute'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Attribute(array(0 => 'localizable', 1 => 'useable_as_grid_filter', 2 => 'unique', 3 => 'required', 4 => 'scopable', 5 => 'wysiwyg_enabled', 6 => 'decimals_allowed', 7 => 'negative_allowed'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_AttributeGroupService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.attribute_group'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\AttributeGroup();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_AttributeOptionService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.attribute_option'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\AttributeOption();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_CategoryService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.category'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Category();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_ChannelService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.channel'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Channel();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_CurrencyService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.currency'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Currency();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_FamilyService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.family'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Family();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_GroupService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.group'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Group();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_GroupTypeService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.group_type'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\GroupType();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_LocaleService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.locale'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Locale();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_ProductService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product($this->get('pim_connector.array_converter.standard_to_flat.product.product_value_converter'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ProductValueConverterService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.product_value_converter'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ProductValueConverter($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.registry'), $this->get('pim_catalog.repository.cached_attribute'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_BooleanService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.boolean'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\BooleanConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_boolean'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_DateService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.date'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\DateConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_date'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MediaService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.media'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MediaConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_image', 1 => 'pim_catalog_file'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MetricService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.metric'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MetricConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_metric'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_MultiselectService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.multiselect'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MultiSelectConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_PriceService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.price'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\PriceConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_price_collection'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_RegistryService()
    {
        $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.registry'] = $instance = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\ValueConverterRegistry();
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.price'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.metric'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.multiselect'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.simpleselect'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.text'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.boolean'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.media'), 100);
        $instance->register($this->get('pim_connector.array_converter.standard_to_flat.product.value_converter.date'), 100);
        return $instance;
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_SimpleselectService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.simpleselect'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\SimpleSelectConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_simpleselect', 1 => 'pim_reference_data_simpleselect'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_Product_ValueConverter_TextService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product.value_converter.text'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\TextConverter($this->get('pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver'), array(0 => 'pim_catalog_identifier', 1 => 'pim_catalog_text', 2 => 'pim_catalog_textarea', 3 => 'pim_catalog_number'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_ProductLocalizedService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.product_localized'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\ProductLocalized($this->get('pim_connector.array_converter.standard_to_flat.product'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_UserService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.user'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\User();
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_VariantGroupService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.variant_group'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\VariantGroup($this->get('pim_connector.array_converter.standard_to_flat.product.product_value_converter'));
    }
    protected function getPimConnector_ArrayConverter_StandardToFlat_VariantGroupLocalizedService()
    {
        return $this->services['pim_connector.array_converter.standard_to_flat.variant_group_localized'] = new \Pim\Component\Connector\ArrayConverter\StandardToFlat\ProductLocalized($this->get('pim_connector.array_converter.standard_to_flat.variant_group'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimConnector_ArrayConvertor_Checker_FieldsRequirementService()
    {
        return $this->services['pim_connector.array_convertor.checker.fields_requirement'] = new \Pim\Component\Connector\ArrayConverter\FieldsRequirementChecker();
    }
    protected function getPimConnector_EventListener_ArchivistService()
    {
        $this->services['pim_connector.event_listener.archivist'] = $instance = new \Pim\Bundle\ConnectorBundle\EventListener\JobExecutionArchivist();
        $instance->registerArchiver($this->get('pim_connector.archiver.file_reader_archiver'));
        $instance->registerArchiver($this->get('pim_connector.archiver.file_writer_archiver'));
        $instance->registerArchiver($this->get('pim_connector.archiver.archivable_file_writer_archiver'));
        $instance->registerArchiver($this->get('pim_connector.archiver.invalid_item_csv_writer'));
        $instance->registerArchiver($this->get('pim_connector.archiver.invalid_item_xlsx_writer'));
        return $instance;
    }
    protected function getPimConnector_EventListener_InvalidItemsCollectorService()
    {
        return $this->services['pim_connector.event_listener.invalid_items_collector'] = new \Pim\Bundle\ConnectorBundle\EventListener\InvalidItemsCollector();
    }
    protected function getPimConnector_Factory_FlatItemBufferService()
    {
        return $this->services['pim_connector.factory.flat_item_buffer'] = new \Akeneo\Component\Buffer\BufferFactory('Pim\\Component\\Connector\\Writer\\File\\FlatItemBuffer');
    }
    protected function getPimConnector_Factory_JobInstanceService()
    {
        return $this->services['pim_connector.factory.job_instance'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Component\\Batch\\Model\\JobInstance');
    }
    protected function getPimConnector_Factory_ZipFilesystemService()
    {
        return $this->services['pim_connector.factory.zip_filesystem'] = new \Pim\Component\Connector\Archiver\ZipFilesystemFactory();
    }
    protected function getPimConnector_Job_CsvAssociationTypeExportService()
    {
        return $this->services['pim_connector.job.csv_association_type_export'] = new \Akeneo\Component\Batch\Job\Job('csv_association_type_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_association_type.export')));
    }
    protected function getPimConnector_Job_CsvAssociationTypeImportService()
    {
        return $this->services['pim_connector.job.csv_association_type_import'] = new \Akeneo\Component\Batch\Job\Job('csv_association_type_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_association_type.import')));
    }
    protected function getPimConnector_Job_CsvAttributeExportService()
    {
        return $this->services['pim_connector.job.csv_attribute_export'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_attribute.export')));
    }
    protected function getPimConnector_Job_CsvAttributeGroupExportService()
    {
        return $this->services['pim_connector.job.csv_attribute_group_export'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_attribute_group_export.export')));
    }
    protected function getPimConnector_Job_CsvAttributeGroupImportService()
    {
        return $this->services['pim_connector.job.csv_attribute_group_import'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_attribute_group_import.import')));
    }
    protected function getPimConnector_Job_CsvAttributeImportService()
    {
        return $this->services['pim_connector.job.csv_attribute_import'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_attribute.import')));
    }
    protected function getPimConnector_Job_CsvAttributeOptionExportService()
    {
        return $this->services['pim_connector.job.csv_attribute_option_export'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_option_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_attribute_option.export')));
    }
    protected function getPimConnector_Job_CsvAttributeOptionImportService()
    {
        return $this->services['pim_connector.job.csv_attribute_option_import'] = new \Akeneo\Component\Batch\Job\Job('csv_attribute_option_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_attribute_option.import')));
    }
    protected function getPimConnector_Job_CsvCategoryExportService()
    {
        return $this->services['pim_connector.job.csv_category_export'] = new \Akeneo\Component\Batch\Job\Job('csv_category_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_category.export')));
    }
    protected function getPimConnector_Job_CsvCategoryImportService()
    {
        return $this->services['pim_connector.job.csv_category_import'] = new \Akeneo\Component\Batch\Job\Job('csv_category_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_category.import')));
    }
    protected function getPimConnector_Job_CsvChannelExportService()
    {
        return $this->services['pim_connector.job.csv_channel_export'] = new \Akeneo\Component\Batch\Job\Job('csv_channel_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_channel_export.export')));
    }
    protected function getPimConnector_Job_CsvChannelImportService()
    {
        return $this->services['pim_connector.job.csv_channel_import'] = new \Akeneo\Component\Batch\Job\Job('csv_channel_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_channel_import.import')));
    }
    protected function getPimConnector_Job_CsvCurrencyExportService()
    {
        return $this->services['pim_connector.job.csv_currency_export'] = new \Akeneo\Component\Batch\Job\Job('csv_currency_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_currency_export.export')));
    }
    protected function getPimConnector_Job_CsvCurrencyImportService()
    {
        return $this->services['pim_connector.job.csv_currency_import'] = new \Akeneo\Component\Batch\Job\Job('csv_currency_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_currency_import.import')));
    }
    protected function getPimConnector_Job_CsvFamilyExportService()
    {
        return $this->services['pim_connector.job.csv_family_export'] = new \Akeneo\Component\Batch\Job\Job('csv_family_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_family.export')));
    }
    protected function getPimConnector_Job_CsvFamilyImportService()
    {
        return $this->services['pim_connector.job.csv_family_import'] = new \Akeneo\Component\Batch\Job\Job('csv_family_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_family.import')));
    }
    protected function getPimConnector_Job_CsvGroupExportService()
    {
        return $this->services['pim_connector.job.csv_group_export'] = new \Akeneo\Component\Batch\Job\Job('csv_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_group.export')));
    }
    protected function getPimConnector_Job_CsvGroupImportService()
    {
        return $this->services['pim_connector.job.csv_group_import'] = new \Akeneo\Component\Batch\Job\Job('csv_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_group.import')));
    }
    protected function getPimConnector_Job_CsvGroupTypeExportService()
    {
        return $this->services['pim_connector.job.csv_group_type_export'] = new \Akeneo\Component\Batch\Job\Job('csv_group_type_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_group_type_export.export')));
    }
    protected function getPimConnector_Job_CsvGroupTypeImportService()
    {
        return $this->services['pim_connector.job.csv_group_type_import'] = new \Akeneo\Component\Batch\Job\Job('csv_group_type_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_group_type_import.import')));
    }
    protected function getPimConnector_Job_CsvLocaleExportService()
    {
        return $this->services['pim_connector.job.csv_locale_export'] = new \Akeneo\Component\Batch\Job\Job('csv_locale_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_locale_export.export')));
    }
    protected function getPimConnector_Job_CsvLocaleImportService()
    {
        return $this->services['pim_connector.job.csv_locale_import'] = new \Akeneo\Component\Batch\Job\Job('csv_locale_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_locale_import.import')));
    }
    protected function getPimConnector_Job_CsvProductExportService()
    {
        return $this->services['pim_connector.job.csv_product_export'] = new \Akeneo\Component\Batch\Job\Job('csv_product_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_product.export')));
    }
    protected function getPimConnector_Job_CsvProductImportService()
    {
        return $this->services['pim_connector.job.csv_product_import'] = new \Akeneo\Component\Batch\Job\Job('csv_product_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_product.import'), 2 => $this->get('pim_connector.step.csv_product.import_associations')));
    }
    protected function getPimConnector_Job_CsvVariantGroupExportService()
    {
        return $this->services['pim_connector.job.csv_variant_group_export'] = new \Akeneo\Component\Batch\Job\Job('csv_variant_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.csv_variant_group.export')));
    }
    protected function getPimConnector_Job_CsvVariantGroupImportService()
    {
        return $this->services['pim_connector.job.csv_variant_group_import'] = new \Akeneo\Component\Batch\Job\Job('csv_variant_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_variant_group.import')));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.product_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductCsvExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export'), array(0 => 'csv_product_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.product_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'), array(0 => 'csv_product_import'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductXlsxExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export'), array(0 => 'xlsx_product_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import'), array(0 => 'xlsx_product_import'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleCsvExport(array(0 => 'csv_attribute_export', 1 => 'csv_family_export', 2 => 'csv_group_export', 3 => 'csv_association_type_export', 4 => 'csv_attribute_option_export', 5 => 'csv_category_export', 6 => 'csv_channel_export', 7 => 'csv_locale_export', 8 => 'csv_attribute_group_export', 9 => 'csv_currency_export', 10 => 'csv_group_type_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleCsvImport(array(0 => 'csv_attribute_import', 1 => 'csv_family_import', 2 => 'csv_group_import', 3 => 'csv_association_type_import', 4 => 'csv_attribute_option_import', 5 => 'csv_category_import', 6 => 'csv_channel_import', 7 => 'csv_locale_import', 8 => 'csv_attribute_group_import', 9 => 'csv_currency_import', 10 => 'csv_group_type_import'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleXlsxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleXlsxExport(array(0 => 'xlsx_attribute_export', 1 => 'xlsx_family_export', 2 => 'xlsx_group_export', 3 => 'xlsx_association_type_export', 4 => 'xlsx_attribute_option_export', 5 => 'xlsx_category_export', 6 => 'xlsx_channel_export', 7 => 'xlsx_locale_export', 8 => 'xlsx_attribute_group_export', 9 => 'xlsx_currency_export', 10 => 'xlsx_group_type_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_SimpleXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleXlsxImport(array(0 => 'xlsx_attribute_import', 1 => 'xlsx_family_import', 2 => 'xlsx_group_import', 3 => 'xlsx_association_type_import', 4 => 'xlsx_attribute_option_import', 5 => 'xlsx_category_import', 6 => 'xlsx_channel_import', 7 => 'xlsx_locale_import', 8 => 'xlsx_attribute_group_import', 9 => 'xlsx_currency_import', 10 => 'xlsx_group_type_import'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\VariantGroupCsvExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export'), array(0 => 'csv_variant_group_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\VariantGroupCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'), array(0 => 'csv_variant_group_import'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupXlsxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_export'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\VariantGroupXlsxExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export'), array(0 => 'xlsx_variant_group_export'));
    }
    protected function getPimConnector_Job_JobParameters_ConstraintCollectionProvider_VariantGroupXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\VariantGroupCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import'), array(0 => 'xlsx_variant_group_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.product_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\ProductCsvExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_export'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.locale'), array(0 => 'csv_product_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.product_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_import'), array(0 => 'csv_product_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.product_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import'), array(0 => 'xlsx_product_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_ProductXslxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.product_xslx_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\ProductXlsxExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.locale'), array(0 => 'xlsx_product_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.simple_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleCsvExport(array(0 => 'csv_attribute_export', 1 => 'csv_family_export', 2 => 'csv_group_export', 3 => 'csv_association_type_export', 4 => 'csv_attribute_option_export', 5 => 'csv_category_export', 6 => 'csv_channel_export', 7 => 'csv_locale_export', 8 => 'csv_attribute_group_export', 9 => 'csv_currency_export', 10 => 'csv_group_type_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.simple_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleCsvImport(array(0 => 'csv_attribute_import', 1 => 'csv_family_import', 2 => 'csv_group_import', 3 => 'csv_association_type_import', 4 => 'csv_attribute_option_import', 5 => 'csv_category_import', 6 => 'csv_channel_import', 7 => 'csv_locale_import', 8 => 'csv_attribute_group_import', 9 => 'csv_currency_import', 10 => 'csv_group_type_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleXlsxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleXlsxExport(array(0 => 'xlsx_attribute_export', 1 => 'xlsx_family_export', 2 => 'xlsx_group_export', 3 => 'xlsx_association_type_export', 4 => 'xlsx_attribute_option_export', 5 => 'xlsx_category_export', 6 => 'xlsx_channel_export', 7 => 'xlsx_locale_export', 8 => 'xlsx_attribute_group_export', 9 => 'xlsx_currency_export', 10 => 'xlsx_group_type_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_SimpleXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleXlsxImport(array(0 => 'xlsx_attribute_import', 1 => 'xlsx_family_import', 2 => 'xlsx_group_import', 3 => 'xlsx_association_type_import', 4 => 'xlsx_attribute_option_import', 5 => 'xlsx_category_import', 6 => 'xlsx_channel_import', 7 => 'xlsx_locale_import', 8 => 'xlsx_attribute_group_import', 9 => 'xlsx_currency_import', 10 => 'xlsx_group_type_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupCsvExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.variant_group_csv_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\VariantGroupCsvExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_export'), array(0 => 'csv_variant_group_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupCsvImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.variant_group_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\VariantGroupCsvImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_import'), array(0 => 'csv_variant_group_import'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupXlsxExportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_export'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\VariantGroupXlsxExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export'), array(0 => 'xlsx_variant_group_export'));
    }
    protected function getPimConnector_Job_JobParameters_DefaultValuesProvider_VariantGroupXlsxImportService()
    {
        return $this->services['pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\VariantGroupXlsxImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import'), array(0 => 'xlsx_variant_group_import'));
    }
    protected function getPimConnector_Job_XlsxAssociationTypeExportService()
    {
        return $this->services['pim_connector.job.xlsx_association_type_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_association_type_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_association_type.export')));
    }
    protected function getPimConnector_Job_XlsxAssociationTypeImportService()
    {
        return $this->services['pim_connector.job.xlsx_association_type_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_association_type_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_association_type.import')));
    }
    protected function getPimConnector_Job_XlsxAttributeExportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_attribute.export')));
    }
    protected function getPimConnector_Job_XlsxAttributeGroupExportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_group_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_attribute_group_export.export')));
    }
    protected function getPimConnector_Job_XlsxAttributeGroupImportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_group_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_attribute_group_import.import')));
    }
    protected function getPimConnector_Job_XlsxAttributeImportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_attribute.import')));
    }
    protected function getPimConnector_Job_XlsxAttributeOptionExportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_option_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_option_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_attribute_option.export')));
    }
    protected function getPimConnector_Job_XlsxAttributeOptionImportService()
    {
        return $this->services['pim_connector.job.xlsx_attribute_option_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_attribute_option_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_attribute_option.import')));
    }
    protected function getPimConnector_Job_XlsxCategoryExportService()
    {
        return $this->services['pim_connector.job.xlsx_category_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_category_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_category.export')));
    }
    protected function getPimConnector_Job_XlsxCategoryImportService()
    {
        return $this->services['pim_connector.job.xlsx_category_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_category_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_category.import')));
    }
    protected function getPimConnector_Job_XlsxChannelExportService()
    {
        return $this->services['pim_connector.job.xlsx_channel_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_channel_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_channel_export.export')));
    }
    protected function getPimConnector_Job_XlsxChannelImportService()
    {
        return $this->services['pim_connector.job.xlsx_channel_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_channel_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_channel_import.import')));
    }
    protected function getPimConnector_Job_XlsxCurrencyExportService()
    {
        return $this->services['pim_connector.job.xlsx_currency_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_currency_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_currency_export.export')));
    }
    protected function getPimConnector_Job_XlsxCurrencyImportService()
    {
        return $this->services['pim_connector.job.xlsx_currency_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_currency_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_currency_import.import')));
    }
    protected function getPimConnector_Job_XlsxFamilyImportService()
    {
        return $this->services['pim_connector.job.xlsx_family_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_family_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_family.import')));
    }
    protected function getPimConnector_Job_XlsxGroupExportService()
    {
        return $this->services['pim_connector.job.xlsx_group_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_group.export')));
    }
    protected function getPimConnector_Job_XlsxGroupImportService()
    {
        return $this->services['pim_connector.job.xlsx_group_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_group.import')));
    }
    protected function getPimConnector_Job_XlsxGroupTypeExportService()
    {
        return $this->services['pim_connector.job.xlsx_group_type_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_group_type_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_group_type_export.export')));
    }
    protected function getPimConnector_Job_XlsxGroupTypeImportService()
    {
        return $this->services['pim_connector.job.xlsx_group_type_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_group_type_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_group_type_import.import')));
    }
    protected function getPimConnector_Job_XlsxLocaleExportService()
    {
        return $this->services['pim_connector.job.xlsx_locale_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_locale_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_locale_export.export')));
    }
    protected function getPimConnector_Job_XlsxLocaleImportService()
    {
        return $this->services['pim_connector.job.xlsx_locale_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_locale_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_locale_import.import')));
    }
    protected function getPimConnector_Job_XlsxProductExportService()
    {
        return $this->services['pim_connector.job.xlsx_product_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_product_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_product.export')));
    }
    protected function getPimConnector_Job_XlsxProductImportService()
    {
        return $this->services['pim_connector.job.xlsx_product_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_product_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_product.import'), 2 => $this->get('pim_connector.step.xlsx_product.import_associations')));
    }
    protected function getPimConnector_Job_XlsxVariantGroupExportService()
    {
        return $this->services['pim_connector.job.xlsx_variant_group_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_variant_group_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_variant_group.export')));
    }
    protected function getPimConnector_Job_XlsxVariantGroupImportService()
    {
        return $this->services['pim_connector.job.xlsx_variant_group_import'] = new \Akeneo\Component\Batch\Job\Job('xlsx_variant_group_import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.xlsx_variant_group.import')));
    }
    protected function getPimConnector_JobName_XlsxFamilyExportService()
    {
        return $this->services['pim_connector.job_name.xlsx_family_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_family_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.xlsx_family.export')));
    }
    protected function getPimConnector_Processor_BulkMediaFetcherService()
    {
        return $this->services['pim_connector.processor.bulk_media_fetcher'] = new \Pim\Component\Connector\Processor\BulkMediaFetcher($this->get('akeneo_file_storage.file_storage.file.output_file_fetcher'), $this->get('akeneo_file_storage.file_storage.filesystem_provider'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Processor_Denormalization_AssociationTypeService()
    {
        return $this->services['pim_connector.processor.denormalization.association_type'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.association_type'), $this->get('pim_catalog.factory.association_type'), $this->get('pim_catalog.updater.association_type'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_AttributeService()
    {
        return $this->services['pim_connector.processor.denormalization.attribute'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.factory.attribute'), $this->get('pim_catalog.updater.attribute'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_AttributeGroupService()
    {
        return $this->services['pim_connector.processor.denormalization.attribute_group'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.attribute_group'), $this->get('pim_catalog.factory.attribute_group'), $this->get('pim_catalog.updater.attribute_group'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_AttributeOptionService()
    {
        return $this->services['pim_connector.processor.denormalization.attribute_option'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.attribute_option'), $this->get('pim_catalog.factory.attribute_option'), $this->get('pim_catalog.updater.attribute_option'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_CategoryService()
    {
        return $this->services['pim_connector.processor.denormalization.category'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.category'), $this->get('pim_catalog.factory.category'), $this->get('pim_catalog.updater.category_translatable'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_ChannelService()
    {
        return $this->services['pim_connector.processor.denormalization.channel'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.factory.channel'), $this->get('pim_catalog.updater.channel'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_CurrencyService()
    {
        return $this->services['pim_connector.processor.denormalization.currency'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.currency'), $this->get('pim_catalog.factory.currency'), $this->get('pim_catalog.updater.currency'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_FamilyService()
    {
        return $this->services['pim_connector.processor.denormalization.family'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.family'), $this->get('pim_catalog.factory.family'), $this->get('pim_catalog.updater.family'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_GroupService()
    {
        return $this->services['pim_connector.processor.denormalization.group'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.group'), $this->get('pim_catalog.factory.group'), $this->get('pim_catalog.updater.group'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_GroupTypeService()
    {
        return $this->services['pim_connector.processor.denormalization.group_type'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.group_type'), $this->get('pim_catalog.factory.group_type'), $this->get('pim_catalog.updater.group_type'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_JobInstanceService()
    {
        return $this->services['pim_connector.processor.denormalization.job_instance'] = new \Pim\Component\Connector\Processor\Denormalization\JobInstanceProcessor($this->get('pim_import_export.repository.job_instance'), $this->get('pim_connector.factory.job_instance'), $this->get('akeneo_batch.updater.job_instance'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('akeneo_batch.job.job_parameters_validator'), $this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimConnector_Processor_Denormalization_LocaleService()
    {
        return $this->services['pim_connector.processor.denormalization.locale'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.factory.locale'), $this->get('pim_catalog.updater.locale'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_ProductService()
    {
        return $this->services['pim_connector.processor.denormalization.product'] = new \Pim\Component\Connector\Processor\Denormalization\ProductProcessor($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.builder.product'), $this->get('pim_catalog.updater.product'), $this->get('pim_catalog.validator.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_catalog.comparator.filter.product'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimConnector_Processor_Denormalization_ProductAssociationService()
    {
        return $this->services['pim_connector.processor.denormalization.product_association'] = new \Pim\Component\Connector\Processor\Denormalization\ProductAssociationProcessor($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.updater.product'), $this->get('pim_catalog.validator.product'), $this->get('pim_catalog.comparator.filter.product_association'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_UserService()
    {
        return $this->services['pim_connector.processor.denormalization.user'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_user.repository.user'), $this->get('pim_user.factory.user'), $this->get('pim_user.updater.user'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_UserGroupService()
    {
        return $this->services['pim_connector.processor.denormalization.user_group'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_user.repository.group'), $this->get('pim_user.factory.group'), $this->get('pim_user.updater.group'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_UserRoleService()
    {
        return $this->services['pim_connector.processor.denormalization.user_role'] = new \Pim\Component\Connector\Processor\Denormalization\Processor($this->get('pim_user.repository.role'), $this->get('pim_user.factory.role'), $this->get('pim_user.updater.role'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Denormalization_VariantGroupService()
    {
        return $this->services['pim_connector.processor.denormalization.variant_group'] = new \Pim\Component\Connector\Processor\Denormalization\VariantGroupProcessor($this->get('pim_catalog.repository.group'), $this->get('pim_catalog.factory.group'), $this->get('pim_catalog.updater.variant_group'), $this->get('pim_catalog.validator.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_DummyItemService()
    {
        return $this->services['pim_connector.processor.dummy_item'] = new \Pim\Component\Connector\Processor\DummyItemProcessor();
    }
    protected function getPimConnector_Processor_Normalization_AssociationTypeService()
    {
        return $this->services['pim_connector.processor.normalization.association_type'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.association_type'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_AttributeService()
    {
        return $this->services['pim_connector.processor.normalization.attribute'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.attribute'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_AttributeGroupService()
    {
        return $this->services['pim_connector.processor.normalization.attribute_group'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.attribute_group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_AttributeOptionService()
    {
        return $this->services['pim_connector.processor.normalization.attribute_option'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.attribute_option'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_CategoryService()
    {
        return $this->services['pim_connector.processor.normalization.category'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.category'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_ChannelService()
    {
        return $this->services['pim_connector.processor.normalization.channel'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.channel'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_CurrencyService()
    {
        return $this->services['pim_connector.processor.normalization.currency'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.currency'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_FamilyService()
    {
        return $this->services['pim_connector.processor.normalization.family'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.family'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_GroupService()
    {
        return $this->services['pim_connector.processor.normalization.group'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_GroupTypeService()
    {
        return $this->services['pim_connector.processor.normalization.group_type'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.group_type'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_LocaleService()
    {
        return $this->services['pim_connector.processor.normalization.locale'] = new \Pim\Component\Connector\Processor\Normalization\Processor($this->get('pim_catalog.normalizer.standard.locale'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Processor_Normalization_ProductService()
    {
        return $this->services['pim_connector.processor.normalization.product'] = new \Pim\Component\Connector\Processor\Normalization\ProductProcessor($this->get('pim_catalog.normalizer.standard.product'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.builder.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_connector.processor.bulk_media_fetcher'));
    }
    protected function getPimConnector_Processor_Normalization_VariantGroupService()
    {
        return $this->services['pim_connector.processor.normalization.variant_group'] = new \Pim\Component\Connector\Processor\Normalization\VariantGroupProcessor($this->get('pim_catalog.normalizer.standard.variant_group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_connector.processor.bulk_media_fetcher'), $this->get('pim_catalog.updater.variant_group'));
    }
    protected function getPimConnector_Reader_Database_AssociationTypeService()
    {
        return $this->services['pim_connector.reader.database.association_type'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.association_type'));
    }
    protected function getPimConnector_Reader_Database_AttributeService()
    {
        return $this->services['pim_connector.reader.database.attribute'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimConnector_Reader_Database_AttributeGroupService()
    {
        return $this->services['pim_connector.reader.database.attribute_group'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.attribute_group'));
    }
    protected function getPimConnector_Reader_Database_AttributeOptionService()
    {
        return $this->services['pim_connector.reader.database.attribute_option'] = new \Pim\Component\Connector\Reader\Database\AttributeOptionReader($this->get('pim_catalog.repository.attribute_option'));
    }
    protected function getPimConnector_Reader_Database_CategoryService()
    {
        return $this->services['pim_connector.reader.database.category'] = new \Pim\Component\Connector\Reader\Database\CategoryReader($this->get('pim_catalog.repository.category'));
    }
    protected function getPimConnector_Reader_Database_ChannelService()
    {
        return $this->services['pim_connector.reader.database.channel'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimConnector_Reader_Database_CurrencyService()
    {
        return $this->services['pim_connector.reader.database.currency'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.currency'));
    }
    protected function getPimConnector_Reader_Database_FamilyService()
    {
        return $this->services['pim_connector.reader.database.family'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.family'));
    }
    protected function getPimConnector_Reader_Database_GroupService()
    {
        return $this->services['pim_connector.reader.database.group'] = new \Pim\Component\Connector\Reader\Database\GroupReader($this->get('pim_catalog.repository.group'));
    }
    protected function getPimConnector_Reader_Database_GroupTypeService()
    {
        return $this->services['pim_connector.reader.database.group_type'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.group_type'));
    }
    protected function getPimConnector_Reader_Database_LocaleService()
    {
        return $this->services['pim_connector.reader.database.locale'] = new \Pim\Component\Connector\Reader\Database\Reader($this->get('pim_catalog.repository.locale'));
    }
    protected function getPimConnector_Reader_Database_ProductService()
    {
        return $this->services['pim_connector.reader.database.product'] = new \Pim\Component\Connector\Reader\Database\ProductReader($this->get('pim_catalog.query.product_query_builder_factory'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.manager.completeness'), $this->get('pim_catalog.converter.metric'), true);
    }
    protected function getPimConnector_Reader_Database_VariantGroupService()
    {
        return $this->services['pim_connector.reader.database.variant_group'] = new \Pim\Component\Connector\Reader\Database\VariantGroupReader($this->get('pim_catalog.repository.group'));
    }
    protected function getPimConnector_Reader_DummyItemService()
    {
        return $this->services['pim_connector.reader.dummy_item'] = new \Pim\Component\Connector\Reader\DummyItemReader();
    }
    protected function getPimConnector_Reader_File_CsvAssociationService()
    {
        return $this->services['pim_connector.reader.file.csv_association'] = new \Pim\Component\Connector\Reader\File\Csv\ProductAssociationReader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.product_association'));
    }
    protected function getPimConnector_Reader_File_CsvAssociationTypeService()
    {
        return $this->services['pim_connector.reader.file.csv_association_type'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.association_type'));
    }
    protected function getPimConnector_Reader_File_CsvAttributeService()
    {
        return $this->services['pim_connector.reader.file.csv_attribute'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute'));
    }
    protected function getPimConnector_Reader_File_CsvAttributeGroupService()
    {
        return $this->services['pim_connector.reader.file.csv_attribute_group'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute_group'));
    }
    protected function getPimConnector_Reader_File_CsvAttributeOptionService()
    {
        return $this->services['pim_connector.reader.file.csv_attribute_option'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute_option'));
    }
    protected function getPimConnector_Reader_File_CsvCategoryService()
    {
        return $this->services['pim_connector.reader.file.csv_category'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.category'));
    }
    protected function getPimConnector_Reader_File_CsvChannelService()
    {
        return $this->services['pim_connector.reader.file.csv_channel'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.channel'));
    }
    protected function getPimConnector_Reader_File_CsvCurrencyService()
    {
        return $this->services['pim_connector.reader.file.csv_currency'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.currency'));
    }
    protected function getPimConnector_Reader_File_CsvFamilyService()
    {
        return $this->services['pim_connector.reader.file.csv_family'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.family'));
    }
    protected function getPimConnector_Reader_File_CsvGroupService()
    {
        return $this->services['pim_connector.reader.file.csv_group'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.group'));
    }
    protected function getPimConnector_Reader_File_CsvGroupTypeService()
    {
        return $this->services['pim_connector.reader.file.csv_group_type'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.group_type'));
    }
    protected function getPimConnector_Reader_File_CsvIteratorFactoryService()
    {
        return $this->services['pim_connector.reader.file.csv_iterator_factory'] = new \Pim\Component\Connector\Reader\File\FileIteratorFactory('Pim\\Component\\Connector\\Reader\\File\\FlatFileIterator', 'csv');
    }
    protected function getPimConnector_Reader_File_CsvLocaleService()
    {
        return $this->services['pim_connector.reader.file.csv_locale'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.locale'));
    }
    protected function getPimConnector_Reader_File_CsvProductService()
    {
        return $this->services['pim_connector.reader.file.csv_product'] = new \Pim\Component\Connector\Reader\File\Csv\ProductReader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.product_delocalized'), $this->get('pim_connector.reader.file.media_path_transformer'), array());
    }
    protected function getPimConnector_Reader_File_CsvUserService()
    {
        return $this->services['pim_connector.reader.file.csv_user'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.user'));
    }
    protected function getPimConnector_Reader_File_CsvUserGroupService()
    {
        return $this->services['pim_connector.reader.file.csv_user_group'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.user_group'));
    }
    protected function getPimConnector_Reader_File_CsvUserRoleService()
    {
        return $this->services['pim_connector.reader.file.csv_user_role'] = new \Pim\Component\Connector\Reader\File\Csv\Reader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.user_role'));
    }
    protected function getPimConnector_Reader_File_CsvVariantGroupService()
    {
        return $this->services['pim_connector.reader.file.csv_variant_group'] = new \Pim\Component\Connector\Reader\File\Csv\VariantGroupReader($this->get('pim_connector.reader.file.csv_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.variant_group'), $this->get('pim_connector.reader.file.media_path_transformer'));
    }
    protected function getPimConnector_Reader_File_MediaPathTransformerService()
    {
        return $this->services['pim_connector.reader.file.media_path_transformer'] = new \Pim\Component\Connector\Reader\File\MediaPathTransformer($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimConnector_Reader_File_XlsxService()
    {
        return $this->services['pim_connector.reader.file.xlsx'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.dummy'));
    }
    protected function getPimConnector_Reader_File_XlsxAssociationService()
    {
        return $this->services['pim_connector.reader.file.xlsx_association'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.product_association'));
    }
    protected function getPimConnector_Reader_File_XlsxAssociationTypeService()
    {
        return $this->services['pim_connector.reader.file.xlsx_association_type'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.association_type'));
    }
    protected function getPimConnector_Reader_File_XlsxAttributeService()
    {
        return $this->services['pim_connector.reader.file.xlsx_attribute'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute'));
    }
    protected function getPimConnector_Reader_File_XlsxAttributeGroupService()
    {
        return $this->services['pim_connector.reader.file.xlsx_attribute_group'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute_group'));
    }
    protected function getPimConnector_Reader_File_XlsxAttributeOptionService()
    {
        return $this->services['pim_connector.reader.file.xlsx_attribute_option'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.attribute_option'));
    }
    protected function getPimConnector_Reader_File_XlsxCategoryService()
    {
        return $this->services['pim_connector.reader.file.xlsx_category'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.category'));
    }
    protected function getPimConnector_Reader_File_XlsxChannelService()
    {
        return $this->services['pim_connector.reader.file.xlsx_channel'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.channel'));
    }
    protected function getPimConnector_Reader_File_XlsxCurrencyService()
    {
        return $this->services['pim_connector.reader.file.xlsx_currency'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.currency'));
    }
    protected function getPimConnector_Reader_File_XlsxFamilyService()
    {
        return $this->services['pim_connector.reader.file.xlsx_family'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.family'));
    }
    protected function getPimConnector_Reader_File_XlsxGroupService()
    {
        return $this->services['pim_connector.reader.file.xlsx_group'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.group'));
    }
    protected function getPimConnector_Reader_File_XlsxGroupTypeService()
    {
        return $this->services['pim_connector.reader.file.xlsx_group_type'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.group_type'));
    }
    protected function getPimConnector_Reader_File_XlsxIteratorFactoryService()
    {
        return $this->services['pim_connector.reader.file.xlsx_iterator_factory'] = new \Pim\Component\Connector\Reader\File\FileIteratorFactory('Pim\\Component\\Connector\\Reader\\File\\FlatFileIterator', 'xlsx');
    }
    protected function getPimConnector_Reader_File_XlsxLocaleService()
    {
        return $this->services['pim_connector.reader.file.xlsx_locale'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.locale'));
    }
    protected function getPimConnector_Reader_File_XlsxProductService()
    {
        return $this->services['pim_connector.reader.file.xlsx_product'] = new \Pim\Component\Connector\Reader\File\Xlsx\ProductReader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.product_delocalized'), $this->get('pim_connector.reader.file.media_path_transformer'), array());
    }
    protected function getPimConnector_Reader_File_XlsxVariantGroupService()
    {
        return $this->services['pim_connector.reader.file.xlsx_variant_group'] = new \Pim\Component\Connector\Reader\File\Xlsx\Reader($this->get('pim_connector.reader.file.xlsx_iterator_factory'), $this->get('pim_connector.array_converter.flat_to_standard.variant_group'));
    }
    protected function getPimConnector_Reader_File_YamlService()
    {
        return $this->services['pim_connector.reader.file.yaml'] = new \Pim\Component\Connector\Reader\File\Yaml\Reader($this->get('pim_connector.array_converter.dummy'));
    }
    protected function getPimConnector_Reader_File_YamlJobInstanceService()
    {
        return $this->services['pim_connector.reader.file.yaml_job_instance'] = new \Pim\Component\Connector\Reader\File\Yaml\Reader($this->get('pim_connector.array_converter.standard.job_instance'));
    }
    protected function getPimConnector_Step_CharsetValidatorService()
    {
        return $this->services['pim_connector.step.charset_validator'] = new \Pim\Component\Connector\Step\ValidatorStep('validation', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.validator.item.charset_validator'));
    }
    protected function getPimConnector_Step_CsvAssociationType_ExportService()
    {
        return $this->services['pim_connector.step.csv_association_type.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.association_type'), $this->get('pim_connector.processor.normalization.association_type'), $this->get('pim_connector.writer.file.csv_association_type'));
    }
    protected function getPimConnector_Step_CsvAssociationType_ImportService()
    {
        return $this->services['pim_connector.step.csv_association_type.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_association_type'), $this->get('pim_connector.processor.denormalization.association_type'), $this->get('pim_connector.writer.database.association_type'));
    }
    protected function getPimConnector_Step_CsvAttribute_ExportService()
    {
        return $this->services['pim_connector.step.csv_attribute.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute'), $this->get('pim_connector.processor.normalization.attribute'), $this->get('pim_connector.writer.file.csv_attribute'));
    }
    protected function getPimConnector_Step_CsvAttribute_ImportService()
    {
        return $this->services['pim_connector.step.csv_attribute.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_attribute'), $this->get('pim_connector.processor.denormalization.attribute'), $this->get('pim_connector.writer.database.attribute'));
    }
    protected function getPimConnector_Step_CsvAttributeGroupExport_ExportService()
    {
        return $this->services['pim_connector.step.csv_attribute_group_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute_group'), $this->get('pim_connector.processor.normalization.attribute_group'), $this->get('pim_connector.writer.file.csv_attribute_group'));
    }
    protected function getPimConnector_Step_CsvAttributeGroupImport_ImportService()
    {
        return $this->services['pim_connector.step.csv_attribute_group_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_attribute_group'), $this->get('pim_connector.processor.denormalization.attribute_group'), $this->get('pim_connector.writer.database.attribute_group'));
    }
    protected function getPimConnector_Step_CsvAttributeOption_ExportService()
    {
        return $this->services['pim_connector.step.csv_attribute_option.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute_option'), $this->get('pim_connector.processor.normalization.attribute_option'), $this->get('pim_connector.writer.file.csv_attribute_option'));
    }
    protected function getPimConnector_Step_CsvAttributeOption_ImportService()
    {
        return $this->services['pim_connector.step.csv_attribute_option.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_attribute_option'), $this->get('pim_connector.processor.denormalization.attribute_option'), $this->get('pim_connector.writer.database.attribute_option'));
    }
    protected function getPimConnector_Step_CsvCategory_ExportService()
    {
        return $this->services['pim_connector.step.csv_category.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.category'), $this->get('pim_connector.processor.normalization.category'), $this->get('pim_connector.writer.file.csv_category'));
    }
    protected function getPimConnector_Step_CsvCategory_ImportService()
    {
        return $this->services['pim_connector.step.csv_category.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_category'), $this->get('pim_connector.processor.denormalization.category'), $this->get('pim_connector.writer.database.category'), 1);
    }
    protected function getPimConnector_Step_CsvChannelExport_ExportService()
    {
        return $this->services['pim_connector.step.csv_channel_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.channel'), $this->get('pim_connector.processor.normalization.channel'), $this->get('pim_connector.writer.file.csv_channel'));
    }
    protected function getPimConnector_Step_CsvChannelImport_ImportService()
    {
        return $this->services['pim_connector.step.csv_channel_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_channel'), $this->get('pim_connector.processor.denormalization.channel'), $this->get('pim_connector.writer.database.channel'));
    }
    protected function getPimConnector_Step_CsvCurrencyExport_ExportService()
    {
        return $this->services['pim_connector.step.csv_currency_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.currency'), $this->get('pim_connector.processor.normalization.currency'), $this->get('pim_connector.writer.file.csv_currency'));
    }
    protected function getPimConnector_Step_CsvCurrencyImport_ImportService()
    {
        return $this->services['pim_connector.step.csv_currency_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_currency'), $this->get('pim_connector.processor.denormalization.currency'), $this->get('pim_connector.writer.database.currency'));
    }
    protected function getPimConnector_Step_CsvFamily_ExportService()
    {
        return $this->services['pim_connector.step.csv_family.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.family'), $this->get('pim_connector.processor.normalization.family'), $this->get('pim_connector.writer.file.csv_family'));
    }
    protected function getPimConnector_Step_CsvFamily_ImportService()
    {
        return $this->services['pim_connector.step.csv_family.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_family'), $this->get('pim_connector.processor.denormalization.family'), $this->get('pim_connector.writer.database.family'));
    }
    protected function getPimConnector_Step_CsvGroup_ExportService()
    {
        return $this->services['pim_connector.step.csv_group.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.group'), $this->get('pim_connector.processor.normalization.group'), $this->get('pim_connector.writer.file.csv_group'));
    }
    protected function getPimConnector_Step_CsvGroup_ImportService()
    {
        return $this->services['pim_connector.step.csv_group.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_group'), $this->get('pim_connector.processor.denormalization.group'), $this->get('pim_connector.writer.database.group'));
    }
    protected function getPimConnector_Step_CsvGroupTypeExport_ExportService()
    {
        return $this->services['pim_connector.step.csv_group_type_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.group_type'), $this->get('pim_connector.processor.normalization.group_type'), $this->get('pim_connector.writer.file.csv_group_type'));
    }
    protected function getPimConnector_Step_CsvGroupTypeImport_ImportService()
    {
        return $this->services['pim_connector.step.csv_group_type_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_group_type'), $this->get('pim_connector.processor.denormalization.group_type'), $this->get('pim_connector.writer.database.group_type'));
    }
    protected function getPimConnector_Step_CsvLocaleExport_ExportService()
    {
        return $this->services['pim_connector.step.csv_locale_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.locale'), $this->get('pim_connector.processor.normalization.locale'), $this->get('pim_connector.writer.file.csv_locale'));
    }
    protected function getPimConnector_Step_CsvLocaleImport_ImportService()
    {
        return $this->services['pim_connector.step.csv_locale_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_locale'), $this->get('pim_connector.processor.denormalization.locale'), $this->get('pim_connector.writer.database.locale'));
    }
    protected function getPimConnector_Step_CsvProduct_ExportService()
    {
        return $this->services['pim_connector.step.csv_product.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_connector.processor.normalization.product'), $this->get('pim_connector.writer.file.csv_product'), 10);
    }
    protected function getPimConnector_Step_CsvProduct_ImportService()
    {
        return $this->services['pim_connector.step.csv_product.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_product'), $this->get('pim_connector.processor.denormalization.product'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimConnector_Step_CsvProduct_ImportAssociationsService()
    {
        return $this->services['pim_connector.step.csv_product.import_associations'] = new \Akeneo\Component\Batch\Step\ItemStep('import_associations', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_association'), $this->get('pim_connector.processor.denormalization.product_association'), $this->get('pim_connector.writer.database.product_association'), 1);
    }
    protected function getPimConnector_Step_CsvVariantGroup_ExportService()
    {
        return $this->services['pim_connector.step.csv_variant_group.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.variant_group'), $this->get('pim_connector.processor.normalization.variant_group'), $this->get('pim_connector.writer.file.csv_variant_group'));
    }
    protected function getPimConnector_Step_CsvVariantGroup_ImportService()
    {
        return $this->services['pim_connector.step.csv_variant_group.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_variant_group'), $this->get('pim_connector.processor.denormalization.variant_group'), $this->get('pim_connector.writer.database.variant_group'), 1);
    }
    protected function getPimConnector_Step_XlsxAssociationType_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_association_type.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.association_type'), $this->get('pim_connector.processor.normalization.association_type'), $this->get('pim_connector.writer.file.xlsx_association_type'), 10);
    }
    protected function getPimConnector_Step_XlsxAssociationType_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_association_type.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_association_type'), $this->get('pim_connector.processor.denormalization.association_type'), $this->get('pim_connector.writer.database.association_type'));
    }
    protected function getPimConnector_Step_XlsxAttribute_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute'), $this->get('pim_connector.processor.normalization.attribute'), $this->get('pim_connector.writer.file.xlsx_attribute'), 10);
    }
    protected function getPimConnector_Step_XlsxAttribute_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_attribute'), $this->get('pim_connector.processor.denormalization.attribute'), $this->get('pim_connector.writer.database.attribute'));
    }
    protected function getPimConnector_Step_XlsxAttributeGroupExport_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute_group_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute_group'), $this->get('pim_connector.processor.normalization.attribute_group'), $this->get('pim_connector.writer.file.xlsx_attribute_group'), 10);
    }
    protected function getPimConnector_Step_XlsxAttributeGroupImport_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute_group_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_attribute_group'), $this->get('pim_connector.processor.denormalization.attribute_group'), $this->get('pim_connector.writer.database.attribute_group'));
    }
    protected function getPimConnector_Step_XlsxAttributeOption_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute_option.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.attribute_option'), $this->get('pim_connector.processor.normalization.attribute_option'), $this->get('pim_connector.writer.file.xlsx_attribute_option'), 10);
    }
    protected function getPimConnector_Step_XlsxAttributeOption_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_attribute_option.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_attribute_option'), $this->get('pim_connector.processor.denormalization.attribute_option'), $this->get('pim_connector.writer.database.attribute_option'));
    }
    protected function getPimConnector_Step_XlsxCategory_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_category.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.category'), $this->get('pim_connector.processor.normalization.category'), $this->get('pim_connector.writer.file.xlsx_category'), 10);
    }
    protected function getPimConnector_Step_XlsxCategory_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_category.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_category'), $this->get('pim_connector.processor.denormalization.category'), $this->get('pim_connector.writer.database.category'), 1);
    }
    protected function getPimConnector_Step_XlsxChannelExport_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_channel_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.channel'), $this->get('pim_connector.processor.normalization.channel'), $this->get('pim_connector.writer.file.xlsx_channel'), 10);
    }
    protected function getPimConnector_Step_XlsxChannelImport_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_channel_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_channel'), $this->get('pim_connector.processor.denormalization.channel'), $this->get('pim_connector.writer.database.channel'));
    }
    protected function getPimConnector_Step_XlsxCurrencyExport_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_currency_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.currency'), $this->get('pim_connector.processor.normalization.currency'), $this->get('pim_connector.writer.file.xlsx_currency'), 10);
    }
    protected function getPimConnector_Step_XlsxCurrencyImport_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_currency_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_currency'), $this->get('pim_connector.processor.denormalization.currency'), $this->get('pim_connector.writer.database.currency'));
    }
    protected function getPimConnector_Step_XlsxFamily_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_family.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.family'), $this->get('pim_connector.processor.normalization.family'), $this->get('pim_connector.writer.file.xlsx_family'), 10);
    }
    protected function getPimConnector_Step_XlsxFamily_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_family.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_family'), $this->get('pim_connector.processor.denormalization.family'), $this->get('pim_connector.writer.database.family'));
    }
    protected function getPimConnector_Step_XlsxGroup_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_group.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.group'), $this->get('pim_connector.processor.normalization.group'), $this->get('pim_connector.writer.file.xlsx_group'), 10);
    }
    protected function getPimConnector_Step_XlsxGroup_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_group.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_group'), $this->get('pim_connector.processor.denormalization.group'), $this->get('pim_connector.writer.database.group'));
    }
    protected function getPimConnector_Step_XlsxGroupTypeExport_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_group_type_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.group_type'), $this->get('pim_connector.processor.normalization.group_type'), $this->get('pim_connector.writer.file.xlsx_group_type'), 10);
    }
    protected function getPimConnector_Step_XlsxGroupTypeImport_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_group_type_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_group_type'), $this->get('pim_connector.processor.denormalization.group_type'), $this->get('pim_connector.writer.database.group_type'));
    }
    protected function getPimConnector_Step_XlsxLocaleExport_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_locale_export.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.locale'), $this->get('pim_connector.processor.normalization.locale'), $this->get('pim_connector.writer.file.xlsx_locale'), 10);
    }
    protected function getPimConnector_Step_XlsxLocaleImport_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_locale_import.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_locale'), $this->get('pim_connector.processor.denormalization.locale'), $this->get('pim_connector.writer.database.locale'));
    }
    protected function getPimConnector_Step_XlsxProduct_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_product.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_connector.processor.normalization.product'), $this->get('pim_connector.writer.file.xlsx_product'), 10);
    }
    protected function getPimConnector_Step_XlsxProduct_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_product.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_product'), $this->get('pim_connector.processor.denormalization.product'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimConnector_Step_XlsxProduct_ImportAssociationsService()
    {
        return $this->services['pim_connector.step.xlsx_product.import_associations'] = new \Akeneo\Component\Batch\Step\ItemStep('import_associations', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_association'), $this->get('pim_connector.processor.denormalization.product_association'), $this->get('pim_connector.writer.database.product_association'), 1);
    }
    protected function getPimConnector_Step_XlsxVariantGroup_ExportService()
    {
        return $this->services['pim_connector.step.xlsx_variant_group.export'] = new \Akeneo\Component\Batch\Step\ItemStep('export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.variant_group'), $this->get('pim_connector.processor.normalization.variant_group'), $this->get('pim_connector.writer.file.xlsx_variant_group'), 10);
    }
    protected function getPimConnector_Step_XlsxVariantGroup_ImportService()
    {
        return $this->services['pim_connector.step.xlsx_variant_group.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.xlsx_variant_group'), $this->get('pim_connector.processor.denormalization.variant_group'), $this->get('pim_connector.writer.database.variant_group'), 1);
    }
    protected function getPimConnector_Validator_Constraints_ChannelValidatorService()
    {
        return $this->services['pim_connector.validator.constraints.channel_validator'] = new \Pim\Component\Connector\Validator\Constraints\ChannelValidator($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimConnector_Validator_Item_CharsetValidatorService()
    {
        return $this->services['pim_connector.validator.item.charset_validator'] = new \Pim\Component\Connector\Item\CharsetValidator();
    }
    protected function getPimConnector_Writer_Database_AssociationTypeService()
    {
        return $this->services['pim_connector.writer.database.association_type'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.association_type'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_AttributeService()
    {
        return $this->services['pim_connector.writer.database.attribute'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.attribute'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_AttributeGroupService()
    {
        return $this->services['pim_connector.writer.database.attribute_group'] = new \Pim\Component\Connector\Writer\Database\AttributeGroupWriter($this->get('pim_catalog.saver.attribute_group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_catalog.repository.attribute_group'));
    }
    protected function getPimConnector_Writer_Database_AttributeOptionService()
    {
        return $this->services['pim_connector.writer.database.attribute_option'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.attribute_option'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_CategoryService()
    {
        return $this->services['pim_connector.writer.database.category'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.category'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_ChannelService()
    {
        return $this->services['pim_connector.writer.database.channel'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.channel'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_CurrencyService()
    {
        return $this->services['pim_connector.writer.database.currency'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.currency'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_FamilyService()
    {
        return $this->services['pim_connector.writer.database.family'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.family'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_GroupService()
    {
        return $this->services['pim_connector.writer.database.group'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_GroupTypeService()
    {
        return $this->services['pim_connector.writer.database.group_type'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.group_type'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_JobInstanceService()
    {
        return $this->services['pim_connector.writer.database.job_instance'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('akeneo_batch.saver.job_instance'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_LocaleService()
    {
        return $this->services['pim_connector.writer.database.locale'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_catalog.saver.locale'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_ProductService()
    {
        return $this->services['pim_connector.writer.database.product'] = new \Pim\Component\Connector\Writer\Database\ProductWriter($this->get('pim_versioning.manager.version'), $this->get('pim_catalog.saver.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_ProductAssociationService()
    {
        return $this->services['pim_connector.writer.database.product_association'] = new \Pim\Component\Connector\Writer\Database\ProductAssociationWriter($this->get('pim_catalog.saver.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_UserService()
    {
        return $this->services['pim_connector.writer.database.user'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_user.saver.user'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_UserGroupService()
    {
        return $this->services['pim_connector.writer.database.user_group'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_user.saver.group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_UserRoleService()
    {
        return $this->services['pim_connector.writer.database.user_role'] = new \Pim\Component\Connector\Writer\Database\Writer($this->get('pim_user.saver.role'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimConnector_Writer_Database_VariantGroupService()
    {
        return $this->services['pim_connector.writer.database.variant_group'] = new \Pim\Component\Connector\Writer\Database\VariantGroupWriter($this->get('pim_catalog.saver.group'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_catalog.applier.product_template'));
    }
    protected function getPimConnector_Writer_DummyItemService()
    {
        return $this->services['pim_connector.writer.dummy_item'] = new \Pim\Component\Connector\Writer\DummyItemWriter();
    }
    protected function getPimConnector_Writer_File_CsvService()
    {
        return $this->services['pim_connector.writer.file.csv'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.dummy'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvAssociationTypeService()
    {
        return $this->services['pim_connector.writer.file.csv_association_type'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.association_type'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvAttributeService()
    {
        return $this->services['pim_connector.writer.file.csv_attribute'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvAttributeGroupService()
    {
        return $this->services['pim_connector.writer.file.csv_attribute_group'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute_group'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvAttributeOptionService()
    {
        return $this->services['pim_connector.writer.file.csv_attribute_option'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute_option'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvCategoryService()
    {
        return $this->services['pim_connector.writer.file.csv_category'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.category'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvChannelService()
    {
        return $this->services['pim_connector.writer.file.csv_channel'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.channel'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvCurrencyService()
    {
        return $this->services['pim_connector.writer.file.csv_currency'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.currency'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvFamilyService()
    {
        return $this->services['pim_connector.writer.file.csv_family'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.family'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvGroupService()
    {
        return $this->services['pim_connector.writer.file.csv_group'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.group'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvGroupTypeService()
    {
        return $this->services['pim_connector.writer.file.csv_group_type'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.group_type'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvLocaleService()
    {
        return $this->services['pim_connector.writer.file.csv_locale'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.standard_to_flat.locale'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_CsvProductService()
    {
        return $this->services['pim_connector.writer.file.csv_product'] = new \Pim\Component\Connector\Writer\File\Csv\ProductWriter($this->get('pim_connector.array_converter.standard_to_flat.product_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_CsvProductQuickExportService()
    {
        return $this->services['pim_connector.writer.file.csv_product_quick_export'] = new \Pim\Component\Connector\Writer\File\Csv\ProductWriter($this->get('pim_connector.array_converter.standard_to_flat.product_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product_quick_export.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_CsvVariantGroupService()
    {
        return $this->services['pim_connector.writer.file.csv_variant_group'] = new \Pim\Component\Connector\Writer\File\Csv\VariantGroupWriter($this->get('pim_connector.array_converter.standard_to_flat.variant_group_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_Default_ColumnSorterService()
    {
        return $this->services['pim_connector.writer.file.default.column_sorter'] = new \Pim\Component\Connector\Writer\File\DefaultColumnSorter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), array(0 => 'code', 1 => 'label'));
    }
    protected function getPimConnector_Writer_File_FlatInvalidItemBufferFlusherService()
    {
        return $this->services['pim_connector.writer.file.flat_invalid_item_buffer_flusher'] = new \Pim\Component\Connector\Writer\File\FlatItemBufferFlusher();
    }
    protected function getPimConnector_Writer_File_FlatItemBufferFlusherService()
    {
        return $this->services['pim_connector.writer.file.flat_item_buffer_flusher'] = new \Pim\Component\Connector\Writer\File\FlatItemBufferFlusher($this->get('pim_connector.writer.file.default.column_sorter'));
    }
    protected function getPimConnector_Writer_File_InvalidItemsCsvService()
    {
        return $this->services['pim_connector.writer.file.invalid_items_csv'] = new \Pim\Component\Connector\Writer\File\Csv\Writer($this->get('pim_connector.array_converter.dummy'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_invalid_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_InvalidItemsXlsxService()
    {
        return $this->services['pim_connector.writer.file.invalid_items_xlsx'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.dummy'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_invalid_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_MediaExporterPathGeneratorService()
    {
        return $this->services['pim_connector.writer.file.media_exporter_path_generator'] = new \Pim\Component\Connector\Writer\File\MediaExporterPathGenerator();
    }
    protected function getPimConnector_Writer_File_Product_ColumnSorterService()
    {
        return $this->services['pim_connector.writer.file.product.column_sorter'] = new \Pim\Component\Connector\Writer\File\ProductColumnSorter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.association_type'), array(0 => 'categories', 1 => 'enabled', 2 => 'family', 3 => 'groups'));
    }
    protected function getPimConnector_Writer_File_Product_FlatItemBufferFlusherService()
    {
        return $this->services['pim_connector.writer.file.product.flat_item_buffer_flusher'] = new \Pim\Component\Connector\Writer\File\FlatItemBufferFlusher($this->get('pim_connector.writer.file.product.column_sorter'));
    }
    protected function getPimConnector_Writer_File_ProductQuickExport_ColumnSorterService()
    {
        return $this->services['pim_connector.writer.file.product_quick_export.column_sorter'] = new \Pim\Component\Connector\Writer\File\ProductColumnSorter($this->get('pim_connector.array_converter.flat_to_standard.product.field_splitter'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.association_type'), array(0 => 'label'));
    }
    protected function getPimConnector_Writer_File_ProductQuickExport_FlatItemBufferFlusherService()
    {
        return $this->services['pim_connector.writer.file.product_quick_export.flat_item_buffer_flusher'] = new \Pim\Component\Connector\Writer\File\FlatItemBufferFlusher($this->get('pim_connector.writer.file.product_quick_export.column_sorter'));
    }
    protected function getPimConnector_Writer_File_XlsxAssociationTypeService()
    {
        return $this->services['pim_connector.writer.file.xlsx_association_type'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.association_type'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxAttributeService()
    {
        return $this->services['pim_connector.writer.file.xlsx_attribute'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxAttributeGroupService()
    {
        return $this->services['pim_connector.writer.file.xlsx_attribute_group'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute_group'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxAttributeOptionService()
    {
        return $this->services['pim_connector.writer.file.xlsx_attribute_option'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.attribute_option'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxCategoryService()
    {
        return $this->services['pim_connector.writer.file.xlsx_category'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.category'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxChannelService()
    {
        return $this->services['pim_connector.writer.file.xlsx_channel'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.channel'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxCurrencyService()
    {
        return $this->services['pim_connector.writer.file.xlsx_currency'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.currency'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxFamilyService()
    {
        return $this->services['pim_connector.writer.file.xlsx_family'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.family'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxGroupService()
    {
        return $this->services['pim_connector.writer.file.xlsx_group'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.group'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxGroupTypeService()
    {
        return $this->services['pim_connector.writer.file.xlsx_group_type'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.group_type'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxLocaleService()
    {
        return $this->services['pim_connector.writer.file.xlsx_locale'] = new \Pim\Component\Connector\Writer\File\Xlsx\Writer($this->get('pim_connector.array_converter.standard_to_flat.locale'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.flat_item_buffer_flusher'));
    }
    protected function getPimConnector_Writer_File_XlsxProductService()
    {
        return $this->services['pim_connector.writer.file.xlsx_product'] = new \Pim\Component\Connector\Writer\File\Xlsx\ProductWriter($this->get('pim_connector.array_converter.standard_to_flat.product_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_XlsxProductQuickExportService()
    {
        return $this->services['pim_connector.writer.file.xlsx_product_quick_export'] = new \Pim\Component\Connector\Writer\File\Xlsx\ProductWriter($this->get('pim_connector.array_converter.standard_to_flat.product_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product_quick_export.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_XlsxVariantGroupService()
    {
        return $this->services['pim_connector.writer.file.xlsx_variant_group'] = new \Pim\Component\Connector\Writer\File\Xlsx\VariantGroupWriter($this->get('pim_connector.array_converter.standard_to_flat.variant_group_localized'), $this->get('pim_connector.factory.flat_item_buffer'), $this->get('pim_connector.writer.file.product.flat_item_buffer_flusher'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_connector.writer.file.media_exporter_path_generator'), array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'));
    }
    protected function getPimConnector_Writer_File_YamlService()
    {
        return $this->services['pim_connector.writer.file.yaml'] = new \Pim\Component\Connector\Writer\File\Yaml\Writer($this->get('pim_connector.array_converter.dummy'));
    }
    protected function getPimDashboard_Controller_WidgetService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_dashboard.controller.widget', 'request');
        }
        return $this->services['pim_dashboard.controller.widget'] = $this->scopedServices['request']['pim_dashboard.controller.widget'] = new \Pim\Bundle\DashboardBundle\Controller\WidgetController($this->get('pim_dashboard.widget.registry'), $this->get('templating'));
    }
    protected function getPimDashboard_Widget_CompletenessService()
    {
        return $this->services['pim_dashboard.widget.completeness'] = new \Pim\Bundle\DashboardBundle\Widget\CompletenessWidget($this->get('pim_catalog.repository.completeness'), $this->get('pim_catalog.helper.locale'), $this->get('pim_user.context.user'));
    }
    protected function getPimDashboard_Widget_LastOperationsService()
    {
        return $this->services['pim_dashboard.widget.last_operations'] = new \Pim\Bundle\DashboardBundle\Widget\LastOperationsWidget($this->get('pim_import_export.manager.job_execution'), $this->get('translator'), $this->get('pim_catalog.localization.presenter.datetime'), $this->get('security.token_storage'));
    }
    protected function getPimDashboard_Widget_LinksService()
    {
        return $this->services['pim_dashboard.widget.links'] = new \Pim\Bundle\DashboardBundle\Widget\LinksWidget();
    }
    protected function getPimDashboard_Widget_RegistryService()
    {
        $this->services['pim_dashboard.widget.registry'] = $instance = new \Pim\Bundle\DashboardBundle\Widget\Registry();
        $instance->add($this->get('pim_dashboard.widget.links'), 10);
        $instance->add($this->get('pim_dashboard.widget.completeness'), 20);
        $instance->add($this->get('pim_dashboard.widget.last_operations'), 30);
        return $instance;
    }
    protected function getPimDatagrid_Adapter_OroToPimGridFilterService()
    {
        return $this->services['pim_datagrid.adapter.oro_to_pim_grid_filter'] = new \Pim\Bundle\DataGridBundle\Adapter\OroToPimGridFilterAdapter($this->get('pim_datagrid.extension.mass_action.dispatcher'));
    }
    protected function getPimDatagrid_Controller_DatagridService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_datagrid.controller.datagrid', 'request');
        }
        return $this->services['pim_datagrid.controller.datagrid'] = $this->scopedServices['request']['pim_datagrid.controller.datagrid'] = new \Pim\Bundle\DataGridBundle\Controller\DatagridController($this->get('templating'));
    }
    protected function getPimDatagrid_Controller_DatagridViewService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_datagrid.controller.datagrid_view', 'request');
        }
        return $this->services['pim_datagrid.controller.datagrid_view'] = $this->scopedServices['request']['pim_datagrid.controller.datagrid_view'] = new \Pim\Bundle\DataGridBundle\Controller\DatagridViewController($this->get('templating'));
    }
    protected function getPimDatagrid_Controller_ExportService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_datagrid.controller.export', 'request');
        }
        return $this->services['pim_datagrid.controller.export'] = $this->scopedServices['request']['pim_datagrid.controller.export'] = new \Pim\Bundle\DataGridBundle\Controller\ExportController($this->get('request'), $this->get('pim_datagrid.extension.mass_action.dispatcher'), $this->get('pim_serializer'));
    }
    protected function getPimDatagrid_Controller_MassActionService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_datagrid.controller.mass_action', 'request');
        }
        return $this->services['pim_datagrid.controller.mass_action'] = $this->scopedServices['request']['pim_datagrid.controller.mass_action'] = new \Pim\Bundle\DataGridBundle\Controller\MassActionController($this->get('request'), $this->get('pim_datagrid.extension.mass_action.dispatcher'));
    }
    protected function getPimDatagrid_Controller_ProductExportService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_datagrid.controller.product_export', 'request');
        }
        return $this->services['pim_datagrid.controller.product_export'] = $this->scopedServices['request']['pim_datagrid.controller.product_export'] = new \Pim\Bundle\DataGridBundle\Controller\ProductExportController($this->get('request'), $this->get('pim_datagrid.extension.mass_action.dispatcher'), $this->get('pim_datagrid.adapter.oro_to_pim_grid_filter'), $this->get('pim_import_export.repository.job_instance'), $this->get('security.token_storage'), $this->get('akeneo_batch.launcher.simple_job_launcher'), $this->get('oro_datagrid.datagrid.manager'));
    }
    protected function getPimDatagrid_Controller_Rest_DatagridViewService()
    {
        return $this->services['pim_datagrid.controller.rest.datagrid_view'] = new \Pim\Bundle\DataGridBundle\Controller\Rest\DatagridViewController($this->get('pim_internal_api_serializer'), $this->get('pim_datagrid.repository.datagrid_view'), $this->get('security.token_storage'), $this->get('pim_datagrid.manager.datagrid_view'), $this->get('pim_datagrid.saver.datagrid_view'), $this->get('pim_datagrid.remover.datagrid_view'), $this->get('validator'), $this->get('translator'), $this->get('pim_catalog.filter.chained'), $this->get('pim_datagrid.updater.datagrid_view'), $this->get('pim_datagrid.factory.datagrid_view'));
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_ColumnsConfiguratorService()
    {
        return $this->services['pim_datagrid.datagrid.configuration.product.columns_configurator'] = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\ColumnsConfigurator($this->get('pim_datagrid.datagrid.configuration.product.configuration_registry'));
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_ConfigurationRegistryService()
    {
        $this->services['pim_datagrid.datagrid.configuration.product.configuration_registry'] = $instance = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\ConfigurationRegistry();
        $instance->setConfigurations(array('pim_catalog_identifier' => array('column' => array('type' => 'product_value_field', 'selector' => 'product_value_base'), 'filter' => array('type' => 'product_value_string', 'ftype' => 'string', 'options' => array('field_options' => array('attr' => array('choice_list' => true)))), 'sorter' => 'product_value'), 'pim_catalog_text' => array('column' => array('type' => 'product_value_field', 'selector' => 'product_value_base'), 'filter' => array('type' => 'product_value_string', 'ftype' => 'string', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => 'product_value'), 'pim_catalog_textarea' => array('column' => array('type' => 'product_value_field', 'selector' => 'product_value_base'), 'filter' => array('type' => 'product_value_string', 'ftype' => 'string', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => 'product_value'), 'pim_catalog_simpleselect' => array('column' => array('type' => 'product_value_option', 'selector' => 'product_value_option'), 'filter' => array('type' => 'product_value_choice', 'ftype' => 'ajax_choice', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'sorter' => 'product_value'), 'pim_catalog_multiselect' => array('column' => array('type' => 'product_value_options', 'selector' => 'product_value_options'), 'filter' => array('type' => 'product_value_choice', 'ftype' => 'ajax_choice', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'sorter' => NULL), 'pim_catalog_number' => array('column' => array('type' => 'product_value_number', 'selector' => 'product_value_base'), 'filter' => array('type' => 'product_value_number', 'ftype' => 'number', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => 'product_value'), 'pim_catalog_boolean' => array('column' => array('type' => 'product_value_boolean', 'selector' => 'product_value_base', 'frontend_type' => 'html', 'template' => 'PimDataGridBundle:Property:boolean.html.twig'), 'filter' => array('type' => 'product_value_boolean', 'ftype' => 'boolean'), 'sorter' => 'product_value'), 'pim_catalog_date' => array('column' => array('type' => 'product_value_date', 'selector' => 'product_value_base', 'frontend_type' => 'date'), 'filter' => array('type' => 'product_value_date', 'ftype' => 'date', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => 'product_value'), 'pim_catalog_file' => array('column' => array('type' => 'product_value_file', 'selector' => 'product_value_media', 'frontend_type' => 'string'), 'filter' => array('type' => 'product_value_string', 'ftype' => 'string', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => NULL), 'pim_catalog_image' => array('column' => array('type' => 'product_value_image', 'selector' => 'product_value_media', 'frontend_type' => 'html', 'template' => 'PimDataGridBundle:Property:image.html.twig'), 'filter' => array('type' => 'product_value_string', 'ftype' => 'string', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => NULL), 'pim_catalog_price_collection' => array('column' => array('type' => 'product_value_price', 'selector' => 'product_value_price'), 'filter' => array('type' => 'product_value_price', 'ftype' => 'price', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => NULL), 'pim_catalog_metric' => array('column' => array('type' => 'product_value_metric', 'selector' => 'product_value_metric', 'frontend_type' => 'html', 'template' => 'PimDataGridBundle:Property:metric.html.twig'), 'filter' => array('type' => 'product_value_metric', 'ftype' => 'metric', 'options' => array('field_options' => array('attr' => array('empty_choice' => true)))), 'sorter' => NULL), 'pim_reference_data_simpleselect' => array('column' => array('type' => 'product_value_reference_data', 'selector' => 'product_value_reference_data'), 'filter' => array('type' => 'product_value_reference_data', 'ftype' => 'ajax_choice', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'sorter' => 'product_value_reference_data'), 'pim_reference_data_multiselect' => array('column' => array('type' => 'product_value_reference_data', 'selector' => 'product_value_reference_data'), 'filter' => array('type' => 'product_value_reference_data', 'ftype' => 'ajax_choice', 'options' => array('field_options' => array('multiple' => true, 'attr' => array('empty_choice' => true)))), 'sorter' => NULL)));
        return $instance;
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_ContextConfiguratorService()
    {
        $this->services['pim_datagrid.datagrid.configuration.product.context_configurator'] = $instance = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\ContextConfigurator($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.attribute'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), $this->get('pim_catalog.repository.group'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_FiltersConfiguratorService()
    {
        return $this->services['pim_datagrid.datagrid.configuration.product.filters_configurator'] = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\FiltersConfigurator($this->get('pim_datagrid.datagrid.configuration.product.configuration_registry'));
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_GroupColumnsConfiguratorService()
    {
        $this->services['pim_datagrid.datagrid.configuration.product.group_columns_configurator'] = $instance = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\GroupColumnsConfigurator($this->get('pim_datagrid.datagrid.configuration.product.configuration_registry'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.repository.group'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimDatagrid_Datagrid_Configuration_Product_SortersConfiguratorService()
    {
        return $this->services['pim_datagrid.datagrid.configuration.product.sorters_configurator'] = new \Pim\Bundle\DataGridBundle\Datagrid\Configuration\Product\SortersConfigurator($this->get('pim_datagrid.datagrid.configuration.product.configuration_registry'));
    }
    protected function getPimDatagrid_Datagrid_Request_ParametersExtractorService()
    {
        $this->services['pim_datagrid.datagrid.request.parameters_extractor'] = $instance = new \Pim\Bundle\DataGridBundle\Datagrid\Request\RequestParametersExtractor($this->get('oro_datagrid.datagrid.request_params'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimDatagrid_Datasource_AdapterResolverService()
    {
        $this->services['pim_datagrid.datasource.adapter_resolver'] = $instance = new \Pim\Bundle\DataGridBundle\Datasource\DatasourceAdapterResolver($this->get('pim_datagrid.datasource.support_resolver'), 'Pim\\Bundle\\FilterBundle\\Datasource\\Orm\\OrmFilterDatasourceAdapter', 'Pim\\Bundle\\FilterBundle\\Datasource\\Orm\\OrmFilterProductDatasourceAdapter');
        $instance->addProductDatasource('pim_datasource_product');
        $instance->addProductDatasource('pim_datasource_associated_product');
        return $instance;
    }
    protected function getPimDatagrid_Datasource_AssociatedProductService()
    {
        return $this->services['pim_datagrid.datasource.associated_product'] = new \Pim\Bundle\DataGridBundle\Datasource\ProductDatasource($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_datagrid.datasource.result_record.hydrator.associated_product'), $this->get('pim_catalog.query.product_query_builder_factory'));
    }
    protected function getPimDatagrid_Datasource_DefaultService()
    {
        return $this->services['pim_datagrid.datasource.default'] = new \Pim\Bundle\DataGridBundle\Datasource\Datasource($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_datagrid.datasource.result_record.hydrator.default'));
    }
    protected function getPimDatagrid_Datasource_ProductService()
    {
        $this->services['pim_datagrid.datasource.product'] = $instance = new \Pim\Bundle\DataGridBundle\Datasource\ProductDatasource($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_datagrid.datasource.result_record.hydrator.product'), $this->get('pim_catalog.query.product_query_builder_factory'));
        $instance->setMassActionRepository($this->get('pim_catalog.repository.product_mass_action'));
        return $instance;
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_AssociatedProductService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.associated_product'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ProductHydrator('Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_DefaultService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.default'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ResultRecordHydrator();
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_ObjectService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.object'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ObjectHydrator();
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_ObjectIdService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.object_id'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ObjectIdHydrator();
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_Orm_ObjectService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.orm.object'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ObjectHydrator();
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_Orm_ObjectIdService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.orm.object_id'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ObjectIdHydrator();
    }
    protected function getPimDatagrid_Datasource_ResultRecord_Hydrator_ProductService()
    {
        return $this->services['pim_datagrid.datasource.result_record.hydrator.product'] = new \Pim\Bundle\DataGridBundle\Datasource\ResultRecord\Orm\ProductHydrator();
    }
    protected function getPimDatagrid_Datasource_SmartService()
    {
        return $this->services['pim_datagrid.datasource.smart'] = new \Pim\Bundle\DataGridBundle\Datasource\Datasource($this->get('doctrine.orm.default_entity_manager'), $this->get('pim_datagrid.datasource.result_record.hydrator.default'));
    }
    protected function getPimDatagrid_Datasource_SupportResolverService()
    {
        $this->services['pim_datagrid.datasource.support_resolver'] = $instance = new \Pim\Bundle\DataGridBundle\Datasource\DatasourceSupportResolver('doctrine/orm');
        $instance->addSmartDatasource('pim_datasource_product');
        $instance->addSmartDatasource('pim_datasource_associated_product');
        $instance->addSmartDatasource('pim_datasource_smart');
        return $instance;
    }
    protected function getPimDatagrid_EventListener_ConfigureProductFiltersService()
    {
        return $this->services['pim_datagrid.event_listener.configure_product_filters'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureProductFiltersListener($this->get('pim_user.context.user'));
    }
    protected function getPimDatagrid_EventListener_ConfigureSortersListenerService()
    {
        return $this->services['pim_datagrid.event_listener.configure_sorters_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureSortersListener($this->get('pim_datagrid.datasource.support_resolver'));
    }
    protected function getPimDatagrid_EventSubscriber_DefaultViewService()
    {
        return $this->services['pim_datagrid.event_subscriber.default_view'] = new \Pim\Bundle\DataGridBundle\EventSubscriber\DefaultViewSubscriber($this->get('pim_datagrid.repository.datagrid_view'));
    }
    protected function getPimDatagrid_Extension_Action_Type_TabRedirectService()
    {
        return new \Pim\Bundle\DataGridBundle\Extension\Action\Actions\TabRedirectAction();
    }
    protected function getPimDatagrid_Extension_FilterService()
    {
        $this->services['pim_datagrid.extension.filter'] = $instance = new \Pim\Bundle\DataGridBundle\Extension\Filter\FilterExtension($this->get('oro_datagrid.datagrid.request_params'), $this->get('translator'), $this->get('pim_datagrid.datasource.adapter_resolver'));
        $instance->addFilter('string', $this->get('oro_filter.string_filter'));
        $instance->addFilter('selectrow', $this->get('oro_filter.select_row_filter'));
        $instance->addFilter('number', $this->get('oro_filter.number_filter'));
        $instance->addFilter('percent', $this->get('oro_filter.percent_filter'));
        $instance->addFilter('choice', $this->get('oro_filter.choice_filter'));
        $instance->addFilter('entity', $this->get('oro_filter.entity_filter'));
        $instance->addFilter('boolean', $this->get('oro_filter.boolean_filter'));
        $instance->addFilter('date', $this->get('oro_filter.date_range_filter'));
        $instance->addFilter('datetime', $this->get('oro_filter.datetime_range_filter'));
        $instance->addFilter('ajax_choice', $this->get('pim_filter.ajax_choice_filter'));
        $instance->addFilter('product_scope', $this->get('pim_filter.product_scope_filter'));
        $instance->addFilter('product_category', $this->get('pim_filter.product_category_filter'));
        $instance->addFilter('product_groups', $this->get('pim_filter.product_groups_filter'));
        $instance->addFilter('product_family', $this->get('pim_filter.product_family_filter'));
        $instance->addFilter('product_completeness', $this->get('pim_filter.product_completeness_filter'));
        $instance->addFilter('product_date', $this->get('pim_filter.product_date_filter'));
        $instance->addFilter('product_enabled', $this->get('pim_filter.product_enabled_filter'));
        $instance->addFilter('product_in_group', $this->get('pim_filter.product_in_group_filter'));
        $instance->addFilter('product_is_associated', $this->get('pim_filter.product_is_associated_filter'));
        $instance->addFilter('product_value_string', $this->get('pim_filter.product_value_string'));
        $instance->addFilter('product_value_choice', $this->get('pim_filter.product_value_choice'));
        $instance->addFilter('product_value_number', $this->get('pim_filter.product_value_number'));
        $instance->addFilter('product_value_date', $this->get('pim_filter.product_value_date'));
        $instance->addFilter('product_value_datetime', $this->get('pim_filter.product_value_datetime'));
        $instance->addFilter('product_value_boolean', $this->get('pim_filter.product_value_boolean'));
        $instance->addFilter('product_value_metric', $this->get('pim_filter.product_value_metric'));
        $instance->addFilter('product_value_price', $this->get('pim_filter.product_value_price'));
        $instance->addFilter('product_value_reference_data', $this->get('pim_reference_data.filter.reference_data'));
        return $instance;
    }
    protected function getPimDatagrid_Extension_Formatter_Property_Job_NamePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.job.name_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\Job\NameProperty($this->get('akeneo_batch.job.job_registry'), $this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_Job_TypePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.job.type_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\Job\TypeProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_Product_GroupsPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product.groups_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\Product\GroupsProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_AttributeOptionPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.attribute_option_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\AttributeOptionProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_AttributeOptionsPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.attribute_options_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\AttributeOptionsProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_BooleanPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.boolean_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\BooleanProperty($this->get('twig'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_DatePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.date_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\DateProperty($this->get('translator'), $this->get('pim_catalog.localization.presenter.date'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_DatetimePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.datetime_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\DateProperty($this->get('translator'), $this->get('pim_catalog.localization.presenter.datetime'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_FieldPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.field_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\FieldProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_FilePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.file_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\FileProperty($this->get('translator'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_ImagePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.image_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\ImageProperty($this->get('twig'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_MetricPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.metric_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\MetricProperty($this->get('twig'), $this->get('translator'), $this->get('pim_catalog.localization.presenter.metric'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_NumberPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.number_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\NumberProperty($this->get('translator'), $this->get('pim_catalog.localization.presenter.number'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_PricePropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.price_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\PriceProperty($this->get('translator'), $this->get('pim_catalog.localization.presenter.prices'));
    }
    protected function getPimDatagrid_Extension_Formatter_Property_ProductValue_TwigPropertyService()
    {
        return $this->services['pim_datagrid.extension.formatter.property.product_value.twig_property'] = new \Pim\Bundle\DataGridBundle\Extension\Formatter\Property\ProductValue\TwigProperty($this->get('twig'));
    }
    protected function getPimDatagrid_Extension_MassAction_DispatcherService()
    {
        return $this->services['pim_datagrid.extension.mass_action.dispatcher'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\MassActionDispatcher($this->get('pim_datagrid.extension.mass_action.handler.registry'), $this->get('oro_datagrid.datagrid.manager'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('oro_datagrid.mass_action.parameters_parser'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_DeleteService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.delete'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\DeleteMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object_id'), $this->get('translator'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_EditService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.edit'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\EditMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.orm.object'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_ExportService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.export'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\ExportMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_ProductDeleteService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.product_delete'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\DeleteProductsMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object_id'), $this->get('translator'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_ProductEditService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.product_edit'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\EditMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_ProductExportService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.product_export'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\ExportMassActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object_id'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_RegistryService()
    {
        $this->services['pim_datagrid.extension.mass_action.handler.registry'] = $instance = new \Pim\Bundle\DataGridBundle\Extension\MassAction\MassActionHandlerRegistry();
        $instance->addHandler('quick_export', $this->get('pim_datagrid.extension.mass_action.handler.export'));
        $instance->addHandler('product_quick_export', $this->get('pim_datagrid.extension.mass_action.handler.product_export'));
        $instance->addHandler('sequential_edit', $this->get('pim_datagrid.extension.mass_action.handler.sequential_edit'));
        $instance->addHandler('mass_edit', $this->get('pim_datagrid.extension.mass_action.handler.edit'));
        $instance->addHandler('product_mass_edit', $this->get('pim_datagrid.extension.mass_action.handler.product_edit'));
        $instance->addHandler('mass_delete', $this->get('pim_datagrid.extension.mass_action.handler.delete'));
        $instance->addHandler('product_mass_delete', $this->get('pim_datagrid.extension.mass_action.handler.product_delete'));
        return $instance;
    }
    protected function getPimDatagrid_Extension_MassAction_Handler_SequentialEditService()
    {
        return $this->services['pim_datagrid.extension.mass_action.handler.sequential_edit'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Handler\SequentialEditActionHandler($this->get('pim_datagrid.datasource.result_record.hydrator.object_id'), $this->get('event_dispatcher'));
    }
    protected function getPimDatagrid_Extension_MassAction_Type_DeleteService()
    {
        return new \Pim\Bundle\DataGridBundle\Extension\MassAction\Actions\Ajax\DeleteMassAction();
    }
    protected function getPimDatagrid_Extension_MassAction_Type_EditService()
    {
        return new \Pim\Bundle\DataGridBundle\Extension\MassAction\Actions\Redirect\EditMassAction();
    }
    protected function getPimDatagrid_Extension_MassAction_Type_ExportService()
    {
        return new \Pim\Bundle\DataGridBundle\Extension\MassAction\Actions\Export\ExportMassAction();
    }
    protected function getPimDatagrid_Extension_MassAction_Util_ProductFieldsBuilderService()
    {
        return $this->services['pim_datagrid.extension.mass_action.util.product_fields_builder'] = new \Pim\Bundle\DataGridBundle\Extension\MassAction\Util\ProductFieldsBuilder($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.currency'), $this->get('pim_catalog.repository.association_type'), $this->get('pim_catalog.context.catalog'));
    }
    protected function getPimDatagrid_Extension_PagerService()
    {
        return $this->services['pim_datagrid.extension.pager'] = new \Pim\Bundle\DataGridBundle\Extension\Pager\PagerExtension($this->get('pim_datagrid.extension.pager.pager_resolver'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimDatagrid_Extension_Pager_Orm_PagerService()
    {
        return $this->services['pim_datagrid.extension.pager.orm.pager'] = new \Pim\Bundle\DataGridBundle\Extension\Pager\Orm\Pager();
    }
    protected function getPimDatagrid_Extension_Pager_PagerResolverService()
    {
        return $this->services['pim_datagrid.extension.pager.pager_resolver'] = new \Pim\Bundle\DataGridBundle\Extension\Pager\PagerResolver($this->get('pim_datagrid.datasource.support_resolver'), $this->get('pim_datagrid.extension.pager.orm.pager'));
    }
    protected function getPimDatagrid_Extension_Selector_Orm_Product_CompletenessSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product.completeness_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\Product\CompletenessSelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_Product_FamilySelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product.family_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\Product\FamilySelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_Product_GroupsSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product.groups_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\Product\GroupsSelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_Product_InGroupSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product.in_group_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\Product\InGroupSelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_Product_LabelSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product.label_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\Product\LabelSelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_BaseSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.base_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\BaseSelector();
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_MediaSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.media_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\MediaSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_MetricSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.metric_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\MetricSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_OptionSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.option_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\OptionSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_OptionsSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.options_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\OptionsSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimDatagrid_Extension_Selector_Orm_ProductValue_PricesSelectorService()
    {
        return $this->services['pim_datagrid.extension.selector.orm.product_value.prices_selector'] = new \Pim\Bundle\DataGridBundle\Extension\Selector\Orm\ProductValue\PricesSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimDatagrid_Extension_Selector_OrmSelectorService()
    {
        $this->services['pim_datagrid.extension.selector.orm_selector'] = $instance = new \Pim\Bundle\DataGridBundle\Extension\Selector\OrmSelectorExtension('doctrine/orm', $this->get('oro_datagrid.datagrid.request_params'));
        $instance->addEligibleDatasource('pim_datasource_product');
        $instance->addEligibleDatasource('pim_datasource_associated_product');
        $instance->addSelector('product_value_base', $this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
        $instance->addSelector('product_value_option', $this->get('pim_datagrid.extension.selector.orm.product_value.option_selector'));
        $instance->addSelector('product_value_options', $this->get('pim_datagrid.extension.selector.orm.product_value.options_selector'));
        $instance->addSelector('product_value_price', $this->get('pim_datagrid.extension.selector.orm.product_value.prices_selector'));
        $instance->addSelector('product_value_metric', $this->get('pim_datagrid.extension.selector.orm.product_value.metric_selector'));
        $instance->addSelector('product_value_media', $this->get('pim_datagrid.extension.selector.orm.product_value.media_selector'));
        $instance->addSelector('product_label', $this->get('pim_datagrid.extension.selector.orm.product.label_selector'));
        $instance->addSelector('product_groups', $this->get('pim_datagrid.extension.selector.orm.product.groups_selector'));
        $instance->addSelector('product_completeness', $this->get('pim_datagrid.extension.selector.orm.product.completeness_selector'));
        $instance->addSelector('product_family', $this->get('pim_datagrid.extension.selector.orm.product.family_selector'));
        $instance->addSelector('product_in_group', $this->get('pim_datagrid.extension.selector.orm.product.in_group_selector'));
        $instance->addSelector('product_value_reference_data', $this->get('pim_reference_data.extension.selector.orm.reference_data'));
        return $instance;
    }
    protected function getPimDatagrid_Extension_SorterService()
    {
        $this->services['pim_datagrid.extension.sorter'] = $instance = new \Pim\Bundle\DataGridBundle\Extension\Sorter\SorterExtension($this->get('oro_datagrid.datagrid.request_params'));
        $instance->addSorter('field', $this->get('pim_datagrid.extension.sorter.orm.field_sorter'));
        $instance->addSorter('product_field', $this->get('pim_datagrid.extension.sorter.product.field_sorter'));
        $instance->addSorter('product_value', $this->get('pim_datagrid.extension.sorter.product.value_sorter'));
        $instance->addSorter('product_completeness', $this->get('pim_datagrid.extension.sorter.product.completeness_sorter'));
        $instance->addSorter('product_family', $this->get('pim_datagrid.extension.sorter.product.family_sorter'));
        $instance->addSorter('product_is_associated', $this->get('pim_datagrid.extension.sorter.product.is_associated_sorter'));
        $instance->addSorter('product_in_group', $this->get('pim_datagrid.extension.sorter.product.in_group_sorter'));
        $instance->addSorter('product_value_reference_data', $this->get('pim_reference_data.extension.sorter.reference_data_sorter'));
        return $instance;
    }
    protected function getPimDatagrid_Extension_Sorter_Orm_FieldSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.orm.field_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Orm\FieldSorter();
    }
    protected function getPimDatagrid_Extension_Sorter_Product_CompletenessSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.completeness_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\CompletenessSorter();
    }
    protected function getPimDatagrid_Extension_Sorter_Product_FamilySorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.family_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\FamilySorter();
    }
    protected function getPimDatagrid_Extension_Sorter_Product_FieldSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.field_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\FieldSorter();
    }
    protected function getPimDatagrid_Extension_Sorter_Product_InGroupSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.in_group_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\InGroupSorter($this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimDatagrid_Extension_Sorter_Product_IsAssociatedSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.is_associated_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\IsAssociatedSorter();
    }
    protected function getPimDatagrid_Extension_Sorter_Product_ValueSorterService()
    {
        return $this->services['pim_datagrid.extension.sorter.product.value_sorter'] = new \Pim\Bundle\DataGridBundle\Extension\Sorter\Product\ValueSorter();
    }
    protected function getPimDatagrid_Factory_DatagridViewService()
    {
        return $this->services['pim_datagrid.factory.datagrid_view'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView');
    }
    protected function getPimDatagrid_Form_Type_DatagridProductFilterChoiceService()
    {
        return $this->services['pim_datagrid.form.type.datagrid_product_filter_choice'] = new \Pim\Bundle\DataGridBundle\Form\Type\DatagridFilterChoiceType($this->get('oro_datagrid.datagrid.manager'), $this->get('pim_datagrid.datagrid.configuration.product.filters_configurator'), 'product-grid');
    }
    protected function getPimDatagrid_Form_Type_DatagridViewService()
    {
        return $this->services['pim_datagrid.form.type.datagrid_view'] = new \Pim\Bundle\DataGridBundle\Form\Type\DatagridViewType('Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView');
    }
    protected function getPimDatagrid_Manager_DatagridViewService()
    {
        return $this->services['pim_datagrid.manager.datagrid_view'] = new \Pim\Bundle\DataGridBundle\Manager\DatagridViewManager($this->get('pim_datagrid.repository.datagrid_view'), $this->get('oro_datagrid.datagrid.manager'), $this->get('pim_datagrid.saver.datagrid_view'), $this->get('pim_datagrid.remover.datagrid_view'));
    }
    protected function getPimDatagrid_Remover_DatagridViewService()
    {
        return $this->services['pim_datagrid.remover.datagrid_view'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView');
    }
    protected function getPimDatagrid_Repository_DatagridViewService()
    {
        return $this->services['pim_datagrid.repository.datagrid_view'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView');
    }
    protected function getPimDatagrid_Saver_DatagridViewService()
    {
        return $this->services['pim_datagrid.saver.datagrid_view'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView');
    }
    protected function getPimDatagrid_Twig_FilterExtensionService()
    {
        return $this->services['pim_datagrid.twig.filter_extension'] = new \Pim\Bundle\DataGridBundle\Twig\FilterExtension($this);
    }
    protected function getPimDatagrid_Twig_ImageExtensionService()
    {
        return $this->services['pim_datagrid.twig.image_extension'] = new \Pim\Bundle\PdfGeneratorBundle\Twig\ImageExtension();
    }
    protected function getPimDatagrid_Updater_DatagridViewService()
    {
        return $this->services['pim_datagrid.updater.datagrid_view'] = new \Pim\Bundle\DataGridBundle\Updater\DatagridViewUpdater($this->get('pim_user.repository.user'));
    }
    protected function getPimEnrich_Connector_Item_MassEdit_TemporaryFileCleanerService()
    {
        return $this->services['pim_enrich.connector.item.mass_edit.temporary_file_cleaner'] = new \Pim\Bundle\EnrichBundle\Connector\Item\MassEdit\TemporaryFileCleaner($this->get('pim_catalog.updater.product'), $this->get('pim_catalog.validator.product'), $this->get('pim_catalog.repository.product_mass_action'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductCsvQuickExportService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_csv_quick_export'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductQuickExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export'), array(0 => 'csv_product_quick_export', 1 => 'csv_product_grid_context_quick_export'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductMassEditService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_mass_edit'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductMassEdit(array(0 => 'update_product_value', 1 => 'add_product_value', 2 => 'remove_product_value', 3 => 'edit_common_attributes', 4 => 'add_to_variant_group'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_ProductXlsxQuickExportService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_xlsx_quick_export'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductQuickExport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export'), array(0 => 'xlsx_product_quick_export', 1 => 'xlsx_product_grid_context_quick_export'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_ConstraintCollectionProvider_SimpleMassEditService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.constraint_collection_provider.simple_mass_edit'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleMassEdit(array(0 => 'set_attribute_requirements'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductCsvQuickExportService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.default_values_provider.product_csv_quick_export'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\DefaultValuesProvider\ProductQuickExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_export'), array(0 => 'csv_product_quick_export', 1 => 'csv_product_grid_context_quick_export'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductMassEditService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.default_values_provider.product_mass_edit'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\DefaultValuesProvider\ProductMassEdit(array(0 => 'update_product_value', 1 => 'add_product_value', 2 => 'remove_product_value', 3 => 'edit_common_attributes', 4 => 'add_to_variant_group'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_ProductXlsxQuickExportService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.default_values_provider.product_xlsx_quick_export'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\DefaultValuesProvider\ProductQuickExport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export'), array(0 => 'xlsx_product_quick_export', 1 => 'xlsx_product_grid_context_quick_export'));
    }
    protected function getPimEnrich_Connector_Job_JobParameters_DefaultValuesProvider_SimpleMassEditService()
    {
        return $this->services['pim_enrich.connector.job.job_parameters.default_values_provider.simple_mass_edit'] = new \Pim\Bundle\EnrichBundle\Connector\Job\JobParameters\DefaultValuesProvider\SimpleMassEdit(array(0 => 'set_attribute_requirements'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Family_SetRequirementsService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.family.set_requirements'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Family\SetAttributeRequirements($this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.factory.attribute_requirement'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Product_AddToVariantGroupService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.product.add_to_variant_group'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Product\AddProductToVariantGroupProcessor($this->get('pim_catalog.validator.product'), $this->get('pim_catalog.repository.group'), $this->get('pim_catalog.updater.product_template'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Product_AddValueService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.product.add_value'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Product\AddProductValueProcessor($this->get('pim_catalog.updater.product_property_adder'), $this->get('pim_catalog.validator.product'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Product_EditCommonAttributesService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.product.edit_common_attributes'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Product\EditCommonAttributesProcessor($this->get('pim_catalog.validator.product'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.updater.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Product_RemoveValueService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.product.remove_value'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Product\RemoveProductValueProcessor($this->get('pim_catalog.updater.product_property_remover'), $this->get('pim_catalog.validator.product'));
    }
    protected function getPimEnrich_Connector_Processor_MassEdit_Product_UpdateValueService()
    {
        return $this->services['pim_enrich.connector.processor.mass_edit.product.update_value'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\MassEdit\Product\UpdateProductValueProcessor($this->get('pim_catalog.updater.product_property_setter'), $this->get('pim_catalog.validator.product'));
    }
    protected function getPimEnrich_Connector_Processor_QuickExport_ProductService()
    {
        return $this->services['pim_enrich.connector.processor.quick_export.product'] = new \Pim\Bundle\EnrichBundle\Connector\Processor\QuickExport\ProductProcessor($this->get('pim_catalog.normalizer.standard.product'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.builder.product'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_user.provider.user'), $this->get('security.token_storage'), $this->get('pim_connector.processor.bulk_media_fetcher'));
    }
    protected function getPimEnrich_Connector_Reader_MassEdit_FamilyService()
    {
        return $this->services['pim_enrich.connector.reader.mass_edit.family'] = new \Pim\Bundle\EnrichBundle\Connector\Reader\MassEdit\FilteredFamilyReader($this->get('pim_catalog.repository.family'));
    }
    protected function getPimEnrich_Connector_Reader_MassEdit_VariantGroupProductService()
    {
        return $this->services['pim_enrich.connector.reader.mass_edit.variant_group_product'] = new \Pim\Bundle\EnrichBundle\Connector\Reader\MassEdit\FilteredVariantGroupProductReader($this->get('pim_catalog.query.product_query_builder_factory'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.manager.completeness'), $this->get('pim_catalog.converter.metric'), true, $this->get('pim_enrich.product.paginator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('pim_catalog.repository.group'), $this->get('pim_catalog.repository.product'), $this->get('translator'));
    }
    protected function getPimEnrich_Controller_AssociationService()
    {
        return $this->services['pim_enrich.controller.association'] = new \Pim\Bundle\EnrichBundle\Controller\AssociationController($this->get('pim_catalog.repository.association_type'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.builder.product'), $this->get('templating'));
    }
    protected function getPimEnrich_Controller_AssociationTypeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.association_type', 'request');
        }
        return $this->services['pim_enrich.controller.association_type'] = $this->scopedServices['request']['pim_enrich.controller.association_type'] = new \Pim\Bundle\EnrichBundle\Controller\AssociationTypeController($this->get('request'), $this->get('router'), $this->get('translator'), $this->get('pim_catalog.repository.association'), $this->get('pim_enrich.form.handler.association_type'), $this->get('pim_enrich.form.association_type'), $this->get('pim_catalog.remover.association_type'), $this->get('pim_catalog.repository.association_type'));
    }
    protected function getPimEnrich_Controller_AttributeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.attribute', 'request');
        }
        return $this->services['pim_enrich.controller.attribute'] = $this->scopedServices['request']['pim_enrich.controller.attribute'] = new \Pim\Bundle\EnrichBundle\Controller\AttributeController($this->get('request'), $this->get('router'), $this->get('form.factory'), $this->get('translator'), $this->get('pim_enrich.form.handler.attribute'), $this->get('pim_enrich.form.attribute'), $this->get('pim_catalog.repository.locale'), $this->get('pim_versioning.manager.version'), $this->get('pim_catalog.saver.attribute'), $this->get('pim_catalog.remover.attribute'), $this->get('pim_catalog.saver.attribute_option'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.group'), $this->get('pim_catalog.registry.attribute_type'), $this->get('pim_catalog.factory.attribute'), $this->get('pim_catalog.factory.attribute_option'), $this->get('pim_catalog.factory.attribute_option_value'), array('measures_config' => array('Area' => array('standard' => 'SQUARE_METER', 'units' => array('SQUARE_MILLIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mm²'), 'SQUARE_CENTIMETER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'cm²'), 'SQUARE_DECIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'dm²'), 'SQUARE_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm²'), 'CENTIARE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'ca'), 'SQUARE_DEKAMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'dam²'), 'ARE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'a'), 'SQUARE_HECTOMETER' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'hm²'), 'HECTARE' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'ha'), 'SQUARE_KILOMETER' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'km²'), 'SQUARE_MIL' => array('convert' => array(0 => array('mul' => 6.4515999999999997E-10)), 'symbol' => 'sq mil'), 'SQUARE_INCH' => array('convert' => array(0 => array('mul' => 0.00064515999999999998)), 'symbol' => 'in²'), 'SQUARE_FOOT' => array('convert' => array(0 => array('mul' => 0.092903040000000006)), 'symbol' => 'ft²'), 'SQUARE_YARD' => array('convert' => array(0 => array('mul' => 0.83612735999999999)), 'symbol' => 'yd²'), 'ARPENT' => array('convert' => array(0 => array('mul' => 3418.8899999999999)), 'symbol' => 'arpent'), 'ACRE' => array('convert' => array(0 => array('mul' => 4046.8564219999998)), 'symbol' => 'A'), 'SQUARE_FURLONG' => array('convert' => array(0 => array('mul' => 40468.726000000002)), 'symbol' => 'fur²'), 'SQUARE_MILE' => array('convert' => array(0 => array('mul' => 2589988.1103360001)), 'symbol' => 'mi²'))), 'Binary' => array('standard' => 'BYTE', 'units' => array('BIT' => array('convert' => array(0 => array('mul' => 0.125)), 'symbol' => 'b'), 'BYTE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'B'), 'KILOBYTE' => array('convert' => array(0 => array('mul' => 1024)), 'symbol' => 'kB'), 'MEGABYTE' => array('convert' => array(0 => array('mul' => 1048576)), 'symbol' => 'MB'), 'GIGABYTE' => array('convert' => array(0 => array('mul' => 1073741824)), 'symbol' => 'GB'), 'TERABYTE' => array('convert' => array(0 => array('mul' => 1099511627776)), 'symbol' => 'TB'))), 'Decibel' => array('standard' => 'DECIBEL', 'units' => array('DECIBEL' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'dB'))), 'Frequency' => array('standard' => 'HERTZ', 'units' => array('HERTZ' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Hz'), 'KILOHERTZ' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kHz'), 'MEGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MHz'), 'GIGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GHz'), 'TERAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'THz'))), 'Length' => array('standard' => 'METER', 'units' => array('MILLIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mm'), 'CENTIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cm'), 'DECIMETER' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dm'), 'METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm'), 'DEKAMETER' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'dam'), 'HECTOMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hm'), 'KILOMETER' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'km'), 'MIL' => array('convert' => array(0 => array('mul' => 2.5400000000000001E-5)), 'symbol' => 'mil'), 'INCH' => array('convert' => array(0 => array('mul' => 0.025399999999999999)), 'symbol' => 'in'), 'FEET' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ft'), 'YARD' => array('convert' => array(0 => array('mul' => 0.91439999999999999)), 'symbol' => 'yd'), 'CHAIN' => array('convert' => array(0 => array('mul' => 20.116800000000001)), 'symbol' => 'ch'), 'FURLONG' => array('convert' => array(0 => array('mul' => 201.16800000000001)), 'symbol' => 'fur'), 'MILE' => array('convert' => array(0 => array('mul' => 1609.3440000000001)), 'symbol' => 'mi'))), 'Power' => array('standard' => 'WATT', 'units' => array('WATT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'W'), 'KILOWATT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kW'), 'MEGAWATT' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MW'), 'GIGAWATT' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GW'), 'TERAWATT' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'TW'))), 'Voltage' => array('standard' => 'VOLT', 'units' => array('MILLIVOLT' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mV'), 'CENTIVOLT' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cV'), 'DECIVOLT' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dV'), 'VOLT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'V'), 'DEKAVOLT' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daV'), 'HECTOVOLT' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hV'), 'KILOVOLT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kV'))), 'Intensity' => array('standard' => 'AMPERE', 'units' => array('MILLIAMPERE' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mA'), 'CENTIAMPERE' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cA'), 'DECIAMPERE' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dA'), 'AMPERE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'A'), 'DEKAMPERE' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daA'), 'HECTOAMPERE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hA'), 'KILOAMPERE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kA'))), 'Resistance' => array('standard' => 'OHM', 'units' => array('MILLIOHM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mΩ'), 'CENTIOHM' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cΩ'), 'DECIOHM' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dΩ'), 'OHM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ω'), 'DEKAOHM' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daΩ'), 'HECTOHM' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hΩ'), 'KILOHM' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kΩ'), 'MEGOHM' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MΩ'))), 'Speed' => array('standard' => 'METER_PER_SECOND', 'units' => array('METER_PER_SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'mdivs'), 'METER_PER_MINUTE' => array('convert' => array(0 => array('div' => 60)), 'symbol' => 'mdivm'), 'METER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1), 1 => array('div' => 3600)), 'symbol' => 'mdivh'), 'KILOMETER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1000), 1 => array('div' => 3600)), 'symbol' => 'kmdivh'), 'FOOT_PER_SECOND' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ftdivs'), 'FOOT_PER_HOUR' => array('convert' => array(0 => array('mul' => 0.30480000000000002), 1 => array('div' => 3600)), 'symbol' => 'ftdivh'), 'YARD_PER_HOUR' => array('convert' => array(0 => array('mul' => '0.9144\''), 1 => array('div' => 3600)), 'symbol' => 'yddivh'), 'MILE_PER_HOUR' => array('convert' => array(0 => array('mul' => 1609.3440000000001), 1 => array('div' => 3600)), 'symbol' => 'midivh'))), 'ElectricCharge' => array('standard' => 'AMPEREHOUR', 'units' => array('MILLIAMPEREHOUR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mAh'), 'AMPEREHOUR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ah'), 'MILLICOULOMB' => array('convert' => array(0 => array('div' => 3600000)), 'symbol' => 'mC'), 'CENTICOULOMB' => array('convert' => array(0 => array('div' => 360000)), 'symbol' => 'cC'), 'DECICOULOMB' => array('convert' => array(0 => array('div' => 36000)), 'symbol' => 'dC'), 'COULOMB' => array('convert' => array(0 => array('div' => 3600)), 'symbol' => 'C'), 'DEKACOULOMB' => array('convert' => array(0 => array('div' => 360)), 'symbol' => 'daC'), 'HECTOCOULOMB' => array('convert' => array(0 => array('div' => 36)), 'symbol' => 'hC'), 'KILOCOULOMB' => array('convert' => array(0 => array('div' => 3.6000000000000001)), 'symbol' => 'kC'))), 'Duration' => array('standard' => 'SECOND', 'units' => array('MILLISECOND' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'ms'), 'SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 's'), 'MINUTE' => array('convert' => array(0 => array('mul' => 60)), 'symbol' => 'm'), 'HOUR' => array('convert' => array(0 => array('mul' => 3600)), 'symbol' => 'h'), 'DAY' => array('convert' => array(0 => array('mul' => 86400)), 'symbol' => 'd'), 'WEEK' => array('convert' => array(0 => array('mul' => 604800)), 'symbol' => 'week'), 'MONTH' => array('convert' => array(0 => array('mul' => 18748800)), 'symbol' => 'month'), 'YEAR' => array('convert' => array(0 => array('mul' => 31536000)), 'symbol' => 'year'))), 'Temperature' => array('standard' => 'KELVIN', 'units' => array('CELSIUS' => array('convert' => array(0 => array('add' => 273.14999999999998)), 'symbol' => '°C'), 'FAHRENHEIT' => array('convert' => array(0 => array('sub' => 32), 1 => array('div' => 1.8), 2 => array('add' => 273.14999999999998)), 'symbol' => '°F'), 'KELVIN' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => '°K'), 'RANKINE' => array('convert' => array(0 => array('div' => 1.8)), 'symbol' => '°R'), 'REAUMUR' => array('convert' => array(0 => array('mul' => 1.25), 1 => array('add' => 273.14999999999998)), 'symbol' => '°r'))), 'Volume' => array('standard' => 'CUBIC_METER', 'units' => array('CUBIC_MILLIMETER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-9)), 'symbol' => 'mm³'), 'CUBIC_CENTIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'cm³'), 'MILLILITER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'ml'), 'CENTILITER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'cl'), 'DECILITER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'dl'), 'CUBIC_DECIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'dm³'), 'LITER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'l'), 'CUBIC_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm³'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 160)), 'symbol' => 'oz'), 'PINT' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 8)), 'symbol' => 'pt'), 'BARREL' => array('convert' => array(0 => array('mul' => 0.16365924000000001)), 'symbol' => 'bbl'), 'GALLON' => array('convert' => array(0 => array('mul' => 0.00454609)), 'symbol' => 'gal'), 'CUBIC_FOOT' => array('convert' => array(0 => array('mul' => 6.5411915900000004), 1 => array('div' => 231)), 'symbol' => 'ft³'), 'CUBIC_INCH' => array('convert' => array(0 => array('mul' => 0.0037854118000000001), 1 => array('div' => 231)), 'symbol' => 'in³'), 'CUBIC_YARD' => array('convert' => array(0 => array('mul' => 0.76455486100000003)), 'symbol' => 'yd³'))), 'Weight' => array('standard' => 'KILOGRAM', 'units' => array('MILLIGRAM' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mg'), 'GRAM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'g'), 'KILOGRAM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'kg'), 'TON' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 't'), 'GRAIN' => array('convert' => array(0 => array('mul' => 6.4798909999999995E-5)), 'symbol' => 'gr'), 'DENIER' => array('convert' => array(0 => array('mul' => 0.0012750000000000001)), 'symbol' => 'denier'), 'ONCE' => array('convert' => array(0 => array('mul' => 0.030589999999999999)), 'symbol' => 'once'), 'MARC' => array('convert' => array(0 => array('mul' => 0.24475)), 'symbol' => 'marc'), 'LIVRE' => array('convert' => array(0 => array('mul' => 0.48949999999999999)), 'symbol' => 'livre'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.45359237000000002), 1 => array('div' => 16)), 'symbol' => 'oz'), 'POUND' => array('convert' => array(0 => array('mul' => 0.45359237000000002)), 'symbol' => 'lb'))), 'Pressure' => array('standard' => 'BAR', 'units' => array('BAR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Bar'), 'PASCAL' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'Pa'), 'HECTOPASCAL' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'hPa'), 'MILLIBAR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mBar'), 'ATM' => array('convert' => array(0 => array('mul' => 0.98692299999999999)), 'symbol' => 'atm'), 'PSI' => array('convert' => array(0 => array('mul' => 14.503769853730221)), 'symbol' => 'PSI'), 'TORR' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'Torr'), 'MMHG' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'mmHg'))), 'Energy' => array('standard' => 'JOULE', 'units' => array('JOULE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'J'), 'CALORIE' => array('convert' => array(0 => array('mul' => 4.1840000000000002)), 'symbol' => 'cal'), 'KILOCALORIE' => array('convert' => array(0 => array('mul' => 4184)), 'symbol' => 'kcal'), 'KILOJOULE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kJ'))), 'CaseBox' => array('standard' => 'PIECE', 'units' => array('PIECE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Pc'), 'DOZEN' => array('convert' => array(0 => array('mul' => 12)), 'symbol' => 'Dz'))))));
    }
    protected function getPimEnrich_Controller_AttributeGroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.attribute_group', 'request');
        }
        return $this->services['pim_enrich.controller.attribute_group'] = $this->scopedServices['request']['pim_enrich.controller.attribute_group'] = new \Pim\Bundle\EnrichBundle\Controller\AttributeGroupController($this->get('request'), $this->get('router'), $this->get('form.factory'), $this->get('translator'), $this->get('event_dispatcher'), $this->get('oro_security.security_facade'), $this->get('pim_enrich.form.handler.attribute_group'), $this->get('pim_enrich.form.attribute_group'), $this->get('pim_catalog.manager.attribute_group'), $this->get('pim_catalog.saver.attribute_group'), $this->get('pim_catalog.remover.attribute_group'), $this->get('pim_catalog.repository.attribute_group'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimEnrich_Controller_AttributeOptionService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.attribute_option', 'request');
        }
        return $this->services['pim_enrich.controller.attribute_option'] = $this->scopedServices['request']['pim_enrich.controller.attribute_option'] = new \Pim\Bundle\EnrichBundle\Controller\AttributeOptionController($this->get('pim_internal_api_serializer'), $this->get('doctrine.orm.default_entity_manager'), $this->get('form.factory'), $this->get('fos_rest.view_handler'), $this->get('pim_catalog.manager.attribute_options_sorter'), $this->get('pim_catalog.factory.attribute_option'), $this->get('pim_catalog.saver.attribute_option'), $this->get('pim_catalog.remover.attribute_option'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.attribute_option'));
    }
    protected function getPimEnrich_Controller_CategoryTree_ProductService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.category_tree.product', 'request');
        }
        $this->services['pim_enrich.controller.category_tree.product'] = $this->scopedServices['request']['pim_enrich.controller.category_tree.product'] = $instance = new \Pim\Bundle\EnrichBundle\Controller\CategoryTreeController($this->get('event_dispatcher'), $this->get('pim_user.context.user'), $this->get('pim_catalog.saver.category'), $this->get('pim_catalog.remover.category'), $this->get('pim_catalog.factory.category'), $this->get('pim_catalog.repository.category'), $this->get('oro_security.security_facade'), array('related_entity' => 'product', 'form_type' => 'pim_category', 'acl' => 'pim_enrich_product', 'route' => 'pim_enrich'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getPimEnrich_Controller_ChannelService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.channel', 'request');
        }
        return $this->services['pim_enrich.controller.channel'] = $this->scopedServices['request']['pim_enrich.controller.channel'] = new \Pim\Bundle\EnrichBundle\Controller\ChannelController($this->get('request'), $this->get('router'), $this->get('translator'), $this->get('pim_enrich.form.handler.channel'), $this->get('pim_enrich.form.channel'), $this->get('pim_catalog.remover.channel'), $this->get('pim_catalog.saver.locale'), $this->get('pim_catalog.repository.channel'));
    }
    protected function getPimEnrich_Controller_CompletenessService()
    {
        return $this->services['pim_enrich.controller.completeness'] = new \Pim\Bundle\EnrichBundle\Controller\CompletenessController($this->get('pim_catalog.manager.completeness'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.channel'), $this->get('pim_user.context.user'), $this->get('templating'));
    }
    protected function getPimEnrich_Controller_CurrencyService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.currency', 'request');
        }
        return $this->services['pim_enrich.controller.currency'] = $this->scopedServices['request']['pim_enrich.controller.currency'] = new \Pim\Bundle\EnrichBundle\Controller\CurrencyController($this->get('request'), $this->get('router'), $this->get('pim_catalog.saver.currency'));
    }
    protected function getPimEnrich_Controller_FamilyService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.family', 'request');
        }
        return $this->services['pim_enrich.controller.family'] = $this->scopedServices['request']['pim_enrich.controller.family'] = new \Pim\Bundle\EnrichBundle\Controller\FamilyController($this->get('request'), $this->get('templating'), $this->get('router'), $this->get('form.factory'), $this->get('translator'), $this->get('akeneo_storage_utils.doctrine.smart_manager_registry'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.factory.family'), $this->get('pim_enrich.form.handler.family'), $this->get('pim_enrich.form.family'), $this->get('pim_catalog.saver.family'), $this->get('pim_catalog.remover.family'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.family'), $this->get('validator'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimEnrich_Controller_Family_MassEditActionService()
    {
        return $this->services['pim_enrich.controller.family.mass_edit_action'] = new \Pim\Bundle\EnrichBundle\Controller\MassEdit\FamilyController($this->get('router'), $this->get('templating'), $this->get('oro_datagrid.mass_action.parameters_parser'), $this->get('pim_datagrid.adapter.oro_to_pim_grid_filter'), $this->get('pim_enrich.mass_edit_action.form_resolver'), $this->get('pim_enrich.mass_edit_action.operation.registry'), $this->get('pim_enrich.mass_edit_action.operation_job_launcher'));
    }
    protected function getPimEnrich_Controller_FileService()
    {
        return $this->services['pim_enrich.controller.file'] = new \Pim\Bundle\EnrichBundle\Controller\FileController($this->get('liip_imagine.controller'), $this->get('akeneo_file_storage.file_storage.filesystem_provider'), $this->get('akeneo_file_storage.repository.file_info'), $this->get('pim_enrich.guesser.file_type'), $this->get('pim_enrich.provider.default_image'), array(0 => 'catalogStorage'));
    }
    protected function getPimEnrich_Controller_GroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.group', 'request');
        }
        return $this->services['pim_enrich.controller.group'] = $this->scopedServices['request']['pim_enrich.controller.group'] = new \Pim\Bundle\EnrichBundle\Controller\GroupController($this->get('request'), $this->get('templating'), $this->get('router'), $this->get('pim_catalog.repository.group_type'), $this->get('pim_enrich.form.handler.group'), $this->get('pim_enrich.form.group'), $this->get('pim_catalog.factory.group'));
    }
    protected function getPimEnrich_Controller_GroupTypeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.group_type', 'request');
        }
        return $this->services['pim_enrich.controller.group_type'] = $this->scopedServices['request']['pim_enrich.controller.group_type'] = new \Pim\Bundle\EnrichBundle\Controller\GroupTypeController($this->get('request'), $this->get('router'), $this->get('translator'), $this->get('pim_enrich.form.handler.group_type'), $this->get('pim_enrich.form.group_type'), $this->get('pim_catalog.remover.group_type'));
    }
    protected function getPimEnrich_Controller_JobTrackerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.job_tracker', 'request');
        }
        return $this->services['pim_enrich.controller.job_tracker'] = $this->scopedServices['request']['pim_enrich.controller.job_tracker'] = new \Pim\Bundle\EnrichBundle\Controller\JobTrackerController($this->get('templating'), $this->get('translator'), $this->get('event_dispatcher'), $this->get('pim_import_export.repository.job_execution'), $this->get('pim_connector.event_listener.archivist'), $this->get('pim_serializer'), $this->get('akeneo_batch.manager.job_execution'));
    }
    protected function getPimEnrich_Controller_LocaleService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.locale', 'request');
        }
        return $this->services['pim_enrich.controller.locale'] = $this->scopedServices['request']['pim_enrich.controller.locale'] = new \Pim\Bundle\EnrichBundle\Controller\LocaleController($this->get('request'), $this->get('router'), $this->get('form.factory'));
    }
    protected function getPimEnrich_Controller_ProductService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.product', 'request');
        }
        return $this->services['pim_enrich.controller.product'] = $this->scopedServices['request']['pim_enrich.controller.product'] = new \Pim\Bundle\EnrichBundle\Controller\ProductController($this->get('router'), $this->get('security.token_storage'), $this->get('form.factory'), $this->get('translator'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.category'), $this->get('pim_user.context.user'), $this->get('oro_security.security_facade'), $this->get('pim_catalog.saver.product'), $this->get('pim_enrich.manager.sequential_edit'), $this->get('pim_catalog.builder.product'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimEnrich_Controller_Product_MassEditActionService()
    {
        return $this->services['pim_enrich.controller.product.mass_edit_action'] = new \Pim\Bundle\EnrichBundle\Controller\MassEdit\ProductController($this->get('router'), $this->get('templating'), $this->get('oro_datagrid.mass_action.parameters_parser'), $this->get('pim_datagrid.adapter.oro_to_pim_grid_filter'), $this->get('pim_enrich.mass_edit_action.form_resolver'), $this->get('pim_enrich.mass_edit_action.operation.registry'), $this->get('pim_enrich.mass_edit_action.operation_job_launcher'));
    }
    protected function getPimEnrich_Controller_Rest_AssociationTypeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.rest.association_type', 'request');
        }
        return $this->services['pim_enrich.controller.rest.association_type'] = $this->scopedServices['request']['pim_enrich.controller.rest.association_type'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\AssociationTypeController($this->get('pim_catalog.repository.association_type'), $this->get('pim_internal_api_serializer'), $this->get('pim_catalog.remover.association_type'), $this->get('pim_catalog.updater.association_type'), $this->get('pim_catalog.saver.association_type'), $this->get('validator'), $this->get('pim_user.context.user'));
    }
    protected function getPimEnrich_Controller_Rest_AttributeService()
    {
        return $this->services['pim_enrich.controller.rest.attribute'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\AttributeController($this->get('pim_catalog.repository.attribute'), $this->get('pim_internal_api_serializer'), $this->get('security.token_storage'), $this->get('pim_catalog.filter.chained'), $this->get('pim_enrich.repository.attribute.search'));
    }
    protected function getPimEnrich_Controller_Rest_AttributeGroupService()
    {
        return $this->services['pim_enrich.controller.rest.attribute_group'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\AttributeGroupController($this->get('pim_catalog.repository.attribute_group'), $this->get('pim_serializer'), $this->get('pim_catalog.filter.chained'));
    }
    protected function getPimEnrich_Controller_Rest_AttributeOptionService()
    {
        return $this->services['pim_enrich.controller.rest.attribute_option'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\AttributeOptionController($this->get('pim_enrich.repository.attribute_option.search'), $this->get('pim_enrich.normalizer.structured.attribute_option'));
    }
    protected function getPimEnrich_Controller_Rest_CategoryService()
    {
        return $this->services['pim_enrich.controller.rest.category'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\CategoryController($this->get('pim_catalog.repository.category'), $this->get('pim_enrich.twig.category_extension'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Controller_Rest_ChannelService()
    {
        return $this->services['pim_enrich.controller.rest.channel'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\ChannelController($this->get('pim_catalog.repository.channel'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Controller_Rest_CompletenessService()
    {
        return $this->services['pim_enrich.controller.rest.completeness'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\CompletenessController($this->get('pim_catalog.manager.completeness'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.channel'), $this->get('pim_user.context.user'), $this->get('pim_enrich.normalizer.completeness_collection'), $this->get('pim_catalog.filter.chained'), $this->get('doctrine.orm.default_entity_manager'), 'doctrine/orm');
    }
    protected function getPimEnrich_Controller_Rest_CurrencyService()
    {
        return $this->services['pim_enrich.controller.rest.currency'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\CurrencyController($this->get('pim_catalog.repository.currency'));
    }
    protected function getPimEnrich_Controller_Rest_FamilyService()
    {
        return $this->services['pim_enrich.controller.rest.family'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\FamilyController($this->get('pim_catalog.repository.family'), $this->get('pim_internal_api_serializer'), $this->get('pim_enrich.repository.family.search'));
    }
    protected function getPimEnrich_Controller_Rest_FormExtensionService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.rest.form_extension', 'request');
        }
        return $this->services['pim_enrich.controller.rest.form_extension'] = $this->scopedServices['request']['pim_enrich.controller.rest.form_extension'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\FormExtensionController($this->get('pim_enrich.provider.form_extension'));
    }
    protected function getPimEnrich_Controller_Rest_GroupService()
    {
        return $this->services['pim_enrich.controller.rest.group'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\GroupController($this->get('pim_catalog.repository.group'), $this->get('pim_catalog.repository.product'), $this->get('pim_internal_api_serializer'), $this->get('pim_user.context.user'), $this->get('pim_catalog.updater.group'), $this->get('pim_catalog.validator.product'), $this->get('pim_enrich.normalizer.group_violation'), $this->get('pim_catalog.saver.group'), $this->get('pim_catalog.remover.group'));
    }
    protected function getPimEnrich_Controller_Rest_JobInstanceService()
    {
        return $this->services['pim_enrich.controller.rest.job_instance'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\JobInstanceController($this->get('pim_import_export.repository.job_instance'), $this->get('akeneo_batch.job.job_registry'), $this->get('pim_catalog.normalizer.standard.job_instance'), $this->get('akeneo_batch.updater.job_instance'), $this->get('akeneo_batch.saver.job_instance'), $this->get('akeneo_batch.remover.job_instance'), $this->get('validator'), $this->get('akeneo_batch.job.job_parameters_validator'), $this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.launcher.simple_job_launcher'), $this->get('security.token_storage'), $this->get('router'), $this->get('pim_enrich.provider.form.chained'), $this->get('pim_catalog.filter.chained'));
    }
    protected function getPimEnrich_Controller_Rest_LocaleService()
    {
        return $this->services['pim_enrich.controller.rest.locale'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\LocaleController($this->get('pim_catalog.repository.locale'), $this->get('pim_internal_api_serializer'), $this->get('pim_catalog.filter.chained'));
    }
    protected function getPimEnrich_Controller_Rest_MeasuresService()
    {
        return $this->services['pim_enrich.controller.rest.measures'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\MeasuresController(array('measures_config' => array('Area' => array('standard' => 'SQUARE_METER', 'units' => array('SQUARE_MILLIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mm²'), 'SQUARE_CENTIMETER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'cm²'), 'SQUARE_DECIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'dm²'), 'SQUARE_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm²'), 'CENTIARE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'ca'), 'SQUARE_DEKAMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'dam²'), 'ARE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'a'), 'SQUARE_HECTOMETER' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'hm²'), 'HECTARE' => array('convert' => array(0 => array('mul' => 10000)), 'symbol' => 'ha'), 'SQUARE_KILOMETER' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'km²'), 'SQUARE_MIL' => array('convert' => array(0 => array('mul' => 6.4515999999999997E-10)), 'symbol' => 'sq mil'), 'SQUARE_INCH' => array('convert' => array(0 => array('mul' => 0.00064515999999999998)), 'symbol' => 'in²'), 'SQUARE_FOOT' => array('convert' => array(0 => array('mul' => 0.092903040000000006)), 'symbol' => 'ft²'), 'SQUARE_YARD' => array('convert' => array(0 => array('mul' => 0.83612735999999999)), 'symbol' => 'yd²'), 'ARPENT' => array('convert' => array(0 => array('mul' => 3418.8899999999999)), 'symbol' => 'arpent'), 'ACRE' => array('convert' => array(0 => array('mul' => 4046.8564219999998)), 'symbol' => 'A'), 'SQUARE_FURLONG' => array('convert' => array(0 => array('mul' => 40468.726000000002)), 'symbol' => 'fur²'), 'SQUARE_MILE' => array('convert' => array(0 => array('mul' => 2589988.1103360001)), 'symbol' => 'mi²'))), 'Binary' => array('standard' => 'BYTE', 'units' => array('BIT' => array('convert' => array(0 => array('mul' => 0.125)), 'symbol' => 'b'), 'BYTE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'B'), 'KILOBYTE' => array('convert' => array(0 => array('mul' => 1024)), 'symbol' => 'kB'), 'MEGABYTE' => array('convert' => array(0 => array('mul' => 1048576)), 'symbol' => 'MB'), 'GIGABYTE' => array('convert' => array(0 => array('mul' => 1073741824)), 'symbol' => 'GB'), 'TERABYTE' => array('convert' => array(0 => array('mul' => 1099511627776)), 'symbol' => 'TB'))), 'Decibel' => array('standard' => 'DECIBEL', 'units' => array('DECIBEL' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'dB'))), 'Frequency' => array('standard' => 'HERTZ', 'units' => array('HERTZ' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Hz'), 'KILOHERTZ' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kHz'), 'MEGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MHz'), 'GIGAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GHz'), 'TERAHERTZ' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'THz'))), 'Length' => array('standard' => 'METER', 'units' => array('MILLIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mm'), 'CENTIMETER' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cm'), 'DECIMETER' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dm'), 'METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm'), 'DEKAMETER' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'dam'), 'HECTOMETER' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hm'), 'KILOMETER' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'km'), 'MIL' => array('convert' => array(0 => array('mul' => 2.5400000000000001E-5)), 'symbol' => 'mil'), 'INCH' => array('convert' => array(0 => array('mul' => 0.025399999999999999)), 'symbol' => 'in'), 'FEET' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ft'), 'YARD' => array('convert' => array(0 => array('mul' => 0.91439999999999999)), 'symbol' => 'yd'), 'CHAIN' => array('convert' => array(0 => array('mul' => 20.116800000000001)), 'symbol' => 'ch'), 'FURLONG' => array('convert' => array(0 => array('mul' => 201.16800000000001)), 'symbol' => 'fur'), 'MILE' => array('convert' => array(0 => array('mul' => 1609.3440000000001)), 'symbol' => 'mi'))), 'Power' => array('standard' => 'WATT', 'units' => array('WATT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'W'), 'KILOWATT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kW'), 'MEGAWATT' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MW'), 'GIGAWATT' => array('convert' => array(0 => array('mul' => 1000000000)), 'symbol' => 'GW'), 'TERAWATT' => array('convert' => array(0 => array('mul' => 1000000000000)), 'symbol' => 'TW'))), 'Voltage' => array('standard' => 'VOLT', 'units' => array('MILLIVOLT' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mV'), 'CENTIVOLT' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cV'), 'DECIVOLT' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dV'), 'VOLT' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'V'), 'DEKAVOLT' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daV'), 'HECTOVOLT' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hV'), 'KILOVOLT' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kV'))), 'Intensity' => array('standard' => 'AMPERE', 'units' => array('MILLIAMPERE' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mA'), 'CENTIAMPERE' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cA'), 'DECIAMPERE' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dA'), 'AMPERE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'A'), 'DEKAMPERE' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daA'), 'HECTOAMPERE' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hA'), 'KILOAMPERE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kA'))), 'Resistance' => array('standard' => 'OHM', 'units' => array('MILLIOHM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mΩ'), 'CENTIOHM' => array('convert' => array(0 => array('mul' => 0.01)), 'symbol' => 'cΩ'), 'DECIOHM' => array('convert' => array(0 => array('mul' => 0.10000000000000001)), 'symbol' => 'dΩ'), 'OHM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ω'), 'DEKAOHM' => array('convert' => array(0 => array('mul' => 10)), 'symbol' => 'daΩ'), 'HECTOHM' => array('convert' => array(0 => array('mul' => 100)), 'symbol' => 'hΩ'), 'KILOHM' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kΩ'), 'MEGOHM' => array('convert' => array(0 => array('mul' => 1000000)), 'symbol' => 'MΩ'))), 'Speed' => array('standard' => 'METER_PER_SECOND', 'units' => array('METER_PER_SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'mdivs'), 'METER_PER_MINUTE' => array('convert' => array(0 => array('div' => 60)), 'symbol' => 'mdivm'), 'METER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1), 1 => array('div' => 3600)), 'symbol' => 'mdivh'), 'KILOMETER_PER_HOUR' => array('convert' => array(0 => array('mul' => 1000), 1 => array('div' => 3600)), 'symbol' => 'kmdivh'), 'FOOT_PER_SECOND' => array('convert' => array(0 => array('mul' => 0.30480000000000002)), 'symbol' => 'ftdivs'), 'FOOT_PER_HOUR' => array('convert' => array(0 => array('mul' => 0.30480000000000002), 1 => array('div' => 3600)), 'symbol' => 'ftdivh'), 'YARD_PER_HOUR' => array('convert' => array(0 => array('mul' => '0.9144\''), 1 => array('div' => 3600)), 'symbol' => 'yddivh'), 'MILE_PER_HOUR' => array('convert' => array(0 => array('mul' => 1609.3440000000001), 1 => array('div' => 3600)), 'symbol' => 'midivh'))), 'ElectricCharge' => array('standard' => 'AMPEREHOUR', 'units' => array('MILLIAMPEREHOUR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mAh'), 'AMPEREHOUR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Ah'), 'MILLICOULOMB' => array('convert' => array(0 => array('div' => 3600000)), 'symbol' => 'mC'), 'CENTICOULOMB' => array('convert' => array(0 => array('div' => 360000)), 'symbol' => 'cC'), 'DECICOULOMB' => array('convert' => array(0 => array('div' => 36000)), 'symbol' => 'dC'), 'COULOMB' => array('convert' => array(0 => array('div' => 3600)), 'symbol' => 'C'), 'DEKACOULOMB' => array('convert' => array(0 => array('div' => 360)), 'symbol' => 'daC'), 'HECTOCOULOMB' => array('convert' => array(0 => array('div' => 36)), 'symbol' => 'hC'), 'KILOCOULOMB' => array('convert' => array(0 => array('div' => 3.6000000000000001)), 'symbol' => 'kC'))), 'Duration' => array('standard' => 'SECOND', 'units' => array('MILLISECOND' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'ms'), 'SECOND' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 's'), 'MINUTE' => array('convert' => array(0 => array('mul' => 60)), 'symbol' => 'm'), 'HOUR' => array('convert' => array(0 => array('mul' => 3600)), 'symbol' => 'h'), 'DAY' => array('convert' => array(0 => array('mul' => 86400)), 'symbol' => 'd'), 'WEEK' => array('convert' => array(0 => array('mul' => 604800)), 'symbol' => 'week'), 'MONTH' => array('convert' => array(0 => array('mul' => 18748800)), 'symbol' => 'month'), 'YEAR' => array('convert' => array(0 => array('mul' => 31536000)), 'symbol' => 'year'))), 'Temperature' => array('standard' => 'KELVIN', 'units' => array('CELSIUS' => array('convert' => array(0 => array('add' => 273.14999999999998)), 'symbol' => '°C'), 'FAHRENHEIT' => array('convert' => array(0 => array('sub' => 32), 1 => array('div' => 1.8), 2 => array('add' => 273.14999999999998)), 'symbol' => '°F'), 'KELVIN' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => '°K'), 'RANKINE' => array('convert' => array(0 => array('div' => 1.8)), 'symbol' => '°R'), 'REAUMUR' => array('convert' => array(0 => array('mul' => 1.25), 1 => array('add' => 273.14999999999998)), 'symbol' => '°r'))), 'Volume' => array('standard' => 'CUBIC_METER', 'units' => array('CUBIC_MILLIMETER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-9)), 'symbol' => 'mm³'), 'CUBIC_CENTIMETER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'cm³'), 'MILLILITER' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'ml'), 'CENTILITER' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'cl'), 'DECILITER' => array('convert' => array(0 => array('mul' => 0.0001)), 'symbol' => 'dl'), 'CUBIC_DECIMETER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'dm³'), 'LITER' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'l'), 'CUBIC_METER' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'm³'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 160)), 'symbol' => 'oz'), 'PINT' => array('convert' => array(0 => array('mul' => 0.00454609), 1 => array('div' => 8)), 'symbol' => 'pt'), 'BARREL' => array('convert' => array(0 => array('mul' => 0.16365924000000001)), 'symbol' => 'bbl'), 'GALLON' => array('convert' => array(0 => array('mul' => 0.00454609)), 'symbol' => 'gal'), 'CUBIC_FOOT' => array('convert' => array(0 => array('mul' => 6.5411915900000004), 1 => array('div' => 231)), 'symbol' => 'ft³'), 'CUBIC_INCH' => array('convert' => array(0 => array('mul' => 0.0037854118000000001), 1 => array('div' => 231)), 'symbol' => 'in³'), 'CUBIC_YARD' => array('convert' => array(0 => array('mul' => 0.76455486100000003)), 'symbol' => 'yd³'))), 'Weight' => array('standard' => 'KILOGRAM', 'units' => array('MILLIGRAM' => array('convert' => array(0 => array('mul' => 9.9999999999999995E-7)), 'symbol' => 'mg'), 'GRAM' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'g'), 'KILOGRAM' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'kg'), 'TON' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 't'), 'GRAIN' => array('convert' => array(0 => array('mul' => 6.4798909999999995E-5)), 'symbol' => 'gr'), 'DENIER' => array('convert' => array(0 => array('mul' => 0.0012750000000000001)), 'symbol' => 'denier'), 'ONCE' => array('convert' => array(0 => array('mul' => 0.030589999999999999)), 'symbol' => 'once'), 'MARC' => array('convert' => array(0 => array('mul' => 0.24475)), 'symbol' => 'marc'), 'LIVRE' => array('convert' => array(0 => array('mul' => 0.48949999999999999)), 'symbol' => 'livre'), 'OUNCE' => array('convert' => array(0 => array('mul' => 0.45359237000000002), 1 => array('div' => 16)), 'symbol' => 'oz'), 'POUND' => array('convert' => array(0 => array('mul' => 0.45359237000000002)), 'symbol' => 'lb'))), 'Pressure' => array('standard' => 'BAR', 'units' => array('BAR' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Bar'), 'PASCAL' => array('convert' => array(0 => array('mul' => 1.0000000000000001E-5)), 'symbol' => 'Pa'), 'HECTOPASCAL' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'hPa'), 'MILLIBAR' => array('convert' => array(0 => array('mul' => 0.001)), 'symbol' => 'mBar'), 'ATM' => array('convert' => array(0 => array('mul' => 0.98692299999999999)), 'symbol' => 'atm'), 'PSI' => array('convert' => array(0 => array('mul' => 14.503769853730221)), 'symbol' => 'PSI'), 'TORR' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'Torr'), 'MMHG' => array('convert' => array(0 => array('mul' => 750.06375541921)), 'symbol' => 'mmHg'))), 'Energy' => array('standard' => 'JOULE', 'units' => array('JOULE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'J'), 'CALORIE' => array('convert' => array(0 => array('mul' => 4.1840000000000002)), 'symbol' => 'cal'), 'KILOCALORIE' => array('convert' => array(0 => array('mul' => 4184)), 'symbol' => 'kcal'), 'KILOJOULE' => array('convert' => array(0 => array('mul' => 1000)), 'symbol' => 'kJ'))), 'CaseBox' => array('standard' => 'PIECE', 'units' => array('PIECE' => array('convert' => array(0 => array('mul' => 1)), 'symbol' => 'Pc'), 'DOZEN' => array('convert' => array(0 => array('mul' => 12)), 'symbol' => 'Dz'))))));
    }
    protected function getPimEnrich_Controller_Rest_MediaService()
    {
        return $this->services['pim_enrich.controller.rest.media'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\MediaController($this->get('validator'), $this->get('akeneo_file_storage.file_storage.path_generator'), '/tmp/pim/file_storage');
    }
    protected function getPimEnrich_Controller_Rest_NavigationHistoryService()
    {
        return $this->services['pim_enrich.controller.rest.navigation_history'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\NavigationHistoryController($this->get('security.token_storage'), $this->get('pim_navigation.repository.navigation_history'), $this->get('oro_navigation.item.factory'), $this->get('pim_navigation.saver.navigation_history_item'));
    }
    protected function getPimEnrich_Controller_Rest_ProductService()
    {
        return $this->services['pim_enrich.controller.rest.product'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\ProductController($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.updater.product'), $this->get('pim_catalog.saver.product'), $this->get('pim_internal_api_serializer'), $this->get('pim_catalog.validator.product'), $this->get('pim_user.context.user'), $this->get('pim_catalog.filter.chained'), $this->get('pim_enrich.filter.product_edit_data'), $this->get('pim_catalog.remover.product'), $this->get('pim_catalog.builder.product'), $this->get('pim_catalog.localization.localizer.converter'), $this->get('pim_catalog.comparator.filter.product'), $this->get('pim_enrich.converter.enrich_to_standard.product_value'));
    }
    protected function getPimEnrich_Controller_Rest_ProductCategoryService()
    {
        return $this->services['pim_enrich.controller.rest.product_category'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\ProductCategoryController($this->get('pim_catalog.repository.product'), $this->get('pim_catalog.repository.product_category'));
    }
    protected function getPimEnrich_Controller_Rest_ProductCommentService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.rest.product_comment', 'request');
        }
        return $this->services['pim_enrich.controller.rest.product_comment'] = $this->scopedServices['request']['pim_enrich.controller.rest.product_comment'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\ProductCommentController($this->get('security.token_storage'), $this->get('form.factory'), $this->get('pim_catalog.repository.product'), $this->get('pim_comment.repository.comment'), $this->get('pim_comment.saver.comment'), $this->get('pim_comment.builder.comment'), $this->get('pim_serializer'), $this->get('validator'), $this->get('pim_catalog.localization.presenter.datetime'), $this->get('pim_enrich.resolver.locale'));
    }
    protected function getPimEnrich_Controller_Rest_VariantGroupService()
    {
        return $this->services['pim_enrich.controller.rest.variant_group'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\VariantGroupController($this->get('pim_catalog.repository.group'), $this->get('pim_internal_api_serializer'), $this->get('pim_catalog.updater.variant_group'), $this->get('pim_catalog.saver.group'), $this->get('pim_catalog.remover.group'), $this->get('pim_user.context.user'), $this->get('pim_catalog.localization.localizer.converter'), $this->get('pim_catalog.validator.product'), $this->get('pim_enrich.normalizer.variant_group_violation'), $this->get('pim_enrich.filter.variant_group_edit_data'), $this->get('pim_enrich.converter.enrich_to_standard.product_value'));
    }
    protected function getPimEnrich_Controller_Rest_VariantGroupAttributeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.rest.variant_group_attribute', 'request');
        }
        return $this->services['pim_enrich.controller.rest.variant_group_attribute'] = $this->scopedServices['request']['pim_enrich.controller.rest.variant_group_attribute'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\VariantGroupAttributeController($this->get('pim_catalog.repository.group'), $this->get('pim_catalog.saver.group'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.builder.product_template'));
    }
    protected function getPimEnrich_Controller_Rest_VersioningService()
    {
        return $this->services['pim_enrich.controller.rest.versioning'] = new \Pim\Bundle\EnrichBundle\Controller\Rest\VersioningController($this->get('pim_versioning.repository.version'), $this->get('pim_catalog.resolver.fqcn'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Controller_SequentialEditService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.sequential_edit', 'request');
        }
        return $this->services['pim_enrich.controller.sequential_edit'] = $this->scopedServices['request']['pim_enrich.controller.sequential_edit'] = new \Pim\Bundle\EnrichBundle\Controller\SequentialEditController($this->get('router'), $this->get('pim_datagrid.extension.mass_action.dispatcher'), $this->get('pim_enrich.manager.sequential_edit'), $this->get('pim_user.context.user'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Controller_VariantGroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.controller.variant_group', 'request');
        }
        return $this->services['pim_enrich.controller.variant_group'] = $this->scopedServices['request']['pim_enrich.controller.variant_group'] = new \Pim\Bundle\EnrichBundle\Controller\VariantGroupController($this->get('router'), $this->get('pim_catalog.repository.group_type'), $this->get('pim_enrich.form.handler.variant_group'), $this->get('pim_enrich.form.variant_group'), $this->get('pim_catalog.factory.group'), $this->get('pim_catalog.builder.product_template'));
    }
    protected function getPimEnrich_Converter_EnrichToStandard_ProductValueService()
    {
        return $this->services['pim_enrich.converter.enrich_to_standard.product_value'] = new \Pim\Component\Enrich\Converter\EnrichToStandard\ProductValueConverter($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimEnrich_Converter_StandardToEnrich_ProductValueService()
    {
        return $this->services['pim_enrich.converter.standard_to_enrich.product_value'] = new \Pim\Component\Enrich\Converter\StandardToEnrich\ProductValueConverter($this->get('pim_catalog.repository.attribute'), $this->get('akeneo_file_storage.repository.file_info'));
    }
    protected function getPimEnrich_Doctrine_Counter_CategoryProductService()
    {
        return $this->services['pim_enrich.doctrine.counter.category_product'] = new \Pim\Bundle\EnrichBundle\Doctrine\Counter\CategoryItemsCounter($this->get('pim_catalog.repository.product_category'), $this->get('pim_catalog.repository.category'));
    }
    protected function getPimEnrich_Doctrine_Counter_CategoryRegistryService()
    {
        $this->services['pim_enrich.doctrine.counter.category_registry'] = $instance = new \Pim\Bundle\EnrichBundle\Doctrine\Counter\CategoryItemsCounterRegistry();
        $instance->register($this->get('pim_enrich.doctrine.counter.category_product'), 'product');
        return $instance;
    }
    protected function getPimEnrich_EventListener_AddLocaleService()
    {
        return $this->services['pim_enrich.event_listener.add_locale'] = new \Pim\Bundle\EnrichBundle\EventListener\AddLocaleListener();
    }
    protected function getPimEnrich_EventListener_AddLocaleCodeToGridService()
    {
        return $this->services['pim_enrich.event_listener.add_locale_code_to_grid'] = new \Pim\Bundle\DataGridBundle\EventListener\AddLocaleCodeToGridListener($this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimEnrich_EventListener_AssociationGroupGridAfterListenerService()
    {
        return $this->services['pim_enrich.event_listener.association_group_grid_after_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToGridListener(array(0 => 'dataLocale', 1 => 'associatedIds'), $this->get('oro_datagrid.datagrid.request_params'), true);
    }
    protected function getPimEnrich_EventListener_AssociationProductGridAfterListenerService()
    {
        $this->services['pim_enrich.event_listener.association_product_grid_after_listener'] = $instance = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToProductGridListener(array(0 => 'dataLocale', 1 => 'product', 2 => 'associationType'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'), true);
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimEnrich_EventListener_AssociationProductGridBeforeListenerService()
    {
        return $this->services['pim_enrich.event_listener.association_product_grid_before_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureProductGridListener($this->get('pim_datagrid.datagrid.configuration.product.context_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.columns_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.filters_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.sorters_configurator'));
    }
    protected function getPimEnrich_EventListener_GroupGridListenerService()
    {
        return $this->services['pim_enrich.event_listener.group_grid_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToGridListener(array(0 => 'localeCode', 1 => 'groupTypes'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimEnrich_EventListener_HistoryGridListenerService()
    {
        return $this->services['pim_enrich.event_listener.history_grid_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureHistoryGridListener($this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.resolver.fqcn'));
    }
    protected function getPimEnrich_EventListener_ProductGridAfterListenerService()
    {
        $this->services['pim_enrich.event_listener.product_grid_after_listener'] = $instance = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToProductGridListener(array(0 => 'dataLocale'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimEnrich_EventListener_ProductGridBeforeListenerService()
    {
        return $this->services['pim_enrich.event_listener.product_grid_before_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureProductGridListener($this->get('pim_datagrid.datagrid.configuration.product.context_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.columns_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.filters_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.sorters_configurator'));
    }
    protected function getPimEnrich_EventListener_ProductGroupGridAfterListenerService()
    {
        $this->services['pim_enrich.event_listener.product_group_grid_after_listener'] = $instance = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToProductGridListener(array(0 => 'dataLocale', 1 => 'currentGroup'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'), true);
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimEnrich_EventListener_ProductGroupGridBeforeListenerService()
    {
        return $this->services['pim_enrich.event_listener.product_group_grid_before_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureProductGridListener($this->get('pim_datagrid.datagrid.configuration.product.context_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.group_columns_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.filters_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.sorters_configurator'));
    }
    protected function getPimEnrich_EventListener_ProductVariantGroupGridAfterListenerService()
    {
        $this->services['pim_enrich.event_listener.product_variant_group_grid_after_listener'] = $instance = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToVariantProductGridListener(array(0 => 'dataLocale', 1 => 'currentGroup'), $this->get('oro_datagrid.datagrid.request_params'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'), $this->get('pim_catalog.repository.product'), true);
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getPimEnrich_EventListener_ProductVariantGroupGridBeforeListenerService()
    {
        return $this->services['pim_enrich.event_listener.product_variant_group_grid_before_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\ConfigureProductGridListener($this->get('pim_datagrid.datagrid.configuration.product.context_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.group_columns_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.filters_configurator'), $this->get('pim_datagrid.datagrid.configuration.product.sorters_configurator'));
    }
    protected function getPimEnrich_EventListener_RequestService()
    {
        return $this->services['pim_enrich.event_listener.request'] = new \Pim\Bundle\EnrichBundle\EventListener\RequestListener();
    }
    protected function getPimEnrich_EventListener_VariantGroupGridListenerService()
    {
        return $this->services['pim_enrich.event_listener.variant_group_grid_listener'] = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToGridListener(array(0 => 'localeCode', 1 => 'groupTypes'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimEnrich_EventSubscriber_Storage_ChannelLocaleService()
    {
        return $this->services['pim_enrich.event_subscriber.storage.channel_locale'] = new \Pim\Bundle\EnrichBundle\EventListener\Storage\ChannelLocaleSubscriber($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.saver.locale'), $this->get('pim_catalog.doctrine.completeness_generator'));
    }
    protected function getPimEnrich_EventSubscriber_TranslateFlashMessagesService()
    {
        return $this->services['pim_enrich.event_subscriber.translate_flash_messages'] = new \Pim\Bundle\EnrichBundle\EventListener\TranslateFlashMessagesSubscriber($this->get('translator'));
    }
    protected function getPimEnrich_Factory_MassEditNotificationService()
    {
        return $this->services['pim_enrich.factory.mass_edit_notification'] = new \Pim\Bundle\EnrichBundle\Factory\MassEditNotificationFactory(array(0 => 'quick_export', 1 => 'mass_edit'), 'Pim\\Bundle\\NotificationBundle\\Entity\\Notification');
    }
    protected function getPimEnrich_Factory_SequentialEditService()
    {
        return $this->services['pim_enrich.factory.sequential_edit'] = new \Pim\Bundle\EnrichBundle\Factory\SequentialEditFactory('Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit');
    }
    protected function getPimEnrich_Factory_Transformer_IdentifiableModelService()
    {
        return $this->services['pim_enrich.factory.transformer.identifiable_model'] = new \Pim\Bundle\EnrichBundle\Form\Factory\IdentifiableModelTransformerFactory('Pim\\Bundle\\EnrichBundle\\Form\\DataTransformer\\IdentifiableModelTransformer');
    }
    protected function getPimEnrich_Filter_ProductEditDataService()
    {
        return $this->services['pim_enrich.filter.product_edit_data'] = new \Pim\Bundle\EnrichBundle\Filter\ProductEditDataFilter($this->get('oro_security.security_facade'), $this->get('pim_enrich.filter.product_values_edit_data'));
    }
    protected function getPimEnrich_Filter_ProductValue_ChannelService()
    {
        return $this->services['pim_enrich.filter.product_value.channel'] = new \Pim\Bundle\CatalogBundle\Filter\ProductValueChannelFilter();
    }
    protected function getPimEnrich_Filter_ProductValue_LocaleService()
    {
        return $this->services['pim_enrich.filter.product_value.locale'] = new \Pim\Bundle\CatalogBundle\Filter\ProductValueLocaleFilter();
    }
    protected function getPimEnrich_Filter_ProductValuesEditDataService()
    {
        return $this->services['pim_enrich.filter.product_values_edit_data'] = new \Pim\Bundle\EnrichBundle\Filter\ProductValuesEditDataFilter($this->get('pim_catalog.filter.chained'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.channel'));
    }
    protected function getPimEnrich_Filter_VariantGroupEditDataService()
    {
        return $this->services['pim_enrich.filter.variant_group_edit_data'] = new \Pim\Bundle\EnrichBundle\Filter\VariantGroupEditDataFilter($this->get('oro_security.security_facade'), $this->get('pim_enrich.filter.product_values_edit_data'));
    }
    protected function getPimEnrich_Form_AssociationTypeService()
    {
        return $this->services['pim_enrich.form.association_type'] = $this->get('form.factory')->createNamed('pim_enrich_associationtype_form', 'pim_enrich_associationtype');
    }
    protected function getPimEnrich_Form_AttributeService()
    {
        return $this->services['pim_enrich.form.attribute'] = $this->get('form.factory')->createNamed('pim_enrich_attribute_form', 'pim_enrich_attribute');
    }
    protected function getPimEnrich_Form_AttributeGroupService()
    {
        return $this->services['pim_enrich.form.attribute_group'] = $this->get('form.factory')->createNamed('pim_enrich_attributegroup_form', 'pim_enrich_attributegroup');
    }
    protected function getPimEnrich_Form_ChannelService()
    {
        return $this->services['pim_enrich.form.channel'] = $this->get('form.factory')->createNamed('pim_enrich_channel_form', 'pim_enrich_channel');
    }
    protected function getPimEnrich_Form_CurrencyService()
    {
        return $this->services['pim_enrich.form.currency'] = $this->get('form.factory')->createNamed('pim_enrich_currency_form', 'pim_enrich_currency');
    }
    protected function getPimEnrich_Form_FamilyService()
    {
        return $this->services['pim_enrich.form.family'] = $this->get('form.factory')->createNamed('pim_enrich_family_form', 'pim_enrich_family');
    }
    protected function getPimEnrich_Form_GroupService()
    {
        return $this->services['pim_enrich.form.group'] = $this->get('form.factory')->createNamed('pim_enrich_group_form', 'pim_enrich_group');
    }
    protected function getPimEnrich_Form_GroupTypeService()
    {
        return $this->services['pim_enrich.form.group_type'] = $this->get('form.factory')->createNamed('pim_enrich_grouptype_form', 'pim_enrich_grouptype');
    }
    protected function getPimEnrich_Form_Handler_AssociationTypeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.association_type', 'request');
        }
        return $this->services['pim_enrich.form.handler.association_type'] = $this->scopedServices['request']['pim_enrich.form.handler.association_type'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.association_type'), $this->get('request'), $this->get('pim_catalog.saver.association_type'));
    }
    protected function getPimEnrich_Form_Handler_AttributeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.attribute', 'request');
        }
        return $this->services['pim_enrich.form.handler.attribute'] = $this->scopedServices['request']['pim_enrich.form.handler.attribute'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.attribute'), $this->get('request'), $this->get('pim_catalog.saver.attribute'));
    }
    protected function getPimEnrich_Form_Handler_AttributeGroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.attribute_group', 'request');
        }
        return $this->services['pim_enrich.form.handler.attribute_group'] = $this->scopedServices['request']['pim_enrich.form.handler.attribute_group'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.attribute_group'), $this->get('request'), $this->get('pim_catalog.saver.attribute_group'));
    }
    protected function getPimEnrich_Form_Handler_ChannelService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.channel', 'request');
        }
        return $this->services['pim_enrich.form.handler.channel'] = $this->scopedServices['request']['pim_enrich.form.handler.channel'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.channel'), $this->get('request'), $this->get('pim_catalog.saver.channel'));
    }
    protected function getPimEnrich_Form_Handler_FamilyService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.family', 'request');
        }
        return $this->services['pim_enrich.form.handler.family'] = $this->scopedServices['request']['pim_enrich.form.handler.family'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.family'), $this->get('request'), $this->get('pim_catalog.saver.family'));
    }
    protected function getPimEnrich_Form_Handler_GroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.group', 'request');
        }
        return $this->services['pim_enrich.form.handler.group'] = $this->scopedServices['request']['pim_enrich.form.handler.group'] = new \Pim\Bundle\EnrichBundle\Form\Handler\GroupHandler($this->get('pim_enrich.form.group'), $this->get('request'), $this->get('pim_catalog.saver.group'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimEnrich_Form_Handler_GroupTypeService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.group_type', 'request');
        }
        return $this->services['pim_enrich.form.handler.group_type'] = $this->scopedServices['request']['pim_enrich.form.handler.group_type'] = new \Pim\Bundle\EnrichBundle\Form\Handler\BaseHandler($this->get('pim_enrich.form.group_type'), $this->get('request'), $this->get('pim_catalog.saver.group_type'));
    }
    protected function getPimEnrich_Form_Handler_VariantGroupService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_enrich.form.handler.variant_group', 'request');
        }
        return $this->services['pim_enrich.form.handler.variant_group'] = $this->scopedServices['request']['pim_enrich.form.handler.variant_group'] = new \Pim\Bundle\EnrichBundle\Form\Handler\GroupHandler($this->get('pim_enrich.form.variant_group'), $this->get('request'), $this->get('pim_catalog.saver.group'), $this->get('pim_catalog.repository.product'), $this->get('pim_catalog.localization.localizer.converter'));
    }
    protected function getPimEnrich_Form_Subscriber_AddVariantGroupAxesService()
    {
        return $this->services['pim_enrich.form.subscriber.add_variant_group_axes'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\AddVariantGroupAxesSubscriber('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimEnrich_Form_Subscriber_AttributeService()
    {
        return $this->services['pim_enrich.form.subscriber.attribute'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\AddAttributeTypeRelatedFieldsSubscriber($this->get('pim_catalog.registry.attribute_type'), $this->get('oro_security.security_facade'), $this->get('pim_catalog.repository.attribute_group'));
    }
    protected function getPimEnrich_Form_Subscriber_AttributeRequirementsService()
    {
        return $this->services['pim_enrich.form.subscriber.attribute_requirements'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\AddAttributeRequirementsSubscriber($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimEnrich_Form_Subscriber_FamilyAttributeLabelSubscriberService()
    {
        return $this->services['pim_enrich.form.subscriber.family_attribute_label_subscriber'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\AddAttributeAsLabelSubscriber('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', $this->get('form.factory'), $this->get('oro_security.security_facade'));
    }
    protected function getPimEnrich_Form_Subscriber_FamilyDisableFieldsSubscriberService()
    {
        return $this->services['pim_enrich.form.subscriber.family_disable_fields_subscriber'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\DisableFamilyFieldsSubscriber($this->get('oro_security.security_facade'));
    }
    protected function getPimEnrich_Form_Subscriber_SetAttributeGroupSortOrderService()
    {
        return $this->services['pim_enrich.form.subscriber.set_attribute_group_sort_order'] = new \Pim\Bundle\EnrichBundle\Form\Subscriber\SetAttributeGroupSortOrderSubscriber($this->get('pim_catalog.repository.attribute_group'));
    }
    protected function getPimEnrich_Form_Type_AddToGroupsService()
    {
        return $this->services['pim_enrich.form.type.add_to_groups'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\AddToGroupsType($this->get('pim_catalog.repository.group'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\AddToGroups');
    }
    protected function getPimEnrich_Form_Type_AddToVariantGroupService()
    {
        return $this->services['pim_enrich.form.type.add_to_variant_group'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\AddToVariantGroupType($this->get('pim_catalog.repository.product_mass_action'), $this->get('pim_catalog.repository.group'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\AddToVariantGroup');
    }
    protected function getPimEnrich_Form_Type_AssociationService()
    {
        return $this->services['pim_enrich.form.type.association'] = new \Pim\Bundle\EnrichBundle\Form\Type\AssociationType($this->get('pim_catalog.repository.product'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Component\\Catalog\\Model\\Product', 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'Pim\\Component\\Catalog\\Model\\Association');
    }
    protected function getPimEnrich_Form_Type_AssociationTypeService()
    {
        return $this->services['pim_enrich.form.type.association_type'] = new \Pim\Bundle\EnrichBundle\Form\Type\AssociationTypeType('Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType');
    }
    protected function getPimEnrich_Form_Type_AsyncSelectService()
    {
        return $this->services['pim_enrich.form.type.async_select'] = new \Pim\Bundle\EnrichBundle\Form\Type\AsyncSelectType($this->get('router'), $this->get('pim_enrich.factory.transformer.identifiable_model'));
    }
    protected function getPimEnrich_Form_Type_AttributeService()
    {
        return $this->services['pim_enrich.form.type.attribute'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeType($this->get('pim_catalog.registry.attribute_type'), $this->get('pim_enrich.form.subscriber.attribute'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeTranslation', 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
    }
    protected function getPimEnrich_Form_Type_AttributeGroupService()
    {
        $this->services['pim_enrich.form.type.attribute_group'] = $instance = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeGroupType('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
        $instance->addEventSubscriber($this->get('pim_enrich.form.subscriber.set_attribute_group_sort_order'));
        return $instance;
    }
    protected function getPimEnrich_Form_Type_AttributeOptionService()
    {
        return $this->services['pim_enrich.form.type.attribute_option'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeOptionType('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimEnrich_Form_Type_AttributeOptionCreateService()
    {
        return $this->services['pim_enrich.form.type.attribute_option_create'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeOptionCreateType('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimEnrich_Form_Type_AttributeOptionValueService()
    {
        return $this->services['pim_enrich.form.type.attribute_option_value'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeOptionValueType('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOptionValue');
    }
    protected function getPimEnrich_Form_Type_AttributeRequirementService()
    {
        return $this->services['pim_enrich.form.type.attribute_requirement'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeRequirementType('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement');
    }
    protected function getPimEnrich_Form_Type_AvailableAttributesService()
    {
        return $this->services['pim_enrich.form.type.available_attributes'] = new \Pim\Bundle\EnrichBundle\Form\Type\AvailableAttributesType($this->get('pim_enrich.repository.attribute'), $this->get('translator'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Component\\Enrich\\Model\\AvailableAttributes');
    }
    protected function getPimEnrich_Form_Type_AvailableLocalesService()
    {
        return $this->services['pim_enrich.form.type.available_locales'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeProperty\AvailableLocalesType();
    }
    protected function getPimEnrich_Form_Type_CategoryService()
    {
        return $this->services['pim_enrich.form.type.category'] = new \Pim\Bundle\EnrichBundle\Form\Type\CategoryType('Pim\\Bundle\\CatalogBundle\\Entity\\Category', 'Pim\\Bundle\\CatalogBundle\\Entity\\CategoryTranslation');
    }
    protected function getPimEnrich_Form_Type_ChangeFamilyService()
    {
        return $this->services['pim_enrich.form.type.change_family'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\ChangeFamilyType('Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\ChangeFamily', $this->get('pim_catalog.repository.family'));
    }
    protected function getPimEnrich_Form_Type_ChangeStatusService()
    {
        return $this->services['pim_enrich.form.type.change_status'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\ChangeStatusType('Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\ChangeStatus');
    }
    protected function getPimEnrich_Form_Type_ChannelService()
    {
        return $this->services['pim_enrich.form.type.channel'] = new \Pim\Bundle\EnrichBundle\Form\Type\ChannelType($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.helper.locale'), $this->get('pim_enrich.repository.category'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Category', 'Pim\\Bundle\\CatalogBundle\\Entity\\Channel', 'Pim\\Bundle\\CatalogBundle\\Entity\\ChannelTranslation');
    }
    protected function getPimEnrich_Form_Type_ChooseActionService()
    {
        return $this->services['pim_enrich.form.type.choose_action'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditChooseActionType();
    }
    protected function getPimEnrich_Form_Type_ClassifyService()
    {
        return $this->services['pim_enrich.form.type.classify'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\ClassifyType($this->get('pim_catalog.repository.category'), 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\Classify', 'pim_enrich_mass_classify');
    }
    protected function getPimEnrich_Form_Type_ConversionUnitsService()
    {
        return $this->services['pim_enrich.form.type.conversion_units'] = new \Pim\Bundle\EnrichBundle\Form\Type\ConversionUnitsType($this->get('akeneo_measure.manager'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimEnrich_Form_Type_EditCommonAttributesService()
    {
        return $this->services['pim_enrich.form.type.edit_common_attributes'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\EditCommonAttributesType('Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\EditCommonAttributes');
    }
    protected function getPimEnrich_Form_Type_ExportSelectFamilyService()
    {
        return $this->services['pim_enrich.form.type.export_select_family'] = new \Pim\Bundle\EnrichBundle\Form\Type\SelectFamilyType($this->get('router'));
    }
    protected function getPimEnrich_Form_Type_FamilyService()
    {
        return $this->services['pim_enrich.form.type.family'] = new \Pim\Bundle\EnrichBundle\Form\Type\FamilyType($this->get('pim_enrich.form.subscriber.attribute_requirements'), $this->get('pim_enrich.form.subscriber.family_disable_fields_subscriber'), $this->get('pim_enrich.form.subscriber.family_attribute_label_subscriber'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimEnrich_Form_Type_GroupService()
    {
        return $this->services['pim_enrich.form.type.group'] = new \Pim\Bundle\EnrichBundle\Form\Type\GroupType('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimEnrich_Form_Type_GroupTypeService()
    {
        return $this->services['pim_enrich.form.type.group_type'] = new \Pim\Bundle\EnrichBundle\Form\Type\GroupTypeType('Pim\\Bundle\\CatalogBundle\\Entity\\GroupType');
    }
    protected function getPimEnrich_Form_Type_LightEntityService()
    {
        return $this->services['pim_enrich.form.type.light_entity'] = new \Pim\Bundle\EnrichBundle\Form\Type\LightEntityType();
    }
    protected function getPimEnrich_Form_Type_LocalizedCollectionService()
    {
        return $this->services['pim_enrich.form.type.localized_collection'] = new \Pim\Bundle\EnrichBundle\Form\Type\LocalizedCollectionType();
    }
    protected function getPimEnrich_Form_Type_MediaService()
    {
        return $this->services['pim_enrich.form.type.media'] = new \Pim\Bundle\EnrichBundle\Form\Type\MediaType('Akeneo\\Component\\FileStorage\\Model\\FileInfo');
    }
    protected function getPimEnrich_Form_Type_ObjectIdentifierService()
    {
        return $this->services['pim_enrich.form.type.object_identifier'] = new \Pim\Bundle\EnrichBundle\Form\Type\ObjectIdentifierType();
    }
    protected function getPimEnrich_Form_Type_OptionsService()
    {
        return $this->services['pim_enrich.form.type.options'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeProperty\OptionsType();
    }
    protected function getPimEnrich_Form_Type_ProductGridFilterChoiceService()
    {
        return $this->services['pim_enrich.form.type.product_grid_filter_choice'] = new \Pim\Bundle\EnrichBundle\Form\Type\ProductGridFilterChoiceType($this->get('pim_enrich.repository.attribute'), $this->get('oro_datagrid.datagrid.manager'), 'product-grid', array(0 => 'scope', 1 => 'locale'));
    }
    protected function getPimEnrich_Form_Type_ScopableService()
    {
        return $this->services['pim_enrich.form.type.scopable'] = new \Pim\Bundle\EnrichBundle\Form\Type\AttributeProperty\ScopableType();
    }
    protected function getPimEnrich_Form_Type_SetAttributeRequirementsService()
    {
        return $this->services['pim_enrich.form.type.set_attribute_requirements'] = new \Pim\Bundle\EnrichBundle\Form\Type\MassEditAction\SetAttributeRequirementsType('Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\SetAttributeRequirements');
    }
    protected function getPimEnrich_Form_Type_TranslatableFieldService()
    {
        return $this->services['pim_enrich.form.type.translatable_field'] = new \Pim\Bundle\EnrichBundle\Form\Type\TranslatableFieldType($this->get('validator'), $this->get('pim_user.context.user'), $this->get('pim_catalog.helper.locale'));
    }
    protected function getPimEnrich_Form_Type_VariantGroupService()
    {
        $this->services['pim_enrich.form.type.variant_group'] = $instance = new \Pim\Bundle\EnrichBundle\Form\Type\VariantGroupType('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
        $instance->addEventSubscriber($this->get('pim_enrich.form.subscriber.add_variant_group_axes'));
        return $instance;
    }
    protected function getPimEnrich_Form_VariantGroupService()
    {
        return $this->services['pim_enrich.form.variant_group'] = $this->get('form.factory')->createNamed('pim_enrich_variant_group_form', 'pim_enrich_variant_group');
    }
    protected function getPimEnrich_Form_View_ViewUpdater_RegistryService()
    {
        $this->services['pim_enrich.form.view.view_updater.registry'] = $instance = new \Pim\Bundle\EnrichBundle\Form\View\ViewUpdater\ViewUpdaterRegistry();
        $instance->registerUpdater($this->get('pim_enrich.form.view.view_updater.variant'), 100);
        return $instance;
    }
    protected function getPimEnrich_Form_View_ViewUpdater_VariantService()
    {
        return $this->services['pim_enrich.form.view.view_updater.variant'] = new \Pim\Bundle\EnrichBundle\Form\View\ViewUpdater\VariantViewUpdater($this->get('property_accessor'));
    }
    protected function getPimEnrich_Guesser_FileTypeService()
    {
        return $this->services['pim_enrich.guesser.file_type'] = new \Pim\Bundle\EnrichBundle\File\FileTypeGuesser();
    }
    protected function getPimEnrich_Imagine_Loader_FlysystemService()
    {
        return $this->services['pim_enrich.imagine.loader.flysystem'] = new \Pim\Bundle\EnrichBundle\Imagine\Loader\FlysystemLoader($this->get('akeneo_file_storage.file_storage.filesystem_provider'), array(0 => 'catalogStorage'));
    }
    protected function getPimEnrich_Job_AddProductValueService()
    {
        return $this->services['pim_enrich.job.add_product_value'] = new \Akeneo\Component\Batch\Job\Job('add_product_value', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.add_product_value.mass_edit')));
    }
    protected function getPimEnrich_Job_AddToVariantGroupService()
    {
        return $this->services['pim_enrich.job.add_to_variant_group'] = new \Akeneo\Component\Batch\Job\Job('add_to_variant_group', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.add_to_variant_group.mass_edit')));
    }
    protected function getPimEnrich_Job_CsvProductGridContextQuickExportService()
    {
        return $this->services['pim_enrich.job.csv_product_grid_context_quick_export'] = new \Akeneo\Component\Batch\Job\Job('csv_product_grid_context_quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.csv_product.quick_export')));
    }
    protected function getPimEnrich_Job_CsvProductQuickExportService()
    {
        return $this->services['pim_enrich.job.csv_product_quick_export'] = new \Akeneo\Component\Batch\Job\Job('csv_product_quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.csv_product.quick_export')));
    }
    protected function getPimEnrich_Job_EditCommonAttributesService()
    {
        return $this->services['pim_enrich.job.edit_common_attributes'] = new \Akeneo\Component\Batch\Job\Job('edit_common_attributes', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.edit_common_attributes.mass_edit'), 1 => $this->get('pim_enrich.step.clean')));
    }
    protected function getPimEnrich_Job_RemoveProductValueService()
    {
        return $this->services['pim_enrich.job.remove_product_value'] = new \Akeneo\Component\Batch\Job\Job('remove_product_value', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.remove_product_value.mass_edit')));
    }
    protected function getPimEnrich_Job_SetAttributeRequirementsService()
    {
        return $this->services['pim_enrich.job.set_attribute_requirements'] = new \Akeneo\Component\Batch\Job\Job('set_attribute_requirements', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.set_attribute_requirements.mass_edit')));
    }
    protected function getPimEnrich_Job_UpdateProductValueService()
    {
        return $this->services['pim_enrich.job.update_product_value'] = new \Akeneo\Component\Batch\Job\Job('update_product_value', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.update_product_value.mass_edit')));
    }
    protected function getPimEnrich_Job_XlsxProductGridContextQuickExportService()
    {
        return $this->services['pim_enrich.job.xlsx_product_grid_context_quick_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_product_grid_context_quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.xlsx_product.quick_export')));
    }
    protected function getPimEnrich_Job_XlsxProductQuickExportService()
    {
        return $this->services['pim_enrich.job.xlsx_product_quick_export'] = new \Akeneo\Component\Batch\Job\Job('xlsx_product_quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_enrich.step.xlsx_product.quick_export')));
    }
    protected function getPimEnrich_Manager_SequentialEditService()
    {
        return $this->services['pim_enrich.manager.sequential_edit'] = new \Pim\Bundle\EnrichBundle\Manager\SequentialEditManager($this->get('pim_enrich.repository.sequential_edit'), $this->get('pim_enrich.factory.sequential_edit'), $this->get('pim_catalog.repository.product'), $this->get('pim_enrich.saver.sequential_edit'), $this->get('pim_enrich.remover.sequential_edit'));
    }
    protected function getPimEnrich_MassEditAction_AddToGroupsService()
    {
        return $this->services['pim_enrich.mass_edit_action.add_to_groups'] = new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\AddToGroups('add_product_value');
    }
    protected function getPimEnrich_MassEditAction_AddToVariantGroupService()
    {
        return $this->services['pim_enrich.mass_edit_action.add_to_variant_group'] = new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\AddToVariantGroup('add_to_variant_group');
    }
    protected function getPimEnrich_MassEditAction_FormResolverService()
    {
        return $this->services['pim_enrich.mass_edit_action.form_resolver'] = new \Pim\Bundle\EnrichBundle\MassEditAction\MassEditFormResolver($this->get('pim_enrich.mass_edit_action.operation.registry'), $this->get('form.factory'), $this->get('pim_enrich.form.type.choose_action'));
    }
    protected function getPimEnrich_MassEditAction_Operation_RegistryService()
    {
        $a = $this->get('pim_catalog.repository.attribute');
        $this->services['pim_enrich.mass_edit_action.operation.registry'] = $instance = new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\OperationRegistry($this->get('security.token_storage'), $this->get('oro_security.security_facade'));
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\ChangeStatus('update_product_value'), 'change-status', 'product-grid', 'mass-edit', 'pim_enrich_product_change_state');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\EditCommonAttributes($this->get('pim_catalog.builder.product'), $this->get('pim_user.context.user'), $a, $this->get('pim_catalog.updater.product'), $this->get('pim_catalog.validator.product'), $this->get('pim_internal_api_serializer'), $this->get('pim_catalog.localization.localizer.converter'), $this->get('pim_catalog.localization.localizer.registry'), $this->get('pim_enrich.filter.product_values_edit_data'), $this->get('pim_enrich.converter.enrich_to_standard.product_value'), 'edit_common_attributes'), 'edit-common-attributes', 'product-grid', 'mass-edit', 'pim_enrich_product_edit_attributes');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\Classify('add_product_value', 'pim_enrich_mass_classify'), 'classify-add', 'product-grid', 'category-edit', 'pim_enrich_product_categories_view');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\Classify('update_product_value', 'pim_enrich_mass_classify'), 'classify-move', 'product-grid', 'category-edit', 'pim_enrich_product_categories_view');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\Classify('remove_product_value', 'pim_enrich_mass_classify'), 'classify-remove', 'product-grid', 'category-edit', 'pim_enrich_product_categories_view');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\ChangeFamily('update_product_value'), 'change-family', 'product-grid', 'mass-edit', 'pim_enrich_product_change_family');
        $instance->register($this->get('pim_enrich.mass_edit_action.add_to_groups'), 'add-to-groups', 'product-grid', 'mass-edit', 'pim_enrich_product_add_to_groups');
        $instance->register($this->get('pim_enrich.mass_edit_action.add_to_variant_group'), 'add-to-variant-group', 'product-grid', 'mass-edit', 'pim_enrich_product_add_to_variant_group');
        $instance->register(new \Pim\Bundle\EnrichBundle\MassEditAction\Operation\SetAttributeRequirements($this->get('pim_catalog.repository.channel'), $a, $this->get('pim_catalog.factory.attribute_requirement'), 'set_attribute_requirements'), 'set-attribute-requirements', 'family-grid', 'mass-edit', 'pim_enrich_family_edit_attributes');
        return $instance;
    }
    protected function getPimEnrich_MassEditAction_OperationJobLauncherService()
    {
        return $this->services['pim_enrich.mass_edit_action.operation_job_launcher'] = new \Pim\Bundle\EnrichBundle\MassEditAction\OperationJobLauncher($this->get('akeneo_batch.launcher.simple_job_launcher'), $this->get('pim_import_export.repository.job_instance'), $this->get('security.token_storage'));
    }
    protected function getPimEnrich_Normalizer_AssociationTypeService()
    {
        return $this->services['pim_enrich.normalizer.association_type'] = new \Pim\Bundle\EnrichBundle\Normalizer\AssociationTypeNormalizer($this->get('pim_serializer'), $this->get('pim_versioning.manager.version'), $this->get('pim_enrich.normalizer.version'));
    }
    protected function getPimEnrich_Normalizer_AttributeService()
    {
        return $this->services['pim_enrich.normalizer.attribute'] = new \Pim\Bundle\EnrichBundle\Normalizer\AttributeNormalizer($this->get('pim_serializer'), $this->get('pim_enrich.provider.field.chained'), $this->get('pim_enrich.provider.empty_value.chained'), $this->get('pim_enrich.provider.filter.chained'));
    }
    protected function getPimEnrich_Normalizer_AttributeOptionService()
    {
        return $this->services['pim_enrich.normalizer.attribute_option'] = new \Pim\Bundle\EnrichBundle\Normalizer\AttributeOptionNormalizer($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.factory.attribute_option_value'));
    }
    protected function getPimEnrich_Normalizer_AttributeOptionValueService()
    {
        return $this->services['pim_enrich.normalizer.attribute_option_value'] = new \Pim\Bundle\EnrichBundle\Normalizer\AttributeOptionValueNormalizer();
    }
    protected function getPimEnrich_Normalizer_AttributeOptionValueCollectionService()
    {
        return $this->services['pim_enrich.normalizer.attribute_option_value_collection'] = new \Pim\Bundle\EnrichBundle\Normalizer\AttributeOptionValueCollectionNormalizer();
    }
    protected function getPimEnrich_Normalizer_CategoryService()
    {
        return $this->services['pim_enrich.normalizer.category'] = new \Pim\Bundle\EnrichBundle\Normalizer\CategoryNormalizer($this->get('pim_serializer'));
    }
    protected function getPimEnrich_Normalizer_ChannelService()
    {
        return $this->services['pim_enrich.normalizer.channel'] = new \Pim\Bundle\EnrichBundle\Normalizer\ChannelNormalizer($this->get('pim_serializer'), $this->get('pim_enrich.normalizer.locale'), $this->get('pim_catalog.filter.chained'));
    }
    protected function getPimEnrich_Normalizer_CollectionService()
    {
        return $this->services['pim_enrich.normalizer.collection'] = new \Pim\Bundle\EnrichBundle\Normalizer\CollectionNormalizer();
    }
    protected function getPimEnrich_Normalizer_CompletenessService()
    {
        return $this->services['pim_enrich.normalizer.completeness'] = new \Pim\Bundle\EnrichBundle\Normalizer\CompletenessNormalizer();
    }
    protected function getPimEnrich_Normalizer_CompletenessCollectionService()
    {
        return $this->services['pim_enrich.normalizer.completeness_collection'] = new \Pim\Bundle\EnrichBundle\Normalizer\CompletenessCollectionNormalizer($this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Normalizer_DatagridViewService()
    {
        return $this->services['pim_enrich.normalizer.datagrid_view'] = new \Pim\Bundle\EnrichBundle\Normalizer\DatagridViewNormalizer();
    }
    protected function getPimEnrich_Normalizer_FamilyService()
    {
        return $this->services['pim_enrich.normalizer.family'] = new \Pim\Component\Catalog\Normalizer\Standard\FamilyNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_catalog.filter.chained'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_catalog.repository.attribute_requirement'));
    }
    protected function getPimEnrich_Normalizer_FileService()
    {
        return $this->services['pim_enrich.normalizer.file'] = new \Pim\Bundle\EnrichBundle\Normalizer\FileNormalizer();
    }
    protected function getPimEnrich_Normalizer_GroupService()
    {
        return $this->services['pim_enrich.normalizer.group'] = new \Pim\Bundle\EnrichBundle\Normalizer\GroupNormalizer($this->get('pim_catalog.normalizer.standard.proxy_group'), $this->get('pim_enrich.provider.structure_version.variant_group'), $this->get('pim_versioning.manager.version'), $this->get('pim_enrich.normalizer.version'), $this->get('pim_catalog.localization.localizer.converter'), $this->get('pim_enrich.converter.standard_to_enrich.product_value'));
    }
    protected function getPimEnrich_Normalizer_GroupViolationService()
    {
        return $this->services['pim_enrich.normalizer.group_violation'] = new \Pim\Bundle\EnrichBundle\Normalizer\VariantGroupViolationNormalizer($this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Normalizer_LocaleService()
    {
        return $this->services['pim_enrich.normalizer.locale'] = new \Pim\Bundle\EnrichBundle\Normalizer\LocaleNormalizer($this->get('pim_catalog.helper.locale'));
    }
    protected function getPimEnrich_Normalizer_ProductService()
    {
        return $this->services['pim_enrich.normalizer.product'] = new \Pim\Bundle\EnrichBundle\Normalizer\ProductNormalizer($this->get('pim_serializer'), $this->get('pim_enrich.normalizer.version'), $this->get('pim_versioning.manager.version'), $this->get('pim_catalog.repository.locale'), $this->get('pim_enrich.provider.structure_version.product'), $this->get('pim_enrich.provider.form.chained'), $this->get('pim_catalog.localization.localizer.converter'), $this->get('pim_enrich.converter.standard_to_enrich.product_value'));
    }
    protected function getPimEnrich_Normalizer_ProductViolationService()
    {
        return $this->services['pim_enrich.normalizer.product_violation'] = new \Pim\Bundle\EnrichBundle\Normalizer\ProductViolationNormalizer();
    }
    protected function getPimEnrich_Normalizer_SequentialEditService()
    {
        return $this->services['pim_enrich.normalizer.sequential_edit'] = new \Pim\Bundle\EnrichBundle\Normalizer\SequentialEditNormalizer($this->get('pim_serializer'));
    }
    protected function getPimEnrich_Normalizer_Structured_AttributeOptionService()
    {
        return $this->services['pim_enrich.normalizer.structured.attribute_option'] = new \Pim\Bundle\EnrichBundle\Normalizer\StructuredAttributeOptionNormalizer($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.factory.attribute_option_value'), $this->get('pim_catalog.filter.chained'));
    }
    protected function getPimEnrich_Normalizer_VariantGroupViolationService()
    {
        return $this->services['pim_enrich.normalizer.variant_group_violation'] = new \Pim\Bundle\EnrichBundle\Normalizer\VariantGroupViolationNormalizer($this->get('pim_internal_api_serializer'));
    }
    protected function getPimEnrich_Normalizer_VersionService()
    {
        return $this->services['pim_enrich.normalizer.version'] = new \Pim\Bundle\EnrichBundle\Normalizer\VersionNormalizer($this->get('oro_user.manager'), $this->get('translator'), $this->get('pim_catalog.localization.presenter.datetime'), $this->get('pim_catalog.localization.presenter.registry'));
    }
    protected function getPimEnrich_Product_PaginatorService()
    {
        return $this->services['pim_enrich.product.paginator'] = new \Akeneo\Component\StorageUtils\Cursor\PaginatorFactory('Akeneo\\Component\\StorageUtils\\Cursor\\Paginator', '1000');
    }
    protected function getPimEnrich_Provider_DefaultImageService()
    {
        return $this->services['pim_enrich.provider.default_image'] = new \Pim\Bundle\EnrichBundle\File\DefaultImageProvider($this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'), array('pim_enrich_file_document' => array('path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/text_default.png'), 'mime_type' => 'image/png', 'extension' => 'png'), 'pim_enrich_file_image' => array('path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/image_default.png'), 'mime_type' => 'image/png', 'extension' => 'png'), 'pim_enrich_file_video' => array('path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/video_default.png'), 'mime_type' => 'image/png', 'extension' => 'png'), 'pim_enrich_file_misc' => array('path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/misc_default.png'), 'mime_type' => 'image/png', 'extension' => 'png')));
    }
    protected function getPimEnrich_Provider_EmptyValue_BaseService()
    {
        return $this->services['pim_enrich.provider.empty_value.base'] = new \Pim\Bundle\EnrichBundle\Provider\EmptyValue\BaseEmptyValueProvider();
    }
    protected function getPimEnrich_Provider_EmptyValue_ChainedService()
    {
        $this->services['pim_enrich.provider.empty_value.chained'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\EmptyValue\EmptyValueChainedProvider();
        $instance->addProvider($this->get('pim_reference_data.enrich.provider.empty_value.reference_data'));
        $instance->addProvider($this->get('pim_enrich.provider.empty_value.base'));
        return $instance;
    }
    protected function getPimEnrich_Provider_Field_BaseService()
    {
        return $this->services['pim_enrich.provider.field.base'] = new \Pim\Bundle\EnrichBundle\Provider\Field\BaseFieldProvider();
    }
    protected function getPimEnrich_Provider_Field_ChainedService()
    {
        $this->services['pim_enrich.provider.field.chained'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\Field\FieldChainedProvider();
        $instance->addProvider($this->get('pim_enrich.provider.field.wysiwyg'));
        $instance->addProvider($this->get('pim_enrich.provider.field.base'));
        $instance->addProvider($this->get('pim_reference_data.enrich.provider.field.reference_data'));
        return $instance;
    }
    protected function getPimEnrich_Provider_Field_WysiwygService()
    {
        return $this->services['pim_enrich.provider.field.wysiwyg'] = new \Pim\Bundle\EnrichBundle\Provider\Field\WysiwygFieldProvider();
    }
    protected function getPimEnrich_Provider_Filter_BaseService()
    {
        return $this->services['pim_enrich.provider.filter.base'] = new \Pim\Bundle\EnrichBundle\Provider\Filter\BaseFilterProvider();
    }
    protected function getPimEnrich_Provider_Filter_ChainedService()
    {
        $this->services['pim_enrich.provider.filter.chained'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\Filter\FilterChainedProvider();
        $instance->addProvider($this->get('pim_enrich.provider.filter.base'));
        $instance->addProvider($this->get('pim_reference_data.enrich.provider.filter.reference_data'));
        return $instance;
    }
    protected function getPimEnrich_Provider_Form_ChainedService()
    {
        $this->services['pim_enrich.provider.form.chained'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\Form\FormChainedProvider();
        $instance->addProvider($this->get('pim_enrich.provider.form.product'));
        $instance->addProvider($this->get('pim_enrich.provider.form.job_instance'));
        return $instance;
    }
    protected function getPimEnrich_Provider_Form_JobInstanceService()
    {
        return $this->services['pim_enrich.provider.form.job_instance'] = new \Pim\Bundle\EnrichBundle\Provider\Form\JobInstanceFormProvider(array('csv_association_type_export' => 'pim-job-instance-csv-base-export', 'csv_attribute_export' => 'pim-job-instance-csv-base-export', 'csv_attribute_group_export' => 'pim-job-instance-csv-base-export', 'csv_attribute_option_export' => 'pim-job-instance-csv-base-export', 'csv_category_export' => 'pim-job-instance-csv-base-export', 'csv_channel_export' => 'pim-job-instance-csv-base-export', 'csv_currency_export' => 'pim-job-instance-csv-base-export', 'csv_family_export' => 'pim-job-instance-csv-base-export', 'csv_group_export' => 'pim-job-instance-csv-base-export', 'csv_group_type_export' => 'pim-job-instance-csv-base-export', 'csv_locale_export' => 'pim-job-instance-csv-base-export', 'csv_product_export' => 'pim-job-instance-csv-product-export', 'csv_variant_group_export' => 'pim-job-instance-csv-base-export', 'xlsx_association_type_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_attribute_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_attribute_group_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_attribute_option_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_category_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_channel_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_currency_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_family_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_group_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_group_type_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_locale_export' => 'pim-job-instance-xlsx-base-export', 'xlsx_product_export' => 'pim-job-instance-xlsx-product-export', 'xlsx_variant_group_export' => 'pim-job-instance-xlsx-base-export', 'csv_association_type_import' => 'pim-job-instance-csv-base-import', 'csv_attribute_import' => 'pim-job-instance-csv-base-import', 'csv_attribute_group_import' => 'pim-job-instance-csv-base-import', 'csv_attribute_option_import' => 'pim-job-instance-csv-base-import', 'csv_category_import' => 'pim-job-instance-csv-base-import', 'csv_channel_import' => 'pim-job-instance-csv-base-import', 'csv_currency_import' => 'pim-job-instance-csv-base-import', 'csv_family_import' => 'pim-job-instance-csv-base-import', 'csv_group_import' => 'pim-job-instance-csv-base-import', 'csv_group_type_import' => 'pim-job-instance-csv-base-import', 'csv_locale_import' => 'pim-job-instance-csv-base-import', 'csv_product_import' => 'pim-job-instance-csv-product-import', 'csv_variant_group_import' => 'pim-job-instance-csv-base-import', 'xlsx_association_type_import' => 'pim-job-instance-csv-base-import', 'xlsx_attribute_import' => 'pim-job-instance-csv-base-import', 'xlsx_attribute_group_import' => 'pim-job-instance-csv-base-import', 'xlsx_attribute_option_import' => 'pim-job-instance-csv-base-import', 'xlsx_category_import' => 'pim-job-instance-csv-base-import', 'xlsx_channel_import' => 'pim-job-instance-csv-base-import', 'xlsx_currency_import' => 'pim-job-instance-csv-base-import', 'xlsx_family_import' => 'pim-job-instance-csv-base-import', 'xlsx_group_import' => 'pim-job-instance-csv-base-import', 'xlsx_group_type_import' => 'pim-job-instance-csv-base-import', 'xlsx_locale_import' => 'pim-job-instance-csv-base-import', 'xlsx_product_import' => 'pim-job-instance-csv-product-import', 'xlsx_variant_group_import' => 'pim-job-instance-csv-base-import'));
    }
    protected function getPimEnrich_Provider_Form_ProductService()
    {
        return $this->services['pim_enrich.provider.form.product'] = new \Pim\Bundle\EnrichBundle\Provider\Form\ProductFormProvider();
    }
    protected function getPimEnrich_Provider_FormExtensionService()
    {
        $this->services['pim_enrich.provider.form_extension'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\FormExtensionProvider($this->get('oro_security.security_facade'));
        $instance->addExtension('oro-system-config-form', array('module' => 'oro/form/system/config'));
        $instance->addExtension('oro-system-config-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'oro-system-config-form', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('oro-system-config-system', array('module' => 'oro/form/system/config/system', 'parent' => 'oro-system-config-tabs', 'targetZone' => 'container', 'position' => 100));
        $instance->addExtension('oro-system-config-save', array('module' => 'oro/form/system/config/save', 'parent' => 'oro-system-config-form', 'targetZone' => 'buttons', 'position' => 100));
        $instance->addExtension('oro-system-config-group-selector', array('module' => 'pim/form/common/group-selector', 'parent' => 'oro-system-config-system', 'targetZone' => 'sidebar', 'position' => 100));
        $instance->addExtension('oro-system-config-group-localization', array('module' => 'oro/form/system/config/group/localization', 'parent' => 'oro-system-config-system', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('oro-system-config-group-notification', array('module' => 'oro/form/system/config/group/notification', 'parent' => 'oro-system-config-system', 'targetZone' => 'content', 'position' => 110));
        $instance->addExtension('oro-system-config-form-state', array('module' => 'pim/form/common/state', 'parent' => 'oro-system-config-form', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.product.title')));
        $instance->addExtension('pim-system-config-group-loading_message', array('module' => 'pim/form/system/config/group/loading_message', 'parent' => 'oro-system-config-system', 'targetZone' => 'content', 'position' => 120));
        $instance->addExtension('pim-group-edit-form', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-group-edit-form-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-group-edit-form', 'position' => 1000));
        $instance->addExtension('pim-group-edit-form-form-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-group-edit-form', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-group-edit-form-label', array('module' => 'pim/form/common/label', 'parent' => 'pim-group-edit-form', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-group-edit-form-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-group-edit-form', 'targetZone' => 'back', 'aclResourceId' => 'pim_enrich_group_index', 'position' => 80, 'config' => array('backUrl' => 'pim_enrich_group_index')));
        $instance->addExtension('pim-group-edit-form-delete', array('module' => 'pim/group-edit-form/delete', 'parent' => 'pim-group-edit-form', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_enrich_group_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.group', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.group.removed', 'fail' => 'error.removing.group'), 'redirect' => 'pim_enrich_group_index')));
        $instance->addExtension('pim-group-edit-form-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-group-edit-form', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-group-edit-form-save', array('module' => 'pim/group-edit-form/save', 'parent' => 'pim-group-edit-form', 'targetZone' => 'buttons', 'position' => 0));
        $instance->addExtension('pim-group-edit-form-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-group-edit-form', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.group.title')));
        $instance->addExtension('pim-group-edit-form-created', array('module' => 'pim/form/common/meta/created', 'parent' => 'pim-group-edit-form', 'targetZone' => 'meta', 'position' => 90, 'config' => array('label' => 'pim_enrich.entity.group.meta.created', 'labelBy' => 'pim_enrich.entity.group.meta.created_by')));
        $instance->addExtension('pim-group-edit-form-updated', array('module' => 'pim/form/common/meta/updated', 'parent' => 'pim-group-edit-form', 'targetZone' => 'meta', 'position' => 100, 'config' => array('label' => 'pim_enrich.entity.group.meta.updated', 'labelBy' => 'pim_enrich.entity.group.meta.updated_by')));
        $instance->addExtension('pim-group-edit-form-product-count', array('module' => 'pim/group-edit-form/meta/product-count', 'parent' => 'pim-group-edit-form', 'targetZone' => 'meta', 'position' => 110, 'config' => array('productCountLabel' => 'pim_enrich.entity.group.meta.product_count')));
        $instance->addExtension('pim-group-edit-form-properties', array('module' => 'pim/common/tab/properties', 'parent' => 'pim-group-edit-form-form-tabs', 'targetZone' => 'container', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.group.tab.properties.title')));
        $instance->addExtension('pim-group-edit-form-properties-general', array('module' => 'pim/group-edit-form/properties/general', 'parent' => 'pim-group-edit-form-properties', 'targetZone' => 'accordion', 'position' => 100));
        $instance->addExtension('pim-group-edit-form-properties-translation', array('module' => 'pim/common/properties/translation', 'parent' => 'pim-group-edit-form-properties', 'targetZone' => 'accordion', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.group.tab.properties.label_translations', 'fieldBaseId' => 'pim_enrich_group_form_label_')));
        $instance->addExtension('pim-group-edit-form-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-group-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_group_history', 'position' => 110, 'config' => array('class' => 'group', 'title' => 'pim_enrich.form.group.tab.history.title')));
        $instance->addExtension('pim-group-edit-form-products', array('module' => 'pim/group-edit-form/products', 'parent' => 'pim-group-edit-form-form-tabs', 'targetZone' => 'container', 'position' => 80, 'config' => array('label' => 'pim_enrich.form.group.tab.products.title', 'gridId' => 'product-group-grid')));
        $instance->addExtension('pim-product-edit-form', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-product-edit-form-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-product-edit-form', 'position' => 1000));
        $instance->addExtension('pim-product-edit-form-sequential-edit', array('module' => 'pim/product-edit-form/sequential-edit', 'parent' => 'pim-product-edit-form', 'targetZone' => 'sequential', 'aclResourceId' => 'pim_enrich_product_edit_attributes', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-form-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-product-edit-form', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-product-label', array('module' => 'pim/product-edit-form/product-label', 'parent' => 'pim-product-edit-form', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-product-edit-form', 'targetZone' => 'back', 'aclResourceId' => 'pim_enrich_product_index', 'position' => 80, 'config' => array('backUrl' => 'pim_enrich_product_index')));
        $instance->addExtension('pim-product-edit-form-download-pdf', array('module' => 'pim/product-edit-form/download-pdf', 'parent' => 'pim-product-edit-form', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_pdf_generator_product_download', 'position' => 90));
        $instance->addExtension('pim-product-edit-form-delete', array('module' => 'pim/product-edit-form/delete', 'parent' => 'pim-product-edit-form', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_enrich_product_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.product', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'pim_enrich.entity.product.info.deletion_successful', 'fail' => 'pim_enrich.entity.product.info.deletion_failed'), 'redirect' => 'pim_enrich_product_index')));
        $instance->addExtension('pim-product-edit-form-status-switcher', array('module' => 'pim/product-edit-form/status-switcher', 'parent' => 'pim-product-edit-form', 'targetZone' => 'title-buttons', 'aclResourceId' => 'pim_enrich_product_change_state', 'position' => 110));
        $instance->addExtension('pim-product-edit-form-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-product-edit-form', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-product-edit-form-save', array('module' => 'pim/product-edit-form/save', 'parent' => 'pim-product-edit-form', 'targetZone' => 'buttons', 'position' => 0));
        $instance->addExtension('pim-product-edit-form-save-and-back', array('module' => 'pim/product-edit-form/save-and-back', 'parent' => 'pim-product-edit-form', 'targetZone' => 'buttons', 'position' => 0));
        $instance->addExtension('pim-product-edit-form-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-product-edit-form', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.product.title')));
        $instance->addExtension('pim-product-edit-form-family', array('module' => 'pim/product-edit-form/meta/family', 'parent' => 'pim-product-edit-form', 'targetZone' => 'meta', 'position' => 80));
        $instance->addExtension('pim-product-edit-form-change-family', array('module' => 'pim/product-edit-form/meta/change-family', 'parent' => 'pim-product-edit-form-family', 'targetZone' => 'self', 'aclResourceId' => 'pim_enrich_product_change_family', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-created', array('module' => 'pim/form/common/meta/created', 'parent' => 'pim-product-edit-form', 'targetZone' => 'meta', 'position' => 90, 'config' => array('label' => 'pim_enrich.entity.product.meta.created', 'labelBy' => 'pim_enrich.entity.product.meta.created_by')));
        $instance->addExtension('pim-product-edit-form-updated', array('module' => 'pim/form/common/meta/updated', 'parent' => 'pim-product-edit-form', 'targetZone' => 'meta', 'position' => 100, 'config' => array('label' => 'pim_enrich.entity.product.meta.updated', 'labelBy' => 'pim_enrich.entity.product.meta.updated_by')));
        $instance->addExtension('pim-product-edit-form-groups', array('module' => 'pim/product-edit-form/meta/groups', 'parent' => 'pim-product-edit-form', 'targetZone' => 'meta', 'position' => 110));
        $instance->addExtension('pim-product-edit-form-attributes', array('module' => 'pim/product-edit-form/attributes', 'parent' => 'pim-product-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_product_edit_attributes', 'position' => 90, 'config' => array('removeAttributeRoute' => 'pim_enrich_product_remove_attribute_rest', 'removeAttributeACL' => 'pim_enrich_product_remove_attribute', 'tabTitle' => 'pim_enrich.form.product.tab.attributes.title', 'deletionFailed' => 'pim_enrich.form.product.flash.attribute_deletion_error')));
        $instance->addExtension('pim-product-edit-form-categories', array('module' => 'pim/product-edit-form/categories', 'parent' => 'pim-product-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_product_categories_view', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-associations', array('module' => 'pim/product-edit-form/associations', 'parent' => 'pim-product-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_associations_view', 'position' => 110));
        $instance->addExtension('pim-product-edit-form-panels', array('module' => 'pim/product-edit-form/panel/panels', 'parent' => 'pim-product-edit-form-form-tabs', 'targetZone' => 'panels', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-attribute-group-selector', array('module' => 'pim/form/common/attributes/attribute-group-selector', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'sidebar', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-add-attribute', array('module' => 'pim/common/add-attribute', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'other-actions', 'aclResourceId' => 'pim_enrich_product_add_attribute', 'position' => 90));
        $instance->addExtension('pim-product-edit-form-copy', array('module' => 'pim/form/common/attributes/copy', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'header', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-attribute-scope-switcher', array('module' => 'pim/product-edit-form/scope-switcher', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'context-selectors', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-attribute-locale-switcher', array('module' => 'pim/product-edit-form/locale-switcher', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'context-selectors', 'position' => 110));
        $instance->addExtension('pim-product-edit-form-validation', array('module' => 'pim/product-edit-form/attributes/validation', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'header', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-variant-group', array('module' => 'pim/product-edit-form/attributes/variant-group', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'self', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-locale-specific', array('module' => 'pim/product-edit-form/attributes/locale-specific', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'self', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-localizable', array('module' => 'pim/product-edit-form/attributes/localizable', 'parent' => 'pim-product-edit-form-attributes', 'targetZone' => 'self', 'position' => 90));
        $instance->addExtension('pim-product-edit-form-completeness', array('module' => 'pim/product-edit-form/panel/completeness', 'parent' => 'pim-product-edit-form-panels', 'targetZone' => 'panel-content', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-comments', array('module' => 'pim/product-edit-form/panel/comments', 'parent' => 'pim-product-edit-form-panels', 'targetZone' => 'panel-content', 'aclResourceId' => 'pim_enrich_product_comment', 'position' => 110));
        $instance->addExtension('pim-product-edit-form-history', array('module' => 'pim/product-edit-form/panel/history', 'parent' => 'pim-product-edit-form-panels', 'targetZone' => 'panel-content', 'aclResourceId' => 'pim_enrich_product_history', 'position' => 120));
        $instance->addExtension('pim-product-edit-form-panel-selector', array('module' => 'pim/product-edit-form/panel/selector', 'parent' => 'pim-product-edit-form-panels', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-copy-scope-switcher', array('module' => 'pim/product-edit-form/scope-switcher', 'parent' => 'pim-product-edit-form-copy', 'targetZone' => 'context-selectors', 'position' => 100));
        $instance->addExtension('pim-product-edit-form-copy-locale-switcher', array('module' => 'pim/product-edit-form/locale-switcher', 'parent' => 'pim-product-edit-form-copy', 'targetZone' => 'context-selectors', 'position' => 110));
        $instance->addExtension('pim-mass-product-edit-form', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-mass-product-edit-form-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-mass-product-edit-form', 'position' => 1000));
        $instance->addExtension('pim-mass-product-edit-form-attributes', array('module' => 'pim/mass-product-edit-form/attributes', 'parent' => 'pim-mass-product-edit-form', 'targetZone' => 'content', 'aclResourceId' => 'pim_enrich_product_edit_attributes', 'position' => 90));
        $instance->addExtension('pim-mass-product-edit-form-attribute-group-selector', array('module' => 'pim/form/common/attributes/attribute-group-selector', 'parent' => 'pim-mass-product-edit-form-attributes', 'targetZone' => 'sidebar', 'position' => 100));
        $instance->addExtension('pim-mass-product-edit-form-add-attribute', array('module' => 'pim/common/add-attribute', 'parent' => 'pim-mass-product-edit-form-attributes', 'targetZone' => 'other-actions', 'position' => 90, 'config' => array('select2' => array('placeholder' => 'pim_enrich.form.product.mass_edit.select_attributes', 'buttonTitle' => 'pim_enrich.form.product.mass_edit.select', 'title' => 'pim_enrich.form.product.mass_edit.select', 'emptyText' => 'pim_enrich.form.product.mass_edit.select'), 'searchParameters' => array('options' => array('exclude_unique' => true)))));
        $instance->addExtension('pim-mass-product-edit-form-validation', array('module' => 'pim/product-edit-form/attributes/validation', 'parent' => 'pim-mass-product-edit-form-attributes', 'targetZone' => 'header', 'position' => 100));
        $instance->addExtension('pim-mass-product-edit-form-locale-specific', array('module' => 'pim/product-edit-form/attributes/locale-specific', 'parent' => 'pim-mass-product-edit-form-attributes', 'targetZone' => 'self', 'position' => 100));
        $instance->addExtension('pim-mass-product-edit-form-localizable', array('module' => 'pim/product-edit-form/attributes/localizable', 'parent' => 'pim-mass-product-edit-form-attributes', 'targetZone' => 'self', 'position' => 90));
        $instance->addExtension('pim-mass-product-edit-form-hidden-input-updater', array('module' => 'pim/mass-product-edit-form/hidden-field-updater', 'parent' => 'pim-mass-product-edit-form', 'position' => 500));
        $instance->addExtension('pim-variant-group-edit-form', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-variant-group-edit-form-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-variant-group-edit-form', 'position' => 1000));
        $instance->addExtension('pim-variant-group-edit-form-form-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-label', array('module' => 'pim/form/common/label', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'back', 'aclResourceId' => 'pim_enrich_variant_group_index', 'position' => 80, 'config' => array('backUrl' => 'pim_enrich_variant_group_index')));
        $instance->addExtension('pim-variant-group-edit-form-delete', array('module' => 'pim/variant-group-edit-form/delete', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_enrich_variant_group_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.variant group', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.variant group.removed', 'fail' => 'error.removing.variant_group'), 'redirect' => 'pim_enrich_variant_group_index')));
        $instance->addExtension('pim-variant-group-edit-form-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-variant-group-edit-form-save', array('module' => 'pim/variant-group-edit-form/save', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'buttons', 'position' => 0));
        $instance->addExtension('pim-variant-group-edit-form-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.variant_group.title')));
        $instance->addExtension('pim-variant-group-edit-form-created', array('module' => 'pim/form/common/meta/created', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'meta', 'position' => 90, 'config' => array('label' => 'pim_enrich.entity.variant_group.meta.created', 'labelBy' => 'pim_enrich.entity.variant_group.meta.created_by')));
        $instance->addExtension('pim-variant-group-edit-form-updated', array('module' => 'pim/form/common/meta/updated', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'meta', 'position' => 100, 'config' => array('label' => 'pim_enrich.entity.variant_group.meta.updated', 'labelBy' => 'pim_enrich.entity.variant_group.meta.updated_by')));
        $instance->addExtension('pim-variant-group-edit-form-product-count', array('module' => 'pim/group-edit-form/meta/product-count', 'parent' => 'pim-variant-group-edit-form', 'targetZone' => 'meta', 'position' => 110, 'config' => array('productCountLabel' => 'pim_enrich.entity.variant_group.meta.product_count')));
        $instance->addExtension('pim-variant-group-edit-form-attributes', array('module' => 'pim/form/common/attributes', 'parent' => 'pim-variant-group-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_variant_group_edit_attributes', 'position' => 90, 'config' => array('removeAttributeRoute' => 'pim_enrich_variant_group_rest_remove_attribute', 'removeAttributeACL' => 'pim_enrich_product_remove_attribute', 'tabTitle' => 'pim_enrich.form.variant_group.tab.attributes.title', 'deletionFailed' => 'pim_enrich.form.variant_group.flash.attribute_deletion_error')));
        $instance->addExtension('pim-variant-group-edit-form-attribute-group-selector', array('module' => 'pim/form/common/attributes/attribute-group-selector', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'sidebar', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-add-attribute', array('module' => 'pim/variant-group-edit-form/add-attribute', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'other-actions', 'aclResourceId' => 'pim_enrich_variant_group_add_attributes', 'position' => 90, 'config' => array('searchParameters' => array('options' => array('exclude_unique' => true)))));
        $instance->addExtension('pim-variant-group-edit-form-copy', array('module' => 'pim/form/common/attributes/copy', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'header', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-attribute-scope-switcher', array('module' => 'pim/product-edit-form/scope-switcher', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'context-selectors', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-attribute-locale-switcher', array('module' => 'pim/product-edit-form/locale-switcher', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'context-selectors', 'position' => 110));
        $instance->addExtension('pim-variant-group-edit-form-no-attribute', array('module' => 'pim/variant-group-edit-form/no-attribute', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'other-actions', 'position' => 80));
        $instance->addExtension('pim-variant-group-edit-form-validation', array('module' => 'pim/product-edit-form/attributes/validation', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'header', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-locale-specific', array('module' => 'pim/product-edit-form/attributes/locale-specific', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'self', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-localizable', array('module' => 'pim/product-edit-form/attributes/localizable', 'parent' => 'pim-variant-group-edit-form-attributes', 'targetZone' => 'self', 'position' => 90));
        $instance->addExtension('pim-variant-group-edit-form-copy-scope-switcher', array('module' => 'pim/product-edit-form/scope-switcher', 'parent' => 'pim-variant-group-edit-form-copy', 'targetZone' => 'context-selectors', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-copy-locale-switcher', array('module' => 'pim/product-edit-form/locale-switcher', 'parent' => 'pim-variant-group-edit-form-copy', 'targetZone' => 'context-selectors', 'position' => 110));
        $instance->addExtension('pim-variant-group-edit-form-properties', array('module' => 'pim/common/tab/properties', 'parent' => 'pim-variant-group-edit-form-form-tabs', 'targetZone' => 'container', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.variant_group.tab.properties.title')));
        $instance->addExtension('pim-variant-group-edit-form-properties-general', array('module' => 'pim/variant-group-edit-form/properties/general', 'parent' => 'pim-variant-group-edit-form-properties', 'targetZone' => 'accordion', 'position' => 100));
        $instance->addExtension('pim-variant-group-edit-form-properties-translation', array('module' => 'pim/common/properties/translation', 'parent' => 'pim-variant-group-edit-form-properties', 'targetZone' => 'accordion', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.variant_group.tab.properties.label_translations', 'fieldBaseId' => 'pim_enrich_variant_group_form_label_')));
        $instance->addExtension('pim-variant-group-edit-form-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-variant-group-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_variant_group_history', 'position' => 110, 'config' => array('class' => 'group', 'title' => 'pim_enrich.form.variant_group.tab.history.title')));
        $instance->addExtension('pim-variant-group-edit-form-products', array('module' => 'pim/group-edit-form/products', 'parent' => 'pim-variant-group-edit-form-form-tabs', 'targetZone' => 'container', 'position' => 80, 'config' => array('label' => 'pim_enrich.form.variant_group.tab.products.title', 'gridId' => 'product-variant-group-grid')));
        $instance->addExtension('pim-job-instance-csv-product-import-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-product-import-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-product-import-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-show-upload', array('module' => 'pim/job/common/edit/upload', 'parent' => 'pim-job-instance-csv-product-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'content', 'position' => 90));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-product-import-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_show', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-product-import-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-decimal-separator', array('module' => 'pim/job/common/edit/field/decimal-separator', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.decimalSeparator', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.decimal_separator.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.decimal_separator.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-escape', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 170, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.escape', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.escape.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.escape.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-categories-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 180, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.categoriesColumn', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.categories_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.categoriesColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-family-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 190, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.familyColumn', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.family_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.familyColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-groups-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 200, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.groupsColumn', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.groups_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.groupsColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-enabled', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 210, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enabled', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enabled.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enabled.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 230, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-enabled-comparison', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 210, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enabledComparison', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enabled_comparison.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enabledComparison.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-real-time-versioning', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 220, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.realTimeVersioning', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.real_time_versioning.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.realTimeVersioning.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-show-properties', 'position' => 230, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-product-import-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-product-import-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-product-import-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-import-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-csv-product-import-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_import_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-product-import-show-launch', array('module' => 'pim/job/common/edit/upload-launch', 'parent' => 'pim-job-instance-csv-product-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('launch' => 'pim_enrich.form.job_instance.button.import.launch', 'upload' => 'pim_enrich.form.job_instance.button.import.upload', 'route' => 'pim_enrich_job_instance_rest_import_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-product-import-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-csv-product-import-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-product-import-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-product-import-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-decimal-separator', array('module' => 'pim/job/common/edit/field/decimal-separator', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 100, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.decimalSeparator', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.decimal_separator.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.decimal_separator.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 110, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.file_path.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-escape', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.escape', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.escape.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.escape.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-with-media', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.with_media', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_media.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_media.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 170, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-categories-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 180, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.categoriesColumn', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.categories_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.categoriesColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-family-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 190, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.familyColumn', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.family_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.familyColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-groups-column', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 200, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.groupsColumn', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.groups_column.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.groupsColumn.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-enabled', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 200, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enabled', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enabled.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enabled.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-enabled-comparison', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 210, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enabledComparison', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enabled_comparison.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enabledComparison.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-properties-real-time-versioning', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-import-edit-properties', 'position' => 220, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.realTimeVersioning', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.real_time_versioning.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.realTimeVersioning.help')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-delete', array('module' => 'pim/job/import/edit/delete', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_import_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-save', array('module' => 'pim/job-instance-import-edit-form/save', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_import_profile_show')));
        $instance->addExtension('pim-job-instance-csv-product-import-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-csv-product-import-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-xlsx-base-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-xlsx-base-export-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties-lines-per-file', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-edit-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.linesPerFile', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.lines_per_file.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.lines_per_file.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-base-export-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.withHeader.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-delete', array('module' => 'pim/job/export/edit/delete', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_export_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-save', array('module' => 'pim/job-instance-export-edit-form/save', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_export_profile_show')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-xlsx-base-export-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-xlsx-base-export-edit'));
        $instance->addExtension('pim-job-instance-csv-base-export-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-csv-base-export-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-base-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-base-export-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-base-export-edit-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.withHeader.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-delete', array('module' => 'pim/job/export/edit/delete', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_export_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-save', array('module' => 'pim/job-instance-export-edit-form/save', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_export_profile_show')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-csv-base-export-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-csv-base-export-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-csv-base-export-edit'));
        $instance->addExtension('pim-job-instance-yml-base-import-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-yml-base-import-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-yml-base-import-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-yml-base-import-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-yml-base-import-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-delete', array('module' => 'pim/job/import/edit/delete', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_import_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-save', array('module' => 'pim/job-instance-import-edit-form/save', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_import_profile_show')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-yml-base-import-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-yml-base-import-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-yml-base-import-edit'));
        $instance->addExtension('pim-job-instance-csv-base-import-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-base-import-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-base-import-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-show-upload', array('module' => 'pim/job/common/edit/upload', 'parent' => 'pim-job-instance-csv-base-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'content', 'position' => 90));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-base-import-show-tabs', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-base-import-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-escape', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.escape', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.escape.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.escape.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-base-import-show-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-base-import-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-base-import-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-base-import-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-import-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-csv-base-import-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_import_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-base-import-show-launch', array('module' => 'pim/job/common/edit/upload-launch', 'parent' => 'pim-job-instance-csv-base-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('launch' => 'pim_enrich.form.job_instance.button.import.launch', 'upload' => 'pim_enrich.form.job_instance.button.import.upload', 'route' => 'pim_enrich_job_instance_rest_import_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-yml-base-import-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-yml-base-import-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-yml-base-import-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-show-upload', array('module' => 'pim/job/common/edit/upload', 'parent' => 'pim-job-instance-yml-base-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'content', 'position' => 90));
        $instance->addExtension('pim-job-instance-yml-base-import-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-yml-base-import-show-tabs', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-yml-base-import-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-yml-base-import-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-yml-base-import-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-import-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-import-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-import-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-yml-base-import-show-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-yml-base-import-show-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-yml-base-import-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-yml-base-import-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-yml-base-import-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-import-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-yml-base-import-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-import-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-yml-base-import-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_import_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-yml-base-import-show-launch', array('module' => 'pim/job/common/edit/upload-launch', 'parent' => 'pim-job-instance-yml-base-import-show', 'aclResourceId' => 'pim_importexport_import_profile_launch', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('launch' => 'pim_enrich.form.job_instance.button.import.launch', 'upload' => 'pim_enrich.form.job_instance.button.import.upload', 'route' => 'pim_enrich_job_instance_rest_import_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-xlsx-product-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content', array('module' => 'pim/job/product/edit/content', 'parent' => 'pim-job-instance-xlsx-product-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_content_edit', 'targetZone' => 'container', 'position' => 110, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.content.title', 'tabCode' => 'pim-job-instance-content')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-xlsx-product-export-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-decimal-separator', array('module' => 'pim/job/common/edit/field/decimal-separator', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 100, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.decimalSeparator', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.decimal_separator.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.decimal_separator.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 110, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.file_path.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-lines-per-file', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.linesPerFile', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.lines_per_file.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.lines_per_file.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-properties-with-media', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-product-export-edit-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.with_media', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_media.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_media.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-structure', array('module' => 'pim/job/product/edit/content/structure', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content', 'targetZone' => 'structure-filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-delete', array('module' => 'pim/job/export/edit/delete', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_export_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-save', array('module' => 'pim/job-instance-export-edit-form/save', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_export_profile_show')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-xlsx-product-export-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-structure-scope', array('module' => 'pim/job/product/edit/content/structure/scope', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 90));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-structure-locales', array('module' => 'pim/job/product/edit/content/structure/locales', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-structure-attributes', array('module' => 'pim/job/product/edit/content/structure/attributes', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 110));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-data', array('module' => 'pim/job/product/edit/content/data', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content', 'targetZone' => 'data-filters', 'config' => array('filters' => array(0 => array('field' => 'family', 'view' => 'akeneo-product-family-filter'), 1 => array('field' => 'enabled', 'view' => 'akeneo-product-enabled-filter'), 2 => array('field' => 'completeness', 'view' => 'akeneo-product-completeness-filter'), 3 => array('field' => 'updated', 'view' => 'akeneo-product-updated-filter'), 4 => array('field' => 'categories', 'view' => 'akeneo-product-category-filter')))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-default-attribute-filters', array('module' => 'pim/job/product/edit/content/data/default-attribute-filters', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-data', 'config' => array('types' => array(0 => 'pim_catalog_identifier'))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-data-help', array('module' => 'pim/job/product/edit/content/data/help', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-data'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-content-data-add-filter', array('module' => 'pim/job/product/edit/content/data/add-filter', 'parent' => 'pim-job-instance-xlsx-product-export-edit-content-data', 'targetZone' => 'headings'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-xlsx-product-export-edit'));
        $instance->addExtension('pim-job-instance-csv-product-export-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-csv-product-export-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-product-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content', array('module' => 'pim/job/product/edit/content', 'parent' => 'pim-job-instance-csv-product-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_content_edit', 'targetZone' => 'container', 'position' => 110, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.content.title', 'tabCode' => 'pim-job-instance-content')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-product-export-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 110, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.file_path.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-properties-with-media', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-export-edit-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.with_media', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_media.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_media.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-structure', array('module' => 'pim/job/product/edit/content/structure', 'parent' => 'pim-job-instance-csv-product-export-edit-content', 'targetZone' => 'structure-filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-delete', array('module' => 'pim/job/export/edit/delete', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_export_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-save', array('module' => 'pim/job-instance-export-edit-form/save', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_export_profile_show')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-csv-product-export-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-structure-scope', array('module' => 'pim/job/product/edit/content/structure/scope', 'parent' => 'pim-job-instance-csv-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 90));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-structure-locales', array('module' => 'pim/job/product/edit/content/structure/locales', 'parent' => 'pim-job-instance-csv-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-structure-attributes', array('module' => 'pim/job/product/edit/content/structure/attributes', 'parent' => 'pim-job-instance-csv-product-export-edit-content-structure', 'targetZone' => 'filters', 'position' => 110));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-data', array('module' => 'pim/job/product/edit/content/data', 'parent' => 'pim-job-instance-csv-product-export-edit-content', 'targetZone' => 'data-filters', 'config' => array('filters' => array(0 => array('field' => 'family', 'view' => 'akeneo-product-family-filter'), 1 => array('field' => 'enabled', 'view' => 'akeneo-product-enabled-filter'), 2 => array('field' => 'completeness', 'view' => 'akeneo-product-completeness-filter'), 3 => array('field' => 'updated', 'view' => 'akeneo-product-updated-filter'), 4 => array('field' => 'categories', 'view' => 'akeneo-product-category-filter')))));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-default-attribute-filters', array('module' => 'pim/job/product/edit/content/data/default-attribute-filters', 'parent' => 'pim-job-instance-csv-product-export-edit-content-data', 'config' => array('types' => array(0 => 'pim_catalog_identifier'))));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-data-help', array('module' => 'pim/job/product/edit/content/data/help', 'parent' => 'pim-job-instance-csv-product-export-edit-content-data'));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-csv-product-export-edit'));
        $instance->addExtension('pim-job-instance-csv-product-export-edit-content-data-add-filter', array('module' => 'pim/job/product/edit/content/data/add-filter', 'parent' => 'pim-job-instance-csv-product-export-edit-content-data', 'targetZone' => 'headings'));
        $instance->addExtension('pim-job-instance-yml-base-export-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-yml-base-export-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-yml-base-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-yml-base-export-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-yml-base-export-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-yml-base-export-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-export-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-export-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-yml-base-export-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-export-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_export_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-yml-base-export-show-launch', array('module' => 'pim/job/common/edit/launch', 'parent' => 'pim-job-instance-yml-base-export-show', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.job_instance.button.export.title', 'route' => 'pim_enrich_job_instance_rest_export_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-yml-base-export-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-yml-base-export-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-yml-base-export-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-yml-base-export-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-yml-base-export-edit-properties', 'position' => 100, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-delete', array('module' => 'pim/job/export/edit/delete', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_export_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-save', array('module' => 'pim/job-instance-export-edit-form/save', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_export_profile_show')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-yml-base-export-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-yml-base-export-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-yml-base-export-edit'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-xlsx-product-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content', array('module' => 'pim/job/product/edit/content', 'parent' => 'pim-job-instance-xlsx-product-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_content_edit', 'targetZone' => 'container', 'position' => 110, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.content.title', 'tabCode' => 'pim-job-instance-content')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-xlsx-product-export-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-decimal-separator', array('module' => 'pim/job/common/edit/field/decimal-separator', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 100, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.decimalSeparator', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.decimal_separator.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.decimal_separator.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 110, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.file_path.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-lines-per-file', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.linesPerFile', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.lines_per_file.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.lines_per_file.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-properties-with-media', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-product-export-show-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.with_media', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_media.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_media.help')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-structure', array('module' => 'pim/job/product/edit/content/structure', 'parent' => 'pim-job-instance-xlsx-product-export-show-content', 'targetZone' => 'structure-filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-structure-scope', array('module' => 'pim/job/product/edit/content/structure/scope', 'parent' => 'pim-job-instance-xlsx-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 90, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-structure-locales', array('module' => 'pim/job/product/edit/content/structure/locales', 'parent' => 'pim-job-instance-xlsx-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 100, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-structure-attributes', array('module' => 'pim/job/product/edit/content/structure/attributes', 'parent' => 'pim-job-instance-xlsx-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 110, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-data', array('module' => 'pim/job/product/edit/content/data', 'parent' => 'pim-job-instance-xlsx-product-export-show-content', 'targetZone' => 'data-filters', 'config' => array('filters' => array(0 => array('field' => 'family', 'view' => 'akeneo-product-family-filter'), 1 => array('field' => 'enabled', 'view' => 'akeneo-product-enabled-filter'), 2 => array('field' => 'completeness', 'view' => 'akeneo-product-completeness-filter'), 3 => array('field' => 'updated', 'view' => 'akeneo-product-updated-filter'), 4 => array('field' => 'categories', 'view' => 'akeneo-product-category-filter')))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-readonly', array('module' => 'pim/job/product/edit/content/readonly', 'parent' => 'pim-job-instance-xlsx-product-export-show-content'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-default-attribute-filters', array('module' => 'pim/job/product/edit/content/data/default-attribute-filters', 'parent' => 'pim-job-instance-xlsx-product-export-show-content-data', 'config' => array('types' => array(0 => 'pim_catalog_identifier'))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-content-data-help', array('module' => 'pim/job/product/edit/content/data/help', 'parent' => 'pim-job-instance-xlsx-product-export-show-content-data'));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_export_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-xlsx-product-export-show-launch', array('module' => 'pim/job/common/edit/launch', 'parent' => 'pim-job-instance-xlsx-product-export-show', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.job_instance.button.export.title', 'route' => 'pim_enrich_job_instance_rest_export_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-base-export-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-base-export-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-base-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-base-export-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-base-export-show-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.withHeader.help')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-export-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-export-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_export_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-base-export-show-launch', array('module' => 'pim/job/common/edit/launch', 'parent' => 'pim-job-instance-csv-base-export-show', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.job_instance.button.export.title', 'route' => 'pim_enrich_job_instance_rest_export_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-base-import-edit', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-job-instance-csv-base-import-edit', 'position' => 1000));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-base-import-edit-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-base-import-edit-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_import_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => false)));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-file-upload', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.uploadAllowed', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.upload_allowed.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.uploadAllowed.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-base-import-edit-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => false, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_import_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-delete', array('module' => 'pim/job/import/edit/delete', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_importexport_import_profile_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.job_instance', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.job_instance.removed', 'failed' => 'error.removing.job_instance'), 'redirect' => 'pim_importexport_import_profile_index')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'buttons', 'position' => 120));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-save', array('module' => 'pim/job-instance-import-edit-form/save', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'buttons', 'position' => 0, 'config' => array('redirectPath' => 'pim_importexport_import_profile_show')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-job-instance-csv-base-import-edit', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.job_instance.title')));
        $instance->addExtension('pim-job-instance-csv-base-import-edit-validation', array('module' => 'pim/job/common/edit/validation', 'parent' => 'pim-job-instance-csv-base-import-edit'));
        $instance->addExtension('pim-job-instance-csv-product-export-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-csv-product-export-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-csv-product-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_show', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content', array('module' => 'pim/job/product/edit/content', 'parent' => 'pim-job-instance-csv-product-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_content_show', 'targetZone' => 'container', 'position' => 110, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.content.title', 'tabCode' => 'pim-job-instance-content')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-csv-product-export-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-date-format', array('module' => 'pim/job/product/edit/field/date-format', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 110, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.dateFormat', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.date_format.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.date_format.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.file_path.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-delimiter', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.delimiter', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.delimiter.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.delimiter.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-enclosure', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 140, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.enclosure', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.enclosure.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.enclosure.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 150, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_header.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-properties-with-media', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-csv-product-export-show-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.with_media', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_media.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.with_media.help')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-structure', array('module' => 'pim/job/product/edit/content/structure', 'parent' => 'pim-job-instance-csv-product-export-show-content', 'targetZone' => 'structure-filters', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-csv-product-export-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-structure-scope', array('module' => 'pim/job/product/edit/content/structure/scope', 'parent' => 'pim-job-instance-csv-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 90, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-structure-locales', array('module' => 'pim/job/product/edit/content/structure/locales', 'parent' => 'pim-job-instance-csv-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 100, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-structure-attributes', array('module' => 'pim/job/product/edit/content/structure/attributes', 'parent' => 'pim-job-instance-csv-product-export-show-content-structure', 'targetZone' => 'filters', 'position' => 110, 'config' => array('readOnly' => true)));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-data', array('module' => 'pim/job/product/edit/content/data', 'parent' => 'pim-job-instance-csv-product-export-show-content', 'targetZone' => 'data-filters', 'config' => array('filters' => array(0 => array('field' => 'family', 'view' => 'akeneo-product-family-filter'), 1 => array('field' => 'enabled', 'view' => 'akeneo-product-enabled-filter'), 2 => array('field' => 'completeness', 'view' => 'akeneo-product-completeness-filter'), 3 => array('field' => 'updated', 'view' => 'akeneo-product-updated-filter'), 4 => array('field' => 'categories', 'view' => 'akeneo-product-category-filter')))));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-readonly', array('module' => 'pim/job/product/edit/content/readonly', 'parent' => 'pim-job-instance-csv-product-export-show-content'));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-default-attribute-filters', array('module' => 'pim/job/product/edit/content/data/default-attribute-filters', 'parent' => 'pim-job-instance-csv-product-export-show-content-data', 'config' => array('types' => array(0 => 'pim_catalog_identifier'))));
        $instance->addExtension('pim-job-instance-csv-product-export-show-content-data-help', array('module' => 'pim/job/product/edit/content/data/help', 'parent' => 'pim-job-instance-csv-product-export-show-content-data'));
        $instance->addExtension('pim-job-instance-csv-product-export-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_export_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-csv-product-export-show-launch', array('module' => 'pim/job/common/edit/launch', 'parent' => 'pim-job-instance-csv-product-export-show', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.job_instance.button.export.title', 'route' => 'pim_enrich_job_instance_rest_export_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'content', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties', array('module' => 'pim/job/common/edit/properties', 'parent' => 'pim-job-instance-xlsx-base-export-show-tabs', 'aclResourceId' => 'pim_importexport_export_profile_property_edit', 'targetZone' => 'container', 'position' => 100, 'config' => array('tabTitle' => 'pim_enrich.form.job_instance.tab.properties.title', 'tabCode' => 'pim-job-instance-properties')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-job-instance-xlsx-base-export-show-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_importexport_export_profile_history', 'position' => 120, 'config' => array('class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance', 'title' => 'pim_enrich.form.job_instance.tab.history.title', 'tabCode' => 'pim-job-instance-history')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties-code', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-show-properties', 'position' => 100, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'code', 'label' => 'pim_enrich.form.job_instance.tab.properties.code.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties-label', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-show-properties', 'position' => 110, 'targetZone' => 'properties', 'config' => array('fieldCode' => 'label', 'label' => 'pim_enrich.form.job_instance.tab.properties.label.title', 'readOnly' => true)));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties-file-path', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-base-export-show-properties', 'position' => 120, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.filePath', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.file_path.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.filePath.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties-lines-per-file', array('module' => 'pim/job/common/edit/field/text', 'parent' => 'pim-job-instance-xlsx-product-export-show-form-properties', 'position' => 130, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.linesPerFile', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.lines_per_file.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.lines_per_file.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-properties-with-header', array('module' => 'pim/job/common/edit/field/switch', 'parent' => 'pim-job-instance-xlsx-base-export-show-properties', 'position' => 160, 'targetZone' => 'global-settings', 'config' => array('fieldCode' => 'configuration.withHeader', 'readOnly' => true, 'label' => 'pim_enrich.form.job_instance.tab.properties.with_header.title', 'tooltip' => 'pim_enrich.form.job_instance.tab.properties.help.withHeader.help')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-label', array('module' => 'pim/job/common/edit/label', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'title', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-meta', array('module' => 'pim/job/common/edit/meta', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'meta', 'position' => 100));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'back', 'aclResourceId' => 'pim_importexport_export_profile_index', 'position' => 80, 'config' => array('backUrl' => 'pim_importexport_export_profile_index')));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-edit', array('module' => 'pim/common/redirect', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'buttons', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.job_instance.button.edit.title', 'route' => 'pim_importexport_export_profile_edit', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-job-instance-xlsx-base-export-show-launch', array('module' => 'pim/job/common/edit/launch', 'parent' => 'pim-job-instance-xlsx-base-export-show', 'targetZone' => 'buttons', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.job_instance.button.export.title', 'route' => 'pim_enrich_job_instance_rest_export_launch', 'identifier' => array('path' => 'code', 'name' => 'code'))));
        $instance->addExtension('pim-association-type-edit-form', array('module' => 'pim/form/common/edit-form'));
        $instance->addExtension('pim-association-type-edit-form-cache-invalidator', array('module' => 'pim/cache-invalidator', 'parent' => 'pim-association-type-edit-form', 'position' => 1000));
        $instance->addExtension('pim-association-type-edit-form-form-tabs', array('module' => 'pim/form/common/form-tabs', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'content', 'position' => 90));
        $instance->addExtension('pim-association-type-edit-form-label', array('module' => 'pim/form/common/label', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'title', 'position' => 110));
        $instance->addExtension('pim-association-type-edit-form-back-to-grid', array('module' => 'pim/form/common/back-to-grid', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'back', 'aclResourceId' => 'pim_enrich_associationtype_index', 'position' => 80, 'config' => array('backUrl' => 'pim_enrich_associationtype_index')));
        $instance->addExtension('pim-association-type-edit-form-delete', array('module' => 'pim/association-type-edit-form/delete', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'buttons', 'aclResourceId' => 'pim_enrich_associationtype_remove', 'position' => 100, 'config' => array('trans' => array('title' => 'confirmation.remove.association_type', 'content' => 'pim_enrich.confirmation.delete_item', 'success' => 'flash.association_type.removed', 'fail' => 'error.removing.association_type'), 'redirect' => 'pim_enrich_associationtype_index')));
        $instance->addExtension('pim-association-type-edit-form-save-buttons', array('module' => 'pim/form/common/save-buttons', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'buttons', 'position' => 100));
        $instance->addExtension('pim-association-type-edit-form-save', array('module' => 'pim/association-type-edit-form/save', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'buttons', 'position' => 0));
        $instance->addExtension('pim-association-type-edit-form-state', array('module' => 'pim/form/common/state', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'state', 'position' => 900, 'config' => array('entity' => 'pim_enrich.entity.association_type.title')));
        $instance->addExtension('pim-association-type-edit-form-created', array('module' => 'pim/form/common/meta/created', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'meta', 'position' => 90, 'config' => array('label' => 'pim_enrich.entity.association_type.meta.created', 'labelBy' => 'pim_enrich.entity.association_type.meta.created_by')));
        $instance->addExtension('pim-association-type-edit-form-updated', array('module' => 'pim/form/common/meta/updated', 'parent' => 'pim-association-type-edit-form', 'targetZone' => 'meta', 'position' => 100, 'config' => array('label' => 'pim_enrich.entity.association_type.meta.updated', 'labelBy' => 'pim_enrich.entity.association_type.meta.updated_by')));
        $instance->addExtension('pim-association-type-edit-form-properties', array('module' => 'pim/common/tab/properties', 'parent' => 'pim-association-type-edit-form-form-tabs', 'targetZone' => 'container', 'position' => 100, 'config' => array('label' => 'pim_enrich.form.association_type.tab.properties.title')));
        $instance->addExtension('pim-association-type-edit-form-properties-general', array('module' => 'pim/association-type-edit-form/properties/general', 'parent' => 'pim-association-type-edit-form-properties', 'targetZone' => 'accordion', 'position' => 100));
        $instance->addExtension('pim-association-type-edit-form-properties-translation', array('module' => 'pim/common/properties/translation', 'parent' => 'pim-association-type-edit-form-properties', 'targetZone' => 'accordion', 'position' => 110, 'config' => array('label' => 'pim_enrich.form.association_type.tab.properties.label_translations', 'fieldBaseId' => 'pim_enrich_association_type_form_label_')));
        $instance->addExtension('pim-association-type-edit-form-history', array('module' => 'pim/common/tab/history', 'parent' => 'pim-association-type-edit-form-form-tabs', 'targetZone' => 'container', 'aclResourceId' => 'pim_enrich_associationtype_history', 'position' => 120, 'config' => array('class' => 'association_type', 'title' => 'pim_enrich.form.association_type.tab.history.title')));
        $instance->addExtension('pim-grid-view-selector', array('module' => 'pim/grid/view-selector/selector', 'config' => array('viewTypes' => array(0 => 'view'))));
        $instance->addExtension('pim-grid-view-selector-footer', array('module' => 'pim/grid/view-selector/footer'));
        $instance->addExtension('pim-grid-view-selector-footer-create', array('module' => 'pim/grid/view-selector/footer/create', 'parent' => 'pim-grid-view-selector-footer', 'targetZone' => 'buttons', 'position' => 100));
        $instance->addExtension('pim-grid-view-selector-footer-create-view', array('module' => 'pim/grid/view-selector/footer/create/view', 'parent' => 'pim-grid-view-selector-footer-create', 'targetZone' => 'action-list', 'position' => 100));
        $instance->addExtension('pim-grid-view-selector-line', array('module' => 'pim/grid/view-selector/line'));
        $instance->addExtension('pim-grid-view-selector-current', array('module' => 'pim/grid/view-selector/current'));
        $instance->addExtension('pim-grid-view-selector-line-remove', array('module' => 'pim/grid/view-selector/line-remove', 'parent' => 'pim-grid-view-selector-line', 'targetZone' => 'overlay', 'position' => 100));
        $instance->addExtension('pim-grid-view-selector-save', array('module' => 'pim/grid/view-selector/save', 'parent' => 'pim-grid-view-selector', 'targetZone' => 'buttons', 'position' => 100));
        $instance->addExtension('akeneo-text-filter', array('module' => 'pim/filter/text'));
        $instance->addExtension('akeneo-product-family-filter', array('module' => 'pim/filter/product/family', 'config' => array('url' => 'pim_enrich_family_rest_index')));
        $instance->addExtension('akeneo-product-completeness-filter', array('module' => 'pim/filter/product/completeness', 'config' => array('operators' => array(0 => '>=', 1 => 'ALL', 2 => 'GREATER OR EQUALS THAN ON ALL LOCALES', 3 => 'LOWER THAN ON ALL LOCALES'))));
        $instance->addExtension('akeneo-product-category-filter', array('module' => 'pim/filter/product/category'));
        $instance->addExtension('akeneo-product-enabled-filter', array('module' => 'pim/filter/product/enabled'));
        $instance->addExtension('akeneo-product-updated-filter', array('module' => 'pim/filter/product/updated', 'config' => array('operators' => array(0 => 'ALL', 1 => 'SINCE LAST N DAYS', 2 => '>', 3 => 'SINCE LAST JOB'))));
        $instance->addExtension('akeneo-attribute-identifier-filter', array('module' => 'pim/filter/attribute/identifier'));
        $instance->addExtension('akeneo-attribute-boolean-filter', array('module' => 'pim/filter/attribute/boolean'));
        $instance->addExtension('akeneo-attribute-metric-filter', array('module' => 'pim/filter/attribute/metric', 'config' => array('operators' => array(0 => '=', 1 => '!=', 2 => '>=', 3 => '>', 4 => '<=', 5 => '<', 6 => 'EMPTY', 7 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-number-filter', array('module' => 'pim/filter/attribute/number', 'config' => array('operators' => array(0 => '=', 1 => '!=', 2 => '>=', 3 => '>', 4 => '<=', 5 => '<', 6 => 'EMPTY', 7 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-price-collection-filter', array('module' => 'pim/filter/attribute/price-collection', 'config' => array('operators' => array(0 => '=', 1 => '!=', 2 => '>=', 3 => '<=', 4 => '>', 5 => '<', 6 => 'EMPTY', 7 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-string-filter', array('module' => 'pim/filter/attribute/string', 'config' => array('operators' => array(0 => 'CONTAINS', 1 => 'DOES NOT CONTAIN', 2 => '=', 3 => 'STARTS WITH', 4 => 'ENDS WITH', 5 => 'EMPTY', 6 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-select-filter', array('module' => 'pim/filter/attribute/select', 'config' => array('url' => 'pim_ui_ajaxentity_list', 'entityClass' => 'PimCatalogBundle:AttributeOption', 'operators' => array(0 => 'IN', 1 => 'EMPTY', 2 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-select-reference-data-filter', array('module' => 'pim/filter/attribute/select', 'config' => array('url' => 'pim_ui_ajaxentity_list', 'operators' => array(0 => 'IN', 1 => 'EMPTY', 2 => 'NOT EMPTY'))));
        $instance->addExtension('akeneo-attribute-media-filter', array('module' => 'pim/filter/attribute/media', 'config' => array('operators' => array(0 => 'CONTAINS', 1 => 'DOES NOT CONTAIN', 2 => '=', 3 => 'STARTS WITH', 4 => 'ENDS WITH', 5 => 'EMPTY'))));
        $instance->addExtension('akeneo-attribute-date-filter', array('module' => 'pim/filter/attribute/date', 'config' => array('operators' => array(0 => '>', 1 => '<', 2 => '=', 3 => '!=', 4 => 'BETWEEN', 5 => 'NOT BETWEEN', 6 => 'EMPTY', 7 => 'NOT EMPTY'))));
        $instance->addExtension('pim-product-create-form', array('module' => 'pim/product-create-form'));
        $instance->addExtension('pim-attribute-option-form', array('module' => 'pim/attribute-option-form', 'zones' => array('form' => 'self', 'fields' => '.row-fluid')));
        $instance->addAttributeField('akeneo-switch-field', 'pim/boolean-field');
        $instance->addAttributeField('akeneo-datepicker-field', 'pim/date-field');
        $instance->addAttributeField('akeneo-media-uploader-field', 'pim/media-field');
        $instance->addAttributeField('akeneo-metric-field', 'pim/metric-field');
        $instance->addAttributeField('akeneo-multi-select-field', 'pim/multi-select-field');
        $instance->addAttributeField('akeneo-number-field', 'pim/number-field');
        $instance->addAttributeField('akeneo-price-collection-field', 'pim/price-collection-field');
        $instance->addAttributeField('akeneo-simple-select-field', 'pim/simple-select-field');
        $instance->addAttributeField('akeneo-text-field', 'pim/text-field');
        $instance->addAttributeField('akeneo-textarea-field', 'pim/textarea-field');
        $instance->addAttributeField('akeneo-wysiwyg-field', 'pim/wysiwyg-field');
        $instance->addAttributeField('akeneo-simple-select-reference-data-field', 'pim/reference-simple-select-field');
        $instance->addAttributeField('akeneo-multi-select-reference-data-field', 'pim/reference-multi-select-field');
        return $instance;
    }
    protected function getPimEnrich_Provider_StructureVersion_ProductService()
    {
        $this->services['pim_enrich.provider.structure_version.product'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\StructureVersion\StructureVersionProvider($this->get('pim_versioning.repository.version'));
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Category');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Channel');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Family');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Group');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Locale');
        return $instance;
    }
    protected function getPimEnrich_Provider_StructureVersion_VariantGroupService()
    {
        $this->services['pim_enrich.provider.structure_version.variant_group'] = $instance = new \Pim\Bundle\EnrichBundle\Provider\StructureVersion\StructureVersionProvider($this->get('pim_versioning.repository.version'));
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Channel');
        $instance->addResource('Pim\\Bundle\\CatalogBundle\\Entity\\Locale');
        return $instance;
    }
    protected function getPimEnrich_Remover_SequentialEditService()
    {
        return $this->services['pim_enrich.remover.sequential_edit'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit');
    }
    protected function getPimEnrich_Repository_AttributeService()
    {
        return $this->services['pim_enrich.repository.attribute'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\AttributeRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimEnrich_Repository_Attribute_SearchService()
    {
        return $this->services['pim_enrich.repository.attribute.search'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\AttributeSearchableRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimEnrich_Repository_AttributeGroupService()
    {
        return $this->services['pim_enrich.repository.attribute_group'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\AttributeGroupRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup');
    }
    protected function getPimEnrich_Repository_AttributeOption_SearchService()
    {
        return $this->services['pim_enrich.repository.attribute_option.search'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\AttributeOptionSearchableRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption');
    }
    protected function getPimEnrich_Repository_CategoryService()
    {
        return $this->services['pim_enrich.repository.category'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\CategoryRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimEnrich_Repository_FamilyService()
    {
        return $this->services['pim_enrich.repository.family'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\FamilyRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute');
    }
    protected function getPimEnrich_Repository_Family_SearchService()
    {
        return $this->services['pim_enrich.repository.family.search'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\FamilySearchableRepository($this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Family');
    }
    protected function getPimEnrich_Repository_GroupService()
    {
        return $this->services['pim_enrich.repository.group'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\GroupRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimEnrich_Repository_GroupTypeService()
    {
        return $this->services['pim_enrich.repository.group_type'] = new \Pim\Bundle\EnrichBundle\Doctrine\ORM\Repository\GroupTypeRepository($this->get('pim_user.context.user'), $this->get('doctrine.orm.default_entity_manager'), 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupType');
    }
    protected function getPimEnrich_Repository_SequentialEditService()
    {
        return $this->services['pim_enrich.repository.sequential_edit'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit');
    }
    protected function getPimEnrich_Resolver_LocaleService()
    {
        return $this->services['pim_enrich.resolver.locale'] = new \Pim\Bundle\EnrichBundle\Resolver\LocaleResolver($this->get('request_stack'), 'en');
    }
    protected function getPimEnrich_Saver_SequentialEditService()
    {
        return $this->services['pim_enrich.saver.sequential_edit'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit');
    }
    protected function getPimEnrich_Step_AddProductValue_MassEditService()
    {
        return $this->services['pim_enrich.step.add_product_value.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.mass_edit.product.add_value'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimEnrich_Step_AddToVariantGroup_MassEditService()
    {
        return $this->services['pim_enrich.step.add_to_variant_group.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_enrich.connector.reader.mass_edit.variant_group_product'), $this->get('pim_enrich.connector.processor.mass_edit.product.add_to_variant_group'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimEnrich_Step_CleanService()
    {
        return $this->services['pim_enrich.step.clean'] = new \Pim\Bundle\EnrichBundle\Connector\Step\MassEditStep('cleaner', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_enrich.connector.item.mass_edit.temporary_file_cleaner'));
    }
    protected function getPimEnrich_Step_CsvProduct_QuickExportService()
    {
        return $this->services['pim_enrich.step.csv_product.quick_export'] = new \Akeneo\Component\Batch\Step\ItemStep('quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.quick_export.product'), $this->get('pim_connector.writer.file.csv_product_quick_export'), 1000);
    }
    protected function getPimEnrich_Step_EditCommonAttributes_MassEditService()
    {
        return $this->services['pim_enrich.step.edit_common_attributes.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.mass_edit.product.edit_common_attributes'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimEnrich_Step_RemoveProductValue_MassEditService()
    {
        return $this->services['pim_enrich.step.remove_product_value.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.mass_edit.product.remove_value'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimEnrich_Step_SetAttributeRequirements_MassEditService()
    {
        return $this->services['pim_enrich.step.set_attribute_requirements.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_enrich.connector.reader.mass_edit.family'), $this->get('pim_enrich.connector.processor.mass_edit.family.set_requirements'), $this->get('pim_connector.writer.database.family'));
    }
    protected function getPimEnrich_Step_UpdateProductValue_MassEditService()
    {
        return $this->services['pim_enrich.step.update_product_value.mass_edit'] = new \Akeneo\Component\Batch\Step\ItemStep('perform', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.mass_edit.product.update_value'), $this->get('pim_connector.writer.database.product'));
    }
    protected function getPimEnrich_Step_XlsxProduct_QuickExportService()
    {
        return $this->services['pim_enrich.step.xlsx_product.quick_export'] = new \Akeneo\Component\Batch\Step\ItemStep('quick_export', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.database.product'), $this->get('pim_enrich.connector.processor.quick_export.product'), $this->get('pim_connector.writer.file.xlsx_product_quick_export'), 1000);
    }
    protected function getPimEnrich_Twig_AttributeExtensionService()
    {
        return $this->services['pim_enrich.twig.attribute_extension'] = new \Pim\Bundle\EnrichBundle\Twig\AttributeExtension(array('pim_catalog_identifier' => 'asterisk', 'pim_catalog_text' => 'font', 'pim_catalog_textarea' => 'file-text-alt', 'pim_catalog_number' => 'sort-by-order', 'pim_catalog_price_collection' => 'money', 'pim_catalog_multiselect' => 'tags', 'pim_catalog_simpleselect' => 'tag', 'pim_catalog_file' => 'file', 'pim_catalog_image' => 'camera-retro', 'pim_catalog_boolean' => 'check', 'pim_catalog_date' => 'calendar', 'pim_catalog_metric' => 'beaker', 'pim_reference_data_multiselect' => 'tags', 'pim_reference_data_simpleselect' => 'tag'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimEnrich_Twig_CategoryExtensionService()
    {
        return $this->services['pim_enrich.twig.category_extension'] = new \Pim\Bundle\EnrichBundle\Twig\CategoryExtension($this->get('pim_enrich.doctrine.counter.category_registry'), 100);
    }
    protected function getPimEnrich_Twig_LocaleExtensionService()
    {
        return $this->services['pim_enrich.twig.locale_extension'] = new \Pim\Bundle\EnrichBundle\Twig\LocaleExtension($this->get('pim_catalog.helper.locale'));
    }
    protected function getPimEnrich_Twig_ObjectClassExtensionService()
    {
        return $this->services['pim_enrich.twig.object_class_extension'] = new \Pim\Bundle\EnrichBundle\Twig\ObjectClassExtension();
    }
    protected function getPimEnrich_Twig_TranslationsExtensionService()
    {
        return $this->services['pim_enrich.twig.translations_extension'] = new \Pim\Bundle\EnrichBundle\Twig\TranslationsExtension($this->get('pim_catalog.command_launcher'), $this->get('request_stack'), ($this->targetDirs[2].'/../web'));
    }
    protected function getPimEnrich_Twig_VersionExtensionService()
    {
        return $this->services['pim_enrich.twig.version_extension'] = new \Pim\Bundle\EnrichBundle\Twig\VersionExtension();
    }
    protected function getPimEnrich_Twig_ViewElementExtensionService()
    {
        return $this->services['pim_enrich.twig.view_element_extension'] = new \Pim\Bundle\EnrichBundle\Twig\ViewElementExtension($this->get('pim_enrich.view_element.registry'), $this->get('templating'), false);
    }
    protected function getPimEnrich_Type_EntityIdentifierService()
    {
        return $this->services['pim_enrich.type.entity_identifier'] = new \Pim\Bundle\EnrichBundle\Form\Type\EntityIdentifierType($this->get('doctrine'));
    }
    protected function getPimEnrich_ViewElement_AssociationType_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.association_type.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.association_type.tab.history', 'PimEnrichBundle:Form:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_associationtype_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_AssociationType_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.association_type.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.association_type.tab.property', 'PimEnrichBundle:AssociationType:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_Attribute_BackendParametersService()
    {
        return $this->services['pim_enrich.view_element.attribute.backend_parameters'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pane.accordion.backend_parameters', 'PimEnrichBundle:Attribute:Tab/_default_parameter_form.html.twig', array('allowed_form_types' => array(0 => 'group', 1 => 'useableAsGridFilter')));
    }
    protected function getPimEnrich_ViewElement_Attribute_GeneralParametersService()
    {
        return $this->services['pim_enrich.view_element.attribute.general_parameters'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pane.accordion.general_parameters', 'PimEnrichBundle:Attribute:Tab/_default_parameter_form.html.twig', array('allowed_form_types' => array(0 => 'code', 1 => 'attributeType', 2 => 'scopable', 3 => 'reference_data_name', 4 => 'localizable', 5 => 'unique', 6 => 'availableLocales')));
    }
    protected function getPimEnrich_ViewElement_Attribute_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.attribute.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute.tab.history', 'PimEnrichBundle:Form:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.edit_form'));
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_attribute_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_Attribute_Tab_ParameterService()
    {
        return $this->services['pim_enrich.view_element.attribute.tab.parameter'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute.tab.parameter', 'PimEnrichBundle:Attribute:Tab/parameter.html.twig');
    }
    protected function getPimEnrich_ViewElement_Attribute_Tab_ValueService()
    {
        return $this->services['pim_enrich.view_element.attribute.tab.value'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute.tab.value', 'PimEnrichBundle:Attribute:Tab/value.html.twig');
    }
    protected function getPimEnrich_ViewElement_AttributeGroup_Tab_AttributeService()
    {
        $this->services['pim_enrich.view_element.attribute_group.tab.attribute'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute_group.tab.attribute', 'PimEnrichBundle:AttributeGroup:Tab/attribute.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.edit_form'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_AttributeGroup_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.attribute_group.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute_group.tab.history', 'PimEnrichBundle:Form:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.edit_form'));
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_attributegroup_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_AttributeGroup_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.attribute_group.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.attribute_group.tab.property', 'PimEnrichBundle:AttributeGroup:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_BaseService()
    {
        return $this->services['pim_enrich.view_element.base'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement();
    }
    protected function getPimEnrich_ViewElement_Category_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.category.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.category.tab.history', 'PimEnrichBundle:Form:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.edit_form'));
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_product_category_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_Category_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.category.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.category.tab.property', 'PimEnrichBundle:CategoryTree:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_Channel_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.channel.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.channel.tab.history', 'PimEnrichBundle:Form:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.edit_form'));
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_channel_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_Channel_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.channel.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.channel.tab.property', 'PimEnrichBundle:Channel:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_Family_Tab_AttributeService()
    {
        return $this->services['pim_enrich.view_element.family.tab.attribute'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.family.tab.attribute', 'PimEnrichBundle:Family:Tab/attribute.html.twig');
    }
    protected function getPimEnrich_ViewElement_Family_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.family.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.family.tab.history', 'PimEnrichBundle:Family:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_family_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_Family_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.family.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.family.tab.property', 'PimEnrichBundle:Family:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_Group_Tab_HistoryService()
    {
        $this->services['pim_enrich.view_element.group.tab.history'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.group.tab.history', 'PimEnrichBundle:Group:Tab/history.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.acl'), array('acl' => 'pim_enrich_group_history'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_Group_Tab_ProductService()
    {
        return $this->services['pim_enrich.view_element.group.tab.product'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.group.tab.product', 'PimEnrichBundle:Group:Tab/product.html.twig');
    }
    protected function getPimEnrich_ViewElement_Group_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.group.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.group.tab.property', 'PimEnrichBundle:Group:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_GroupType_Tab_PropertyService()
    {
        return $this->services['pim_enrich.view_element.group_type.tab.property'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.group_type.tab.property', 'PimEnrichBundle:GroupType:Tab/property.html.twig');
    }
    protected function getPimEnrich_ViewElement_MassEdit_WarningService()
    {
        $this->services['pim_enrich.view_element.mass_edit.warning'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_enrich.view_element.mass_edit.warning', 'PimEnrichBundle:MassEditAction:warning.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.non_empty_property'), array('property' => '[form][operation].vars[warningMessages]'));
        return $instance;
    }
    protected function getPimEnrich_ViewElement_RegistryService()
    {
        $this->services['pim_enrich.view_element.registry'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\ViewElementRegistry();
        $instance->add($this->get('pim_user.view_element.user.tab.general'), 'pim_user_user_form.form_tab', 90);
        $instance->add($this->get('pim_user.view_element.user.tab.additional'), 'pim_user_user_form.form_tab', 100);
        $instance->add($this->get('pim_user.view_element.user.tab.group_and_role'), 'pim_user_user_form.form_tab', 110);
        $instance->add($this->get('pim_user.view_element.user.tab.password'), 'pim_user_user_form.form_tab', 120);
        $instance->add($this->get('pim_user.view_element.user.tab.interfaces'), 'pim_user_user_form.form_tab', 130);
        $instance->add($this->get('pim_enrich.view_element.association_type.tab.property'), 'pim_enrich_associationtype_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.association_type.tab.history'), 'pim_enrich_associationtype_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.attribute.tab.parameter'), 'pim_enrich_attribute_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.attribute.tab.value'), 'pim_enrich_attribute_form.form_tab', 100);
        $instance->add($this->get('pim_enrich.view_element.attribute.tab.history'), 'pim_enrich_attribute_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.attribute.general_parameters'), 'pim_enrich_attribute_form.general_parameters', 90);
        $instance->add($this->get('pim_enrich.view_element.attribute.backend_parameters'), 'pim_enrich_attribute_form.backend_parameters', 90);
        $instance->add($this->get('pim_enrich.view_element.attribute_group.tab.property'), 'pim_enrich_attributegroup_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.attribute_group.tab.attribute'), 'pim_enrich_attributegroup_form.form_tab', 100);
        $instance->add($this->get('pim_enrich.view_element.attribute_group.tab.history'), 'pim_enrich_attributegroup_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.category.tab.property'), 'pim_category.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.category.tab.history'), 'pim_category.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.channel.tab.property'), 'pim_enrich_channel_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.channel.tab.history'), 'pim_enrich_channel_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.family.tab.property'), 'pim_enrich_family_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.family.tab.attribute'), 'pim_enrich_family_form.form_tab', 100);
        $instance->add($this->get('pim_enrich.view_element.family.tab.history'), 'pim_enrich_family_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.group.tab.product'), 'pim_enrich_group_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.group.tab.property'), 'pim_enrich_group_form.form_tab', 100);
        $instance->add($this->get('pim_enrich.view_element.group.tab.history'), 'pim_enrich_group_form.form_tab', 110);
        $instance->add($this->get('pim_enrich.view_element.group_type.tab.property'), 'pim_enrich_grouptype_form.form_tab', 90);
        $instance->add($this->get('pim_enrich.view_element.mass_edit.warning'), 'pim_mass_edit.warning', 90);
        return $instance;
    }
    protected function getPimEnrich_ViewElement_VisibilityChecker_AclService()
    {
        return $this->services['pim_enrich.view_element.visibility_checker.acl'] = new \Pim\Bundle\EnrichBundle\ViewElement\Checker\AclVisibilityChecker($this->get('oro_security.security_facade'));
    }
    protected function getPimEnrich_ViewElement_VisibilityChecker_EditFormService()
    {
        return $this->services['pim_enrich.view_element.visibility_checker.edit_form'] = new \Pim\Bundle\EnrichBundle\ViewElement\Checker\EditFormVisibilityChecker();
    }
    protected function getPimEnrich_ViewElement_VisibilityChecker_NonEmptyPropertyService()
    {
        return $this->services['pim_enrich.view_element.visibility_checker.non_empty_property'] = new \Pim\Bundle\EnrichBundle\ViewElement\Checker\NonEmptyPropertyVisibilityChecker();
    }
    protected function getPimEnrich_ViewElement_VisibilityChecker_VoterService()
    {
        return $this->services['pim_enrich.view_element.visibility_checker.voter'] = new \Pim\Bundle\EnrichBundle\ViewElement\Checker\VoterVisibilityChecker($this->get('oro_security.security_facade'));
    }
    protected function getPimFilter_AjaxChoiceFilterService()
    {
        return $this->services['pim_filter.ajax_choice_filter'] = new \Pim\Bundle\FilterBundle\Filter\AjaxChoiceFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_Form_Type_BooleanService()
    {
        return $this->services['pim_filter.form.type.boolean'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\BooleanFilterType($this->get('translator'));
    }
    protected function getPimFilter_Form_Type_CategoryService()
    {
        return $this->services['pim_filter.form.type.category'] = new \Pim\Bundle\FilterBundle\Form\Type\CategoryType();
    }
    protected function getPimFilter_Form_Type_DateRangeService()
    {
        return $this->services['pim_filter.form.type.date_range'] = new \Pim\Bundle\FilterBundle\Form\Type\DateRangeType();
    }
    protected function getPimFilter_Form_Type_DatetimeRangeService()
    {
        return $this->services['pim_filter.form.type.datetime_range'] = new \Pim\Bundle\FilterBundle\Form\Type\DateTimeRangeType();
    }
    protected function getPimFilter_Form_Type_Filter_AjaxChoiceService()
    {
        return $this->services['pim_filter.form.type.filter.ajax_choice'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\AjaxChoiceFilterType($this->get('translator'));
    }
    protected function getPimFilter_Form_Type_Filter_CategoryService()
    {
        return $this->services['pim_filter.form.type.filter.category'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\CategoryFilterType($this->get('translator'));
    }
    protected function getPimFilter_Form_Type_Filter_MetricService()
    {
        return $this->services['pim_filter.form.type.filter.metric'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\MetricFilterType();
    }
    protected function getPimFilter_Form_Type_Filter_PriceService()
    {
        return $this->services['pim_filter.form.type.filter.price'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\PriceFilterType($this->get('pim_catalog.repository.currency'));
    }
    protected function getPimFilter_Form_Type_Filter_ScopeService()
    {
        return $this->services['pim_filter.form.type.filter.scope'] = new \Pim\Bundle\FilterBundle\Form\Type\Filter\ScopeFilterType($this->get('translator'), $this->get('pim_user.context.user'));
    }
    protected function getPimFilter_ProductCategoryFilterService()
    {
        return $this->services['pim_filter.product_category_filter'] = new \Pim\Bundle\FilterBundle\Filter\CategoryFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_catalog.repository.category'));
    }
    protected function getPimFilter_ProductCompletenessFilterService()
    {
        return $this->services['pim_filter.product_completeness_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\CompletenessFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductDateFilterService()
    {
        return $this->services['pim_filter.product_date_filter'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\DateTimeRangeFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductEnabledFilterService()
    {
        return $this->services['pim_filter.product_enabled_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\EnabledFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductFamilyFilterService()
    {
        return $this->services['pim_filter.product_family_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\FamilyFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductGroupsFilterService()
    {
        return $this->services['pim_filter.product_groups_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\GroupsFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_user.context.user'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimFilter_ProductInGroupFilterService()
    {
        return $this->services['pim_filter.product_in_group_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\InGroupFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_datagrid.datagrid.request.parameters_extractor'), $this->get('pim_catalog.doctrine.query.filter.object_code_resolver'));
    }
    protected function getPimFilter_ProductIsAssociatedFilterService()
    {
        return $this->services['pim_filter.product_is_associated_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\IsAssociatedFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_datagrid.datagrid.request.parameters_extractor'), $this->get('pim_catalog.repository.association_type'), $this->get('pim_catalog.repository.product'));
    }
    protected function getPimFilter_ProductScopeFilterService()
    {
        return $this->services['pim_filter.product_scope_filter'] = new \Pim\Bundle\FilterBundle\Filter\Product\ScopeFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'));
    }
    protected function getPimFilter_ProductUtilityService()
    {
        return $this->services['pim_filter.product_utility'] = new \Pim\Bundle\FilterBundle\Filter\ProductFilterUtility();
    }
    protected function getPimFilter_ProductValueBooleanService()
    {
        return $this->services['pim_filter.product_value_boolean'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\BooleanFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductValueChoiceService()
    {
        return $this->services['pim_filter.product_value_choice'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\ChoiceFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_user.context.user'), 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption', $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimFilter_ProductValueDateService()
    {
        return $this->services['pim_filter.product_value_date'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\DateRangeFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductValueDatetimeService()
    {
        return $this->services['pim_filter.product_value_datetime'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\DateTimeRangeFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductValueMetricService()
    {
        return $this->services['pim_filter.product_value_metric'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\MetricFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('translator'), $this->get('akeneo_measure.manager'));
    }
    protected function getPimFilter_ProductValueNumberService()
    {
        return $this->services['pim_filter.product_value_number'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\NumberFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimFilter_ProductValuePriceService()
    {
        return $this->services['pim_filter.product_value_price'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\PriceFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimFilter_ProductValueStringService()
    {
        return $this->services['pim_filter.product_value_string'] = new \Pim\Bundle\FilterBundle\Filter\ProductValue\StringFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'));
    }
    protected function getPimImportExport_Controller_ExportExecutionService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_import_export.controller.export_execution', 'request');
        }
        return $this->services['pim_import_export.controller.export_execution'] = $this->scopedServices['request']['pim_import_export.controller.export_execution'] = new \Pim\Bundle\ImportExportBundle\Controller\ExportExecutionController($this->get('templating'), $this->get('translator'), $this->get('event_dispatcher'), $this->get('akeneo_batch.logger.batch_log_handler'), $this->get('pim_connector.event_listener.archivist'), $this->get('pim_serializer'), $this->get('akeneo_batch.manager.job_execution'), $this->get('pim_import_export.repository.job_execution'), 'export');
    }
    protected function getPimImportExport_Controller_ExportProfileService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_import_export.controller.export_profile', 'request');
        }
        return $this->services['pim_import_export.controller.export_profile'] = $this->scopedServices['request']['pim_import_export.controller.export_profile'] = new \Pim\Bundle\ImportExportBundle\Controller\ExportProfileController($this->get('templating'), $this->get('router'), $this->get('form.factory'), $this->get('akeneo_batch.job.job_registry'), $this->get('pim_import_export.form.type.job_instance'), $this->get('akeneo_batch.job_instance_factory'), $this->get('doctrine.orm.default_entity_manager'), $this->get('akeneo_batch.job_parameters_factory'), 'export');
    }
    protected function getPimImportExport_Controller_ImportExecutionService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_import_export.controller.import_execution', 'request');
        }
        return $this->services['pim_import_export.controller.import_execution'] = $this->scopedServices['request']['pim_import_export.controller.import_execution'] = new \Pim\Bundle\ImportExportBundle\Controller\ImportExecutionController($this->get('templating'), $this->get('translator'), $this->get('event_dispatcher'), $this->get('akeneo_batch.logger.batch_log_handler'), $this->get('pim_connector.event_listener.archivist'), $this->get('pim_serializer'), $this->get('akeneo_batch.manager.job_execution'), $this->get('pim_import_export.repository.job_execution'), 'import');
    }
    protected function getPimImportExport_Controller_ImportProfileService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_import_export.controller.import_profile', 'request');
        }
        return $this->services['pim_import_export.controller.import_profile'] = $this->scopedServices['request']['pim_import_export.controller.import_profile'] = new \Pim\Bundle\ImportExportBundle\Controller\ImportProfileController($this->get('templating'), $this->get('router'), $this->get('form.factory'), $this->get('akeneo_batch.job.job_registry'), $this->get('pim_import_export.form.type.job_instance'), $this->get('akeneo_batch.job_instance_factory'), $this->get('doctrine.orm.default_entity_manager'), $this->get('akeneo_batch.job_parameters_factory'), 'import');
    }
    protected function getPimImportExport_Datagrid_Provider_JobService()
    {
        return $this->services['pim_import_export.datagrid.provider.job'] = new \Pim\Bundle\ImportExportBundle\Datagrid\JobDatagridProvider($this->get('akeneo_batch.job.job_registry'), $this->get('pim_import_export.job_label.translated_label_provider'));
    }
    protected function getPimImportExport_EventListener_InjectJobTypeService()
    {
        return $this->services['pim_import_export.event_listener.inject_job_type'] = new \Pim\Bundle\DataGridBundle\EventListener\AddParametersToGridListener(array(0 => 'jobType'), $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimImportExport_Factory_JobNotificationService()
    {
        return $this->services['pim_import_export.factory.job_notification'] = new \Pim\Bundle\ImportExportBundle\Factory\NotificationFactory(array(0 => 'import', 1 => 'export'), 'Pim\\Bundle\\NotificationBundle\\Entity\\Notification');
    }
    protected function getPimImportExport_Form_JobinstanceService()
    {
        return $this->services['pim_import_export.form.jobinstance'] = $this->get('form.factory')->createNamed('pim_import_export_jobInstance_type_form', 'pim_import_export_jobInstance_type');
    }
    protected function getPimImportExport_Form_Type_JobInstanceService()
    {
        return $this->services['pim_import_export.form.type.job_instance'] = new \Pim\Bundle\ImportExportBundle\Form\Type\JobInstanceFormType($this->get('akeneo_batch.job.job_registry'), $this->get('translator'), $this->get('pim_import_export.job_label.translated_label_provider'), $this->get('akeneo_batch.job_parameters_factory'), $this->get('oro_security.security_facade'));
    }
    protected function getPimImportExport_JobLabel_TranslatedLabelProviderService()
    {
        return $this->services['pim_import_export.job_label.translated_label_provider'] = new \Pim\Bundle\ImportExportBundle\JobLabel\TranslatedLabelProvider($this->get('translator'), 'batch_jobs');
    }
    protected function getPimImportExport_Manager_JobExecutionService()
    {
        return $this->services['pim_import_export.manager.job_execution'] = new \Pim\Bundle\ImportExportBundle\Manager\JobExecutionManager($this->get('pim_import_export.repository.job_execution'), $this->get('oro_security.security_facade'));
    }
    protected function getPimImportExport_Normalizer_JobExecutionService()
    {
        return $this->services['pim_import_export.normalizer.job_execution'] = new \Pim\Bundle\ImportExportBundle\Normalizer\JobExecutionNormalizer($this->get('translator'), $this->get('pim_import_export.job_label.translated_label_provider'));
    }
    protected function getPimImportExport_Normalizer_StepExecutionService()
    {
        return $this->services['pim_import_export.normalizer.step_execution'] = new \Pim\Bundle\ImportExportBundle\Normalizer\StepExecutionNormalizer($this->get('translator'), $this->get('pim_catalog.localization.presenter.datetime'), $this->get('pim_import_export.job_label.translated_label_provider'));
    }
    protected function getPimImportExport_Repository_JobExecutionService()
    {
        return $this->services['pim_import_export.repository.job_execution'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Akeneo\\Component\\Batch\\Model\\JobExecution');
    }
    protected function getPimImportExport_Repository_JobInstanceService()
    {
        return $this->services['pim_import_export.repository.job_instance'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Akeneo\\Component\\Batch\\Model\\JobInstance');
    }
    protected function getPimImportExport_Validator_Constraints_FilterDataValidatorService()
    {
        return $this->services['pim_import_export.validator.constraints.filter_data_validator'] = new \Pim\Component\Connector\Validator\Constraints\FilterDataValidator($this->get('pim_catalog.query.product_query_builder_factory'), $this->get('translator'));
    }
    protected function getPimImportExport_Validator_Constraints_FilterStructureAttributeValidatorService()
    {
        return $this->services['pim_import_export.validator.constraints.filter_structure_attribute_validator'] = new \Pim\Component\Connector\Validator\Constraints\FilterStructureAttributeValidator($this->get('pim_catalog.repository.attribute'));
    }
    protected function getPimImportExport_Validator_Constraints_FilterStructureLocaleValidatorService()
    {
        return $this->services['pim_import_export.validator.constraints.filter_structure_locale_validator'] = new \Pim\Component\Connector\Validator\Constraints\FilterStructureLocaleValidator($this->get('pim_catalog.repository.channel'));
    }
    protected function getPimInstaller_DirectoriesRegistryService()
    {
        return $this->services['pim_installer.directories_registry'] = new \Pim\Bundle\InstallerBundle\PimDirectoriesRegistry(array(0 => ($this->targetDirs[2].'/file_storage/catalog'), 1 => '/tmp/pim/file_storage', 2 => ($this->targetDirs[2].'/archive')));
    }
    protected function getPimInstaller_FixtureLoader_JobInstancesBuilderService()
    {
        return $this->services['pim_installer.fixture_loader.job_instances_builder'] = new \Pim\Bundle\InstallerBundle\FixtureLoader\JobInstancesBuilder($this->get('file_locator'), $this->get('pim_connector.reader.file.yaml_job_instance'), $this->get('pim_installer.processor.denormalization.job_instance'), array(0 => 'PimInstallerBundle/Resources/config/fixtures_jobs.yml'));
    }
    protected function getPimInstaller_FixtureLoader_JobInstancesConfiguratorService()
    {
        return $this->services['pim_installer.fixture_loader.job_instances_configurator'] = new \Pim\Bundle\InstallerBundle\FixtureLoader\JobInstancesConfigurator($this->get('pim_installer.fixture_loader.path_provider'));
    }
    protected function getPimInstaller_FixtureLoader_JobLoaderService()
    {
        return $this->services['pim_installer.fixture_loader.job_loader'] = new \Pim\Bundle\InstallerBundle\FixtureLoader\FixtureJobLoader($this->get('pim_installer.fixture_loader.path_provider'), $this->get('pim_installer.fixture_loader.job_instances_builder'), $this->get('pim_installer.fixture_loader.job_instances_configurator'), $this);
    }
    protected function getPimInstaller_FixtureLoader_PathProviderService()
    {
        return $this->services['pim_installer.fixture_loader.path_provider'] = new \Pim\Bundle\InstallerBundle\FixtureLoader\FixturePathProvider(array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle'), 'PimInstallerBundle:icecat_demo_dev');
    }
    protected function getPimInstaller_Job_FixturesAssociationTypeCsvService()
    {
        return $this->services['pim_installer.job.fixtures_association_type_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_association_type_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_association_type.import')));
    }
    protected function getPimInstaller_Job_FixturesAttributeCsvService()
    {
        return $this->services['pim_installer.job.fixtures_attribute_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_attribute_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_attribute.import')));
    }
    protected function getPimInstaller_Job_FixturesAttributeGroupCsvService()
    {
        return $this->services['pim_installer.job.fixtures_attribute_group_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_attribute_group_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_attribute_group_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesAttributeOptionsCsvService()
    {
        return $this->services['pim_installer.job.fixtures_attribute_options_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_attribute_options_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_attribute_option.import')));
    }
    protected function getPimInstaller_Job_FixturesCategoryCsvService()
    {
        return $this->services['pim_installer.job.fixtures_category_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_category_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_category.import')));
    }
    protected function getPimInstaller_Job_FixturesChannelCsvService()
    {
        return $this->services['pim_installer.job.fixtures_channel_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_channel_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_channel_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesCurrencyCsvService()
    {
        return $this->services['pim_installer.job.fixtures_currency_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_currency_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_currency_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesFamilyCsvService()
    {
        return $this->services['pim_installer.job.fixtures_family_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_family_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_family.import')));
    }
    protected function getPimInstaller_Job_FixturesGroupCsvService()
    {
        return $this->services['pim_installer.job.fixtures_group_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_group_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_group.import')));
    }
    protected function getPimInstaller_Job_FixturesGroupTypeCsvService()
    {
        return $this->services['pim_installer.job.fixtures_group_type_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_group_type_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_group_type_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesJobYmlService()
    {
        return $this->services['pim_installer.job.fixtures_job_yml'] = new \Akeneo\Component\Batch\Job\Job('fixtures_job_yml', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_job_yml.import')));
    }
    protected function getPimInstaller_Job_FixturesLocaleCsvService()
    {
        return $this->services['pim_installer.job.fixtures_locale_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_locale_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_locale_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesProductCsvService()
    {
        return $this->services['pim_installer.job.fixtures_product_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_product_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_product.import'), 2 => $this->get('pim_connector.step.csv_product.import_associations')));
    }
    protected function getPimInstaller_Job_FixturesUserCsvService()
    {
        return $this->services['pim_installer.job.fixtures_user_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_user_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_user_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesUserGroupCsvService()
    {
        return $this->services['pim_installer.job.fixtures_user_group_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_user_group_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_user_group_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesUserRoleCsvService()
    {
        return $this->services['pim_installer.job.fixtures_user_role_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_user_role_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_installer.step.fixtures_user_role_csv.import')));
    }
    protected function getPimInstaller_Job_FixturesVariantGroupCsvService()
    {
        return $this->services['pim_installer.job.fixtures_variant_group_csv'] = new \Akeneo\Component\Batch\Job\Job('fixtures_variant_group_csv', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), array(0 => $this->get('pim_connector.step.charset_validator'), 1 => $this->get('pim_connector.step.csv_variant_group.import')));
    }
    protected function getPimInstaller_JobParameters_Constraints_ProductCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.constraints.product_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'), array(0 => 'fixtures_product_csv'));
    }
    protected function getPimInstaller_JobParameters_Constraints_SimpleCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.constraints.simple_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleCsvImport(array(0 => 'fixtures_category_csv', 1 => 'fixtures_attribute_group_csv', 2 => 'fixtures_channel_csv', 3 => 'fixtures_locale_csv', 4 => 'fixtures_currency_csv', 5 => 'fixtures_group_type_csv', 6 => 'fixtures_association_type_csv', 7 => 'fixtures_attribute_csv', 8 => 'fixtures_attribute_options_csv', 9 => 'fixtures_family_csv', 10 => 'fixtures_user_csv', 11 => 'fixtures_user_role_csv', 12 => 'fixtures_user_group_csv', 13 => 'fixtures_group_csv'));
    }
    protected function getPimInstaller_JobParameters_Constraints_SimpleYamlImportService()
    {
        return $this->services['pim_installer.job_parameters.constraints.simple_yaml_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\SimpleYamlImport(array(0 => 'fixtures_job_yml'));
    }
    protected function getPimInstaller_JobParameters_Constraints_VariantGroupCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.constraints.variant_group_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\ConstraintCollectionProvider\VariantGroupCsvImport($this->get('pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import'), array(0 => 'fixtures_variant_group_csv'));
    }
    protected function getPimInstaller_JobParameters_Defaults_ProductCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.defaults.product_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\ProductCsvImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_import'), array(0 => 'fixtures_product_csv'));
    }
    protected function getPimInstaller_JobParameters_Defaults_SimpleCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.defaults.simple_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleCsvImport(array(0 => 'fixtures_category_csv', 1 => 'fixtures_attribute_group_csv', 2 => 'fixtures_channel_csv', 3 => 'fixtures_locale_csv', 4 => 'fixtures_currency_csv', 5 => 'fixtures_group_type_csv', 6 => 'fixtures_association_type_csv', 7 => 'fixtures_attribute_csv', 8 => 'fixtures_attribute_options_csv', 9 => 'fixtures_family_csv', 10 => 'fixtures_user_csv', 11 => 'fixtures_user_role_csv', 12 => 'fixtures_user_group_csv', 13 => 'fixtures_group_csv'));
    }
    protected function getPimInstaller_JobParameters_Defaults_SimpleYamlImportService()
    {
        return $this->services['pim_installer.job_parameters.defaults.simple_yaml_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\SimpleYamlImport(array(0 => 'fixtures_job_yml'));
    }
    protected function getPimInstaller_JobParameters_Defaults_VariantGroupCsvImportService()
    {
        return $this->services['pim_installer.job_parameters.defaults.variant_group_csv_import'] = new \Pim\Component\Connector\Job\JobParameters\DefaultValuesProvider\VariantGroupCsvImport($this->get('pim_connector.job.job_parameters.default_values_provider.simple_csv_import'), array(0 => 'fixtures_variant_group_csv'));
    }
    protected function getPimInstaller_Processor_Denormalization_JobInstanceService()
    {
        return $this->services['pim_installer.processor.denormalization.job_instance'] = new \Pim\Component\Connector\Processor\Denormalization\JobInstanceProcessor($this->get('pim_import_export.repository.job_instance'), $this->get('pim_connector.factory.job_instance'), $this->get('pim_installer.updater.job_instance'), $this->get('validator'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('akeneo_batch.job.job_parameters_validator'), $this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimInstaller_Step_FixturesAttributeGroupCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_attribute_group_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_attribute_group'), $this->get('pim_connector.processor.denormalization.attribute_group'), $this->get('pim_connector.writer.database.attribute_group'));
    }
    protected function getPimInstaller_Step_FixturesChannelCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_channel_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_channel'), $this->get('pim_connector.processor.denormalization.channel'), $this->get('pim_connector.writer.database.channel'));
    }
    protected function getPimInstaller_Step_FixturesCurrencyCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_currency_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_currency'), $this->get('pim_connector.processor.denormalization.currency'), $this->get('pim_connector.writer.database.currency'));
    }
    protected function getPimInstaller_Step_FixturesGroupTypeCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_group_type_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_group_type'), $this->get('pim_connector.processor.denormalization.group_type'), $this->get('pim_connector.writer.database.group_type'));
    }
    protected function getPimInstaller_Step_FixturesJobYml_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_job_yml.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.yaml_job_instance'), $this->get('pim_connector.processor.denormalization.job_instance'), $this->get('pim_connector.writer.database.job_instance'));
    }
    protected function getPimInstaller_Step_FixturesLocaleCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_locale_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_locale'), $this->get('pim_connector.processor.denormalization.locale'), $this->get('pim_connector.writer.database.locale'));
    }
    protected function getPimInstaller_Step_FixturesUserCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_user_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_user'), $this->get('pim_connector.processor.denormalization.user'), $this->get('pim_connector.writer.database.user'));
    }
    protected function getPimInstaller_Step_FixturesUserGroupCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_user_group_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_user_group'), $this->get('pim_connector.processor.denormalization.user_group'), $this->get('pim_connector.writer.database.user_group'));
    }
    protected function getPimInstaller_Step_FixturesUserRoleCsv_ImportService()
    {
        return $this->services['pim_installer.step.fixtures_user_role_csv.import'] = new \Akeneo\Component\Batch\Step\ItemStep('import', $this->get('event_dispatcher'), $this->get('akeneo_batch.job_repository'), $this->get('pim_connector.reader.file.csv_user_role'), $this->get('pim_connector.processor.denormalization.user_role'), $this->get('pim_connector.writer.database.user_role'));
    }
    protected function getPimInstaller_Updater_JobInstanceService()
    {
        return $this->services['pim_installer.updater.job_instance'] = new \Akeneo\Component\Batch\Updater\JobInstanceUpdater($this->get('akeneo_batch.job_parameters_factory'), $this->get('akeneo_batch.job.job_registry'));
    }
    protected function getPimInstaller_YamlPersisterService()
    {
        return $this->services['pim_installer.yaml_persister'] = new \Pim\Bundle\InstallerBundle\Persister\YamlPersister(($this->targetDirs[2].'/config'), 'dev');
    }
    protected function getPimInternalApiSerializerService()
    {
        return $this->services['pim_internal_api_serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => $this->get('pim_user.normalizer.user'), 1 => $this->get('pim_enrich.normalizer.attribute_option_value_collection'), 2 => $this->get('pim_enrich.normalizer.attribute_option'), 3 => $this->get('pim_enrich.normalizer.attribute_option_value'), 4 => $this->get('pim_enrich.normalizer.product'), 5 => $this->get('pim_enrich.normalizer.completeness'), 6 => $this->get('pim_enrich.normalizer.version'), 7 => $this->get('pim_enrich.normalizer.collection'), 8 => $this->get('pim_enrich.normalizer.family'), 9 => $this->get('pim_enrich.normalizer.association_type'), 10 => $this->get('pim_enrich.normalizer.locale'), 11 => $this->get('pim_enrich.normalizer.channel'), 12 => $this->get('pim_enrich.normalizer.attribute'), 13 => $this->get('pim_enrich.normalizer.sequential_edit'), 14 => $this->get('pim_enrich.normalizer.group'), 15 => $this->get('pim_enrich.normalizer.file'), 16 => $this->get('pim_enrich.normalizer.product_violation'), 17 => $this->get('pim_enrich.normalizer.datagrid_view'), 18 => $this->get('pim_enrich.normalizer.category'), 19 => $this->get('pim_enrich.normalizer.structured.attribute_option'), 20 => $this->get('pim_reference_data.normalizer.configuration')), array(0 => new \Symfony\Component\Serializer\Encoder\JsonEncoder()));
    }
    protected function getPimLocale_LocaleListenerService()
    {
        return $this->services['pim_locale.locale_listener'] = new \Pim\Bundle\UserBundle\EventListener\LocaleListener();
    }
    protected function getPimLocale_LocaleSubscriberService()
    {
        return $this->services['pim_locale.locale_subscriber'] = new \Pim\Bundle\UserBundle\EventSubscriber\LocaleSubscriber($this->get('request_stack'), $this->get('translator'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getPimLocalization_Controller_FormatService()
    {
        return $this->services['pim_localization.controller.format'] = new \Pim\Bundle\LocalizationBundle\Controller\FormatController($this->get('pim_catalog.localization.factory.date'), $this->get('pim_catalog.localization.factory.datetime'), $this->get('pim_enrich.resolver.locale'), array('decimal_separators' => array('.' => 'dot (.)', ',' => 'comma (,)', '٫' => 'arabic decimal separator (٫)'), 'date_formats' => array('yyyy-MM-dd' => 'yyyy-mm-dd', 'yyyy/MM/dd' => 'yyyy/mm/dd', 'MM/dd/yyyy' => 'mm/dd/yyyy', 'dd/MM/yyyy' => 'dd/mm/yyyy', 'dd.MM.yyyy' => 'dd.mm.yyyy')));
    }
    protected function getPimLocalization_Controller_LocaleService()
    {
        return $this->services['pim_localization.controller.locale'] = new \Pim\Bundle\LocalizationBundle\Controller\LocaleController($this->get('pim_localization.provider.ui_locale'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimLocalization_Form_Type_LocaleService()
    {
        return $this->services['pim_localization.form.type.locale'] = new \Pim\Bundle\LocalizationBundle\Form\Type\LocaleType($this->get('pim_localization.provider.ui_locale'));
    }
    protected function getPimLocalization_Provider_UiLocaleService()
    {
        return $this->services['pim_localization.provider.ui_locale'] = new \Pim\Bundle\LocalizationBundle\Provider\UiLocaleProvider($this->get('translator'), 0.80000000000000004);
    }
    protected function getPimLocalization_Twig_AttributeExtensionService()
    {
        return $this->services['pim_localization.twig.attribute_extension'] = new \Pim\Bundle\LocalizationBundle\Twig\AttributeExtension($this->get('pim_catalog.localization.presenter.date'), $this->get('pim_catalog.localization.presenter.datetime'), $this->get('pim_enrich.resolver.locale'));
    }
    protected function getPimLocalization_Twig_AttributeOptionExtensionService()
    {
        return $this->services['pim_localization.twig.attribute_option_extension'] = new \Pim\Bundle\LocalizationBundle\Twig\AttributeOptionExtension($this->get('pim_catalog.localization.presenter.registry'), $this->get('pim_enrich.resolver.locale'));
    }
    protected function getPimLocalization_Twig_LocaleExtensionService()
    {
        return $this->services['pim_localization.twig.locale_extension'] = new \Pim\Bundle\LocalizationBundle\Twig\LocaleExtension();
    }
    protected function getPimLocalization_Updater_TranslatableService()
    {
        return $this->services['pim_localization.updater.translatable'] = new \Akeneo\Component\Localization\TranslatableUpdater();
    }
    protected function getPimNavigation_Repository_NavigationHistoryService()
    {
        return $this->services['pim_navigation.repository.navigation_history'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');
    }
    protected function getPimNavigation_Saver_NavigationHistoryItemService()
    {
        return $this->services['pim_navigation.saver.navigation_history_item'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem');
    }
    protected function getPimNotification_Controller_NotificationService()
    {
        return $this->services['pim_notification.controller.notification'] = new \Pim\Bundle\NotificationBundle\Controller\NotificationController($this->get('templating'), $this->get('pim_user.context.user'), $this->get('pim_notification.repository.user_notification'), $this->get('pim_notification.remover.user_notification'));
    }
    protected function getPimNotification_Email_EmailNotifierService()
    {
        return $this->services['pim_notification.email.email_notifier'] = new \Pim\Bundle\NotificationBundle\Email\MailNotifier($this->get('swiftmailer.mailer.default'), 'batch@example.com');
    }
    protected function getPimNotification_EventSubscriber_JobExecutionNotifierService()
    {
        return $this->services['pim_notification.event_subscriber.job_execution_notifier'] = new \Pim\Bundle\NotificationBundle\EventSubscriber\JobExecutionNotifier($this->get('pim_notification.registry.factory.notification'), $this->get('pim_notification.notifier'));
    }
    protected function getPimNotification_Factory_NotificationService()
    {
        return $this->services['pim_notification.factory.notification'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\NotificationBundle\\Entity\\Notification');
    }
    protected function getPimNotification_Factory_UserNotificationService()
    {
        return $this->services['pim_notification.factory.user_notification'] = new \Pim\Bundle\NotificationBundle\Factory\UserNotificationFactory('Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification');
    }
    protected function getPimNotification_Manager_NotificationService()
    {
        return $this->services['pim_notification.manager.notification'] = new \Pim\Bundle\NotificationBundle\Manager\NotificationManager($this->get('pim_notification.repository.user_notification'), $this->get('pim_notification.factory.user_notification'), $this->get('oro_user.manager'), $this->get('pim_notification.saver.notification'), $this->get('pim_notification.saver.user_notification'), $this->get('pim_notification.remover.user_notification'), $this->get('pim_notification.notifier'));
    }
    protected function getPimNotification_NotifierService()
    {
        return $this->services['pim_notification.notifier'] = new \Pim\Bundle\NotificationBundle\Notifier($this->get('pim_notification.factory.user_notification'), $this->get('oro_user.manager'), $this->get('pim_notification.saver.notification'), $this->get('pim_notification.saver.user_notification'));
    }
    protected function getPimNotification_Registry_Factory_NotificationService()
    {
        $this->services['pim_notification.registry.factory.notification'] = $instance = new \Pim\Bundle\NotificationBundle\Factory\NotificationFactoryRegistry();
        $instance->register($this->get('pim_import_export.factory.job_notification'));
        $instance->register($this->get('pim_enrich.factory.mass_edit_notification'));
        return $instance;
    }
    protected function getPimNotification_Remover_NotificationService()
    {
        return $this->services['pim_notification.remover.notification'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\NotificationBundle\\Entity\\Notification');
    }
    protected function getPimNotification_Remover_UserNotificationService()
    {
        return $this->services['pim_notification.remover.user_notification'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification');
    }
    protected function getPimNotification_Repository_UserNotificationService()
    {
        return $this->services['pim_notification.repository.user_notification'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification');
    }
    protected function getPimNotification_Saver_NotificationService()
    {
        return $this->services['pim_notification.saver.notification'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\NotificationBundle\\Entity\\Notification');
    }
    protected function getPimNotification_Saver_UserNotificationService()
    {
        return $this->services['pim_notification.saver.user_notification'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification');
    }
    protected function getPimNotification_Twig_NotificationExtensionService()
    {
        return $this->services['pim_notification.twig.notification_extension'] = new \Pim\Bundle\NotificationBundle\Twig\NotificationExtension($this->get('pim_notification.repository.user_notification'), $this->get('pim_user.context.user'));
    }
    protected function getPimPdfGenerator_Builder_DompdfService()
    {
        return $this->services['pim_pdf_generator.builder.dompdf'] = new \Pim\Bundle\PdfGeneratorBundle\Builder\DompdfBuilder($this->targetDirs[2]);
    }
    protected function getPimPdfGenerator_Controller_ProductService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_pdf_generator.controller.product', 'request');
        }
        return $this->services['pim_pdf_generator.controller.product'] = $this->scopedServices['request']['pim_pdf_generator.controller.product'] = new \Pim\Bundle\PdfGeneratorBundle\Controller\ProductController($this->get('pim_catalog.repository.product'), $this->get('pim_pdf_generator.renderer.registry'));
    }
    protected function getPimPdfGenerator_Renderer_ProductPdfService()
    {
        return $this->services['pim_pdf_generator.renderer.product_pdf'] = new \Pim\Bundle\PdfGeneratorBundle\Renderer\ProductPdfRenderer($this->get('templating'), $this->get('pim_pdf_generator.builder.dompdf'), $this->get('liip_imagine.data.manager'), $this->get('liip_imagine.cache.manager'), $this->get('liip_imagine.filter.manager'), 'PimPdfGeneratorBundle:Product:renderPdf.html.twig', ($this->targetDirs[2].'/uploads/product'), NULL);
    }
    protected function getPimPdfGenerator_Renderer_RegistryService()
    {
        $this->services['pim_pdf_generator.renderer.registry'] = $instance = new \Pim\Bundle\PdfGeneratorBundle\Renderer\RendererRegistry();
        $instance->addRenderer($this->get('pim_pdf_generator.renderer.product_pdf'));
        return $instance;
    }
    protected function getPimReferenceData_Attributetype_MultiselectService()
    {
        return $this->services['pim_reference_data.attributetype.multiselect'] = new \Pim\Bundle\ReferenceDataBundle\AttributeType\ReferenceDataMultiSelectType('reference_data_options', 'pim_ajax_reference_data', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'), $this->get('pim_reference_data.registry'));
    }
    protected function getPimReferenceData_Attributetype_SimpleselectService()
    {
        return $this->services['pim_reference_data.attributetype.simpleselect'] = new \Pim\Bundle\ReferenceDataBundle\AttributeType\ReferenceDataSimpleSelectType('reference_data_option', 'pim_ajax_reference_data', $this->get('pim_catalog.validator.constraint_guesser.chained_attribute'), $this->get('pim_reference_data.registry'));
    }
    protected function getPimReferenceData_Controller_ConfigurationRestService()
    {
        return $this->services['pim_reference_data.controller.configuration_rest'] = new \Pim\Bundle\ReferenceDataBundle\Controller\ConfigurationRestController($this->get('pim_reference_data.registry'), $this->get('pim_internal_api_serializer'));
    }
    protected function getPimReferenceData_Denormalizer_ReferenceDataService()
    {
        return $this->services['pim_reference_data.denormalizer.reference_data'] = new \Pim\Component\ReferenceData\Denormalizer\Standard\ProductValue\ReferenceDataDenormalizer(array(0 => 'pim_reference_data_simpleselect'), $this->get('pim_reference_data.repository_resolver', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getPimReferenceData_Denormalizer_ReferenceDataCollectionService()
    {
        return $this->services['pim_reference_data.denormalizer.reference_data_collection'] = new \Pim\Component\ReferenceData\Denormalizer\Standard\ProductValue\ReferenceDataCollectionDenormalizer(array(0 => 'pim_reference_data_multiselect'), $this->get('pim_reference_data.denormalizer.reference_data'));
    }
    protected function getPimReferenceData_Doctrine_Query_Filter_ReferenceDataService()
    {
        return $this->services['pim_reference_data.doctrine.query.filter.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\Doctrine\ORM\Filter\ReferenceDataFilter($this->get('pim_catalog.validator.helper.attribute'), $this->get('pim_reference_data.registry'), $this->get('pim_reference_data.id_resolver'), array(0 => 'IN', 1 => 'EMPTY'));
    }
    protected function getPimReferenceData_Doctrine_Query_Sorter_ReferenceDataService()
    {
        return $this->services['pim_reference_data.doctrine.query.sorter.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\Doctrine\ORM\Sorter\ReferenceDataSorter($this->get('pim_reference_data.registry'));
    }
    protected function getPimReferenceData_Enrich_Provider_EmptyValue_ReferenceDataService()
    {
        return $this->services['pim_reference_data.enrich.provider.empty_value.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\Enrich\Provider\EmptyValue\ReferenceDataEmptyValueProvider();
    }
    protected function getPimReferenceData_Enrich_Provider_Field_ReferenceDataService()
    {
        return $this->services['pim_reference_data.enrich.provider.field.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\Enrich\Provider\Field\ReferenceDataFieldProvider();
    }
    protected function getPimReferenceData_Enrich_Provider_Filter_ReferenceDataService()
    {
        return $this->services['pim_reference_data.enrich.provider.filter.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\Enrich\Provider\Filter\ReferenceDataFilterProvider();
    }
    protected function getPimReferenceData_Extension_Formatter_Property_ProductValue_ReferenceDataPropertyService()
    {
        return $this->services['pim_reference_data.extension.formatter.property.product_value.reference_data_property'] = new \Pim\Bundle\ReferenceDataBundle\DataGrid\Extension\Formatter\Property\ReferenceDataProperty($this->get('translator'), $this->get('pim_reference_data.registry'));
    }
    protected function getPimReferenceData_Extension_Selector_Orm_ReferenceDataService()
    {
        return $this->services['pim_reference_data.extension.selector.orm.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\DataGrid\Extension\Selector\ORM\ReferenceDataSelector($this->get('pim_datagrid.extension.selector.orm.product_value.base_selector'));
    }
    protected function getPimReferenceData_Extension_Sorter_ReferenceDataSorterService()
    {
        return $this->services['pim_reference_data.extension.sorter.reference_data_sorter'] = new \Pim\Bundle\ReferenceDataBundle\DataGrid\Extension\Sorter\ReferenceDataSorter($this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimReferenceData_Filter_ReferenceDataService()
    {
        return $this->services['pim_reference_data.filter.reference_data'] = new \Pim\Bundle\ReferenceDataBundle\DataGrid\Filter\ReferenceDataFilter($this->get('form.factory'), $this->get('pim_filter.product_utility'), $this->get('pim_user.context.user'), $this->get('pim_catalog.repository.attribute'), $this->get('pim_reference_data.registry'));
    }
    protected function getPimReferenceData_IdResolverService()
    {
        return $this->services['pim_reference_data.id_resolver'] = new \Pim\Bundle\ReferenceDataBundle\Doctrine\ReferenceDataIdResolver($this->get('pim_reference_data.repository_resolver'));
    }
    protected function getPimReferenceData_LabelRendererService()
    {
        return $this->services['pim_reference_data.label_renderer'] = new \Pim\Component\ReferenceData\LabelRenderer();
    }
    protected function getPimReferenceData_MethodGuesserService()
    {
        return $this->services['pim_reference_data.method_guesser'] = new \Pim\Component\ReferenceData\MethodNameGuesser();
    }
    protected function getPimReferenceData_Normalizer_ConfigurationService()
    {
        return $this->services['pim_reference_data.normalizer.configuration'] = new \Pim\Bundle\ReferenceDataBundle\Normalizer\ConfigurationNormalizer();
    }
    protected function getPimReferenceData_Normalizer_Flat_ReferenceDataService()
    {
        return $this->services['pim_reference_data.normalizer.flat.reference_data'] = new \Pim\Component\ReferenceData\Normalizer\Flat\ReferenceDataNormalizer();
    }
    protected function getPimReferenceData_RegistryService()
    {
        $this->services['pim_reference_data.registry'] = $instance = new \Pim\Component\ReferenceData\ConfigurationRegistry();
        $instance->registerRaw(array('class' => 'Acme\\Bundle\\AppBundle\\Entity\\Fabric', 'type' => 'multi'), 'fabrics');
        $instance->registerRaw(array('class' => 'Acme\\Bundle\\AppBundle\\Entity\\Color', 'type' => 'simple'), 'color');
        return $instance;
    }
    protected function getPimReferenceData_RepositoryResolverService()
    {
        return $this->services['pim_reference_data.repository_resolver'] = new \Pim\Bundle\ReferenceDataBundle\Doctrine\ReferenceDataRepositoryResolver($this->get('pim_reference_data.registry'), $this->get('doctrine'));
    }
    protected function getPimSerializerService()
    {
        return $this->services['pim_serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => $this->get('pim_catalog.denormalizer.standard.product_values'), 1 => $this->get('pim_catalog.denormalizer.standard.product_value'), 2 => $this->get('pim_catalog.denormalizer.standard.base_value'), 3 => $this->get('pim_catalog.denormalizer.standard.attribute_option'), 4 => $this->get('pim_catalog.denormalizer.standard.attribute_options'), 5 => $this->get('pim_catalog.denormalizer.standard.prices'), 6 => $this->get('pim_catalog.denormalizer.standard.metric'), 7 => $this->get('pim_catalog.denormalizer.standard.number'), 8 => $this->get('pim_catalog.denormalizer.standard.datetime'), 9 => $this->get('pim_catalog.denormalizer.standard.file'), 10 => $this->get('pim_catalog.denormalizer.standard.boolean'), 11 => $this->get('pim_catalog.normalizer.standard.product'), 12 => $this->get('pim_catalog.normalizer.standard.product.product_values'), 13 => $this->get('pim_catalog.normalizer.standard.product.product_value'), 14 => $this->get('pim_catalog.normalizer.standard.product.price'), 15 => $this->get('pim_catalog.normalizer.standard.product.metric'), 16 => $this->get('pim_catalog.normalizer.standard.datetime'), 17 => $this->get('pim_catalog.normalizer.standard.file'), 18 => $this->get('pim_catalog.normalizer.standard.association_type'), 19 => $this->get('pim_catalog.normalizer.standard.attribute'), 20 => $this->get('pim_catalog.normalizer.standard.attribute_group'), 21 => $this->get('pim_catalog.normalizer.standard.attribute_option'), 22 => $this->get('pim_catalog.normalizer.standard.category'), 23 => $this->get('pim_catalog.normalizer.standard.channel'), 24 => $this->get('pim_catalog.normalizer.standard.currency'), 25 => $this->get('pim_catalog.normalizer.standard.family'), 26 => $this->get('pim_catalog.normalizer.standard.proxy_group'), 27 => $this->get('pim_catalog.normalizer.standard.group_type'), 28 => $this->get('pim_catalog.normalizer.standard.locale'), 29 => $this->get('pim_catalog.normalizer.standard.job_instance'), 30 => $this->get('pim_import_export.normalizer.job_execution'), 31 => $this->get('pim_import_export.normalizer.step_execution'), 32 => $this->get('pim_comment.normalizer.standard.comment'), 33 => $this->get('pim_reference_data.denormalizer.reference_data'), 34 => $this->get('pim_reference_data.denormalizer.reference_data_collection'), 35 => $this->get('pim_catalog.normalizer.standard.translation'), 36 => $this->get('pim_catalog.normalizer.standard.product.properties'), 37 => $this->get('pim_catalog.normalizer.standard.product.associations')), array(0 => new \Symfony\Component\Serializer\Encoder\XmlEncoder(), 1 => new \Symfony\Component\Serializer\Encoder\JsonEncoder()));
    }
    protected function getPimUi_Controller_AjaxOptionService()
    {
        return $this->services['pim_ui.controller.ajax_option'] = new \Pim\Bundle\UIBundle\Controller\AjaxOptionController($this->get('doctrine'), $this->get('pim_reference_data.registry'));
    }
    protected function getPimUi_Form_Extension_HelpService()
    {
        return $this->services['pim_ui.form.extension.help'] = new \Pim\Bundle\UIBundle\Form\Extension\FormTypeHelpExtension();
    }
    protected function getPimUi_Form_Extension_Select2Service()
    {
        return $this->services['pim_ui.form.extension.select2'] = new \Pim\Bundle\UIBundle\Form\Extension\FormTypeSelect2Extension();
    }
    protected function getPimUi_Form_Transformer_AjaxCreatableEntity_FactoryService()
    {
        return $this->services['pim_ui.form.transformer.ajax_creatable_entity.factory'] = new \Pim\Bundle\UIBundle\Form\Transformer\AjaxCreatableEntityTransformerFactory($this->get('doctrine'));
    }
    protected function getPimUi_Form_Transformer_AjaxEntity_FactoryService()
    {
        return $this->services['pim_ui.form.transformer.ajax_entity.factory'] = new \Pim\Bundle\UIBundle\Form\Transformer\AjaxEntityTransformerFactory($this->get('doctrine'), 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxEntityTransformer');
    }
    protected function getPimUi_Form_Transformer_AjaxReferenceData_FactoryService()
    {
        return $this->services['pim_ui.form.transformer.ajax_reference_data.factory'] = new \Pim\Bundle\UIBundle\Form\Transformer\AjaxReferenceDataTransformerFactory($this->get('doctrine'), $this->get('pim_reference_data.label_renderer'), 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxReferenceDataTransformer');
    }
    protected function getPimUi_Form_Type_AjaxEntityService()
    {
        return $this->services['pim_ui.form.type.ajax_entity'] = new \Pim\Bundle\UIBundle\Form\Type\AjaxEntityType($this->get('router'), $this->get('pim_ui.form.transformer.ajax_entity.factory'), $this->get('pim_user.context.user'));
    }
    protected function getPimUi_Form_Type_AjaxReferenceDataService()
    {
        return $this->services['pim_ui.form.type.ajax_reference_data'] = new \Pim\Bundle\UIBundle\Form\Type\AjaxReferenceDataType($this->get('router'), $this->get('pim_ui.form.transformer.ajax_reference_data.factory'), $this->get('pim_user.context.user'));
    }
    protected function getPimUi_Form_Type_DateService()
    {
        return $this->services['pim_ui.form.type.date'] = new \Pim\Bundle\UIBundle\Form\Type\DateType($this->get('pim_enrich.resolver.locale'), $this->get('pim_catalog.localization.factory.date'));
    }
    protected function getPimUi_Form_Type_NumberService()
    {
        return $this->services['pim_ui.form.type.number'] = new \Pim\Bundle\UIBundle\Form\Type\NumberType($this->get('pim_catalog.localization.localizer.number'), $this->get('pim_enrich.resolver.locale'), $this->get('pim_catalog.localization.validator.constraint.number_format'), $this->get('pim_catalog.localization.factory.number'));
    }
    protected function getPimUi_Form_Type_SwitchService()
    {
        return $this->services['pim_ui.form.type.switch'] = new \Pim\Bundle\UIBundle\Form\Type\SwitchType();
    }
    protected function getPimUi_Twig_CeilExtensionService()
    {
        return $this->services['pim_ui.twig.ceil_extension'] = new \Pim\Bundle\UIBundle\Twig\CeilExtension();
    }
    protected function getPimUi_Twig_DateExtensionService()
    {
        return $this->services['pim_ui.twig.date_extension'] = new \Pim\Bundle\UIBundle\Twig\DateExtension($this->get('translator'));
    }
    protected function getPimUi_Twig_Md5ExtensionService()
    {
        return $this->services['pim_ui.twig.md5_extension'] = new \Pim\Bundle\UIBundle\Twig\Md5Extension($this->get('jms_serializer'));
    }
    protected function getPimUi_Twig_UiExtensionService()
    {
        return $this->services['pim_ui.twig.ui_extension'] = new \Pim\Bundle\UIBundle\Twig\UiExtension(array('head_style' => array('items' => array(0 => array('order' => 100, 'template' => 'OroAsseticBundle:Assets:oro_css.html.twig', 'name' => 'assets_css')), 'label' => 'Head styles'), 'scripts_before' => array('label' => 'Scripts Before', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:Js:dot.menu.js.twig', 'name' => 'dot_menu_js'), 1 => array('order' => 200, 'template' => 'OroNavigationBundle:Js:pinbar.js.twig', 'name' => 'pinbar_js'))), 'scripts_after' => array('label' => 'Scripts After', 'items' => array()), 'hash_nav' => array('label' => 'Hash Navigation', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:HashNav:script.js.twig', 'name' => 'hashNavigation'))), 'navbar' => array('label' => 'Navigation Bar', 'items' => NULL), 'application_menu' => array('label' => 'Application Menu', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:ApplicationMenu:applicationMenu.html.twig', 'name' => 'application_menu'))), 'before_navigation' => array('label' => 'Top Navigation Before', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:ApplicationMenu:dotsMenu.html.twig', 'name' => 'dots_menu'))), 'after_navigation' => array('label' => 'Top Navigation After'), 'pin_button' => array('label' => 'Pinbar buttons', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:ApplicationMenu:pinButton.html.twig', 'name' => 'pin_button'))), 'breadcrumb' => array('label' => 'Breadcrumbs', 'items' => array(0 => array('order' => 100, 'template' => 'OroNavigationBundle:ApplicationMenu:breabcrumbs.html.twig', 'name' => 'breadcrumbs'))), 'requirejs_config_extend' => array('items' => array(0 => array('order' => 10, 'template' => 'PimUIBundle::requirejs.config.js.twig', 'name' => 'ui_requirejs_config'), 1 => array('order' => 100, 'template' => 'OroTranslationBundle::requirejs.config.js.twig', 'name' => 'translation_requirejs_config'), 2 => array('order' => 100, 'template' => 'OroNavigationBundle:Js:requirejs.config.js.twig', 'name' => 'routing_requirejs_config')), 'lable' => 'RequireJS Configuration Run Time Extend'), 'user_menu' => array('items' => array(0 => array('order' => 50, 'template' => 'PimNotificationBundle:Default:notifications.html.twig', 'name' => 'notifications'), 1 => array('order' => 100, 'template' => 'PimUserBundle:Menu:menuProfile.html.twig', 'name' => 'menu_user'), 2 => array('order' => 200, 'template' => 'PimUIBundle:Default:help.html.twig', 'name' => 'help')), 'label' => 'Profile menu'), 'header_logo' => array('label' => 'Header Logo', 'items' => array(0 => array('order' => 100, 'template' => 'PimUIBundle:Default:logo.html.twig', 'name' => 'logo'))), 'head_script' => array('label' => 'Head scripts')), 'block-wrap');
    }
    protected function getPimUser_Context_UserService()
    {
        return $this->services['pim_user.context.user'] = new \Pim\Bundle\UserBundle\Context\UserContext($this->get('security.token_storage'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.channel'), $this->get('pim_catalog.repository.category'), $this->get('request_stack'), $this->get('pim_catalog.builder.choices'), 'en');
    }
    protected function getPimUser_Controller_SecurityRestService()
    {
        return $this->services['pim_user.controller.security_rest'] = new \Pim\Bundle\UserBundle\Controller\SecurityRestController($this->get('oro_security.security_facade'), $this->get('oro_security.acl.annotation_provider'));
    }
    protected function getPimUser_Controller_UserGroupRestService()
    {
        return $this->services['pim_user.controller.user_group_rest'] = new \Pim\Bundle\UserBundle\Controller\UserGroupRestController($this->get('pim_user.repository.group'));
    }
    protected function getPimUser_Controller_UserRestService()
    {
        return $this->services['pim_user.controller.user_rest'] = new \Pim\Bundle\UserBundle\Controller\UserRestController($this->get('security.token_storage'), $this->get('pim_internal_api_serializer'), $this->get('pim_user.repository.user'));
    }
    protected function getPimUser_EventListener_GroupUsersGridListenerService()
    {
        return $this->services['pim_user.event_listener.group_users_grid_listener'] = new \Oro\Bundle\DataGridBundle\EventListener\BaseOrmRelationDatagridListener('group_id', $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimUser_EventListener_RoleUsersGridListenerService()
    {
        return $this->services['pim_user.event_listener.role_users_grid_listener'] = new \Oro\Bundle\DataGridBundle\EventListener\BaseOrmRelationDatagridListener('role_id', $this->get('oro_datagrid.datagrid.request_params'));
    }
    protected function getPimUser_EventSubscriber_GroupService()
    {
        return $this->services['pim_user.event_subscriber.group'] = new \Pim\Bundle\UserBundle\EventSubscriber\GroupSubscriber();
    }
    protected function getPimUser_EventSubscriber_UserPreferencesService()
    {
        $this->services['pim_user.event_subscriber.user_preferences'] = $instance = new \Pim\Bundle\UserBundle\EventSubscriber\UserPreferencesSubscriber();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getPimUser_Factory_GroupService()
    {
        return $this->services['pim_user.factory.group'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Oro\\Bundle\\UserBundle\\Entity\\Group');
    }
    protected function getPimUser_Factory_RoleService()
    {
        return $this->services['pim_user.factory.role'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Oro\\Bundle\\UserBundle\\Entity\\Role');
    }
    protected function getPimUser_Factory_UserService()
    {
        return $this->services['pim_user.factory.user'] = new \Akeneo\Component\StorageUtils\Factory\SimpleFactory('Pim\\Bundle\\UserBundle\\Entity\\User');
    }
    protected function getPimUser_Form_Subscriber_UserPreferencesService()
    {
        return $this->services['pim_user.form.subscriber.user_preferences'] = new \Pim\Bundle\UserBundle\Form\Subscriber\UserPreferencesSubscriber($this->get('pim_localization.provider.ui_locale'), $this->get('pim_enrich.repository.category'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Category');
    }
    protected function getPimUser_Form_Type_AclAccessLevelSelectorService()
    {
        return $this->services['pim_user.form.type.acl_access_level_selector'] = new \Pim\Bundle\UserBundle\Form\Type\AclAccessLevelSelectorType();
    }
    protected function getPimUser_Form_Type_AclCollectionService()
    {
        return $this->services['pim_user.form.type.acl_collection'] = new \Pim\Bundle\UserBundle\Form\Type\PrivilegeCollectionType();
    }
    protected function getPimUser_Form_Type_UserService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('pim_user.form.type.user', 'request');
        }
        return $this->services['pim_user.form.type.user'] = $this->scopedServices['request']['pim_user.form.type.user'] = new \Pim\Bundle\UserBundle\Form\Type\UserType($this->get('security.token_storage'), $this->get('request'), $this->get('pim_user.form.subscriber.user_preferences'), $this->get('pim_user.repository.role'), $this->get('pim_user.repository.group'), $this->get('event_dispatcher'));
    }
    protected function getPimUser_Normalizer_UserService()
    {
        return $this->services['pim_user.normalizer.user'] = new \Pim\Bundle\UserBundle\Normalizer\UserNormalizer();
    }
    protected function getPimUser_Provider_UserService()
    {
        return $this->services['pim_user.provider.user'] = new \Pim\Bundle\UserBundle\Provider\UserProvider($this->get('pim_user.repository.user'));
    }
    protected function getPimUser_Repository_GroupService()
    {
        return $this->services['pim_user.repository.group'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Oro\\Bundle\\UserBundle\\Entity\\Group');
    }
    protected function getPimUser_Repository_RoleService()
    {
        return $this->services['pim_user.repository.role'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Oro\\Bundle\\UserBundle\\Entity\\Role');
    }
    protected function getPimUser_Repository_UserService()
    {
        return $this->services['pim_user.repository.user'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('Pim\\Bundle\\UserBundle\\Entity\\User');
    }
    protected function getPimUser_Saver_GroupService()
    {
        return $this->services['pim_user.saver.group'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Oro\\Bundle\\UserBundle\\Entity\\Group');
    }
    protected function getPimUser_Saver_RoleService()
    {
        return $this->services['pim_user.saver.role'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Oro\\Bundle\\UserBundle\\Entity\\Role');
    }
    protected function getPimUser_Saver_UserService()
    {
        return $this->services['pim_user.saver.user'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Pim\\Bundle\\UserBundle\\Entity\\User');
    }
    protected function getPimUser_Twig_AclGroupsExtensionService()
    {
        return $this->services['pim_user.twig.acl_groups_extension'] = new \Pim\Bundle\UserBundle\Twig\AclGroupsExtension(array('FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle', 'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle', 'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle', 'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle', 'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle', 'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle', 'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle', 'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle', 'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle', 'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle', 'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle', 'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle', 'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle', 'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle', 'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle', 'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle', 'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle', 'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle', 'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle', 'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle', 'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle', 'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle', 'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle', 'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle', 'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle', 'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle', 'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle', 'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle', 'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle', 'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle', 'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle', 'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle', 'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle', 'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle', 'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle', 'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle', 'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle', 'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle', 'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle', 'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle', 'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle', 'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle', 'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle', 'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle', 'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle', 'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle', 'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle', 'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle', 'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle', 'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle', 'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle', 'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle', 'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle', 'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle', 'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle', 'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle'));
    }
    protected function getPimUser_Updater_GroupService()
    {
        return $this->services['pim_user.updater.group'] = new \Pim\Component\User\Updater\GroupUpdater();
    }
    protected function getPimUser_Updater_RoleService()
    {
        return $this->services['pim_user.updater.role'] = new \Pim\Component\User\Updater\RoleUpdater($this->get('oro_security.acl.manager'));
    }
    protected function getPimUser_Updater_UserService()
    {
        return $this->services['pim_user.updater.user'] = new \Pim\Component\User\Updater\UserUpdater($this->get('oro_user.manager'), $this->get('pim_catalog.repository.category'), $this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.channel'), $this->get('pim_user.repository.role'), $this->get('pim_user.repository.group'));
    }
    protected function getPimUser_ViewElement_User_Tab_AdditionalService()
    {
        return $this->services['pim_user.view_element.user.tab.additional'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_user.user.tab.additional', 'PimUserBundle:User:Tab/additional.html.twig');
    }
    protected function getPimUser_ViewElement_User_Tab_GeneralService()
    {
        return $this->services['pim_user.view_element.user.tab.general'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_user.user.tab.general', 'PimUserBundle:User:Tab/general.html.twig');
    }
    protected function getPimUser_ViewElement_User_Tab_GroupAndRoleService()
    {
        $this->services['pim_user.view_element.user.tab.group_and_role'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_user.user.tab.group_and_role', 'PimUserBundle:User:Tab/group_and_role.html.twig');
        $instance->addVisibilityChecker($this->get('pim_user.view_element.visibility_checker.groups_and_roles'));
        return $instance;
    }
    protected function getPimUser_ViewElement_User_Tab_InterfacesService()
    {
        return $this->services['pim_user.view_element.user.tab.interfaces'] = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_user.user.tab.interfaces', 'PimUserBundle:User:Tab/interfaces.html.twig');
    }
    protected function getPimUser_ViewElement_User_Tab_PasswordService()
    {
        $this->services['pim_user.view_element.user.tab.password'] = $instance = new \Pim\Bundle\EnrichBundle\ViewElement\BaseViewElement('pim_user.user.tab.password', 'PimUserBundle:User:Tab/password.html.twig');
        $instance->addVisibilityChecker($this->get('pim_enrich.view_element.visibility_checker.non_empty_property'), array('property' => '[form].children[change_password]'));
        return $instance;
    }
    protected function getPimUser_ViewElement_VisibilityChecker_GroupsAndRolesService()
    {
        return $this->services['pim_user.view_element.visibility_checker.groups_and_roles'] = new \Pim\Bundle\UserBundle\ViewElement\Checker\GroupsAndRolesVisibilityChecker();
    }
    protected function getPimVersioning_Builder_VersionService()
    {
        return $this->services['pim_versioning.builder.version'] = new \Pim\Bundle\VersioningBundle\Builder\VersionBuilder($this->get('pim_versioning.serializer'), $this->get('pim_versioning.factory.version'));
    }
    protected function getPimVersioning_Context_VersionService()
    {
        return $this->services['pim_versioning.context.version'] = new \Pim\Bundle\VersioningBundle\Manager\VersionContext();
    }
    protected function getPimVersioning_EventSubscriber_AddRemoveVersionService()
    {
        return $this->services['pim_versioning.event_subscriber.add_remove_version'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\AddRemoveVersionSubscriber($this->get('pim_versioning.factory.version'), $this->get('pim_versioning.repository.version'), $this->get('security.token_storage'), $this->get('security.authorization_checker'), $this->get('pim_versioning.saver.version'));
    }
    protected function getPimVersioning_EventSubscriber_AddcontextService()
    {
        return $this->services['pim_versioning.event_subscriber.addcontext'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\AddContextSubscriber($this->get('pim_versioning.context.version'));
    }
    protected function getPimVersioning_EventSubscriber_AdduserService()
    {
        return $this->services['pim_versioning.event_subscriber.adduser'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\AddUserSubscriber($this->get('security.authorization_checker'), $this->get('security.token_storage'));
    }
    protected function getPimVersioning_EventSubscriber_AddversionService()
    {
        return $this->services['pim_versioning.event_subscriber.addversion'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\AddVersionSubscriber($this);
    }
    protected function getPimVersioning_EventSubscriber_PurgeProgressBarAdvancerService()
    {
        return $this->services['pim_versioning.event_subscriber.purge_progress_bar_advancer'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\PurgeProgressBarAdvancerSubscriber();
    }
    protected function getPimVersioning_EventSubscriber_TimestampableService()
    {
        return $this->services['pim_versioning.event_subscriber.timestampable'] = new \Pim\Bundle\VersioningBundle\EventSubscriber\TimestampableSubscriber($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'));
    }
    protected function getPimVersioning_Factory_VersionService()
    {
        return $this->services['pim_versioning.factory.version'] = new \Pim\Bundle\VersioningBundle\Factory\VersionFactory('Akeneo\\Component\\Versioning\\Model\\Version');
    }
    protected function getPimVersioning_Factory_VersionCursorService()
    {
        return $this->services['pim_versioning.factory.version_cursor'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\ORM\Cursor\CursorFactory('Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\Cursor', $this->get('doctrine.orm.default_entity_manager'), 1000);
    }
    protected function getPimVersioning_Manager_VersionService()
    {
        return $this->services['pim_versioning.manager.version'] = new \Pim\Bundle\VersioningBundle\Manager\VersionManager($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'), $this->get('pim_versioning.builder.version'), $this->get('pim_versioning.context.version'), $this->get('event_dispatcher'));
    }
    protected function getPimVersioning_Purger_Advisor_SkipFirstVersionService()
    {
        return $this->services['pim_versioning.purger.advisor.skip_first_version'] = new \Pim\Bundle\VersioningBundle\Purger\SkipFirstVersionPurgerAdvisor();
    }
    protected function getPimVersioning_Purger_Advisor_SkipLastVersionService()
    {
        return $this->services['pim_versioning.purger.advisor.skip_last_version'] = new \Pim\Bundle\VersioningBundle\Purger\SkipLastVersionPurgerAdvisor($this->get('pim_versioning.repository.version'));
    }
    protected function getPimVersioning_Purger_VersionService()
    {
        $this->services['pim_versioning.purger.version'] = $instance = new \Pim\Bundle\VersioningBundle\Purger\VersionPurger($this->get('pim_versioning.repository.version'), $this->get('pim_versioning.remover.version'), $this->get('akeneo_storage_utils.doctrine.object_detacher'), $this->get('event_dispatcher'));
        $instance->addVersionPurgerAdvisor($this->get('pim_versioning.purger.advisor.skip_first_version'));
        $instance->addVersionPurgerAdvisor($this->get('pim_versioning.purger.advisor.skip_last_version'));
        return $instance;
    }
    protected function getPimVersioning_Remover_VersionService()
    {
        return $this->services['pim_versioning.remover.version'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Remover\BaseRemover($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Akeneo\\Component\\Versioning\\Model\\Version');
    }
    protected function getPimVersioning_Repository_VersionService()
    {
        $this->services['pim_versioning.repository.version'] = $instance = $this->get('doctrine.orm.default_entity_manager')->getRepository('Akeneo\\Component\\Versioning\\Model\\Version');
        $instance->setCursorFactory($this->get('pim_versioning.factory.version_cursor'));
        return $instance;
    }
    protected function getPimVersioning_Saver_VersionService()
    {
        return $this->services['pim_versioning.saver.version'] = new \Akeneo\Bundle\StorageUtilsBundle\Doctrine\Common\Saver\BaseSaver($this->get('doctrine.orm.default_entity_manager'), $this->get('event_dispatcher'), 'Akeneo\\Component\\Versioning\\Model\\Version');
    }
    protected function getPimVersioning_SerializerService()
    {
        return $this->services['pim_versioning.serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => $this->get('pim_import_export.normalizer.job_execution'), 1 => $this->get('pim_import_export.normalizer.step_execution'), 2 => $this->get('pim_versioning.serializer.normalizer.flat.product'), 3 => $this->get('pim_versioning.serializer.normalizer.flat.product_value'), 4 => $this->get('pim_versioning.serializer.normalizer.flat.category'), 5 => $this->get('pim_versioning.serializer.normalizer.flat.attribute'), 6 => $this->get('pim_versioning.serializer.normalizer.flat.family'), 7 => $this->get('pim_versioning.serializer.normalizer.flat.attribute_group'), 8 => $this->get('pim_versioning.serializer.normalizer.flat.association_type'), 9 => $this->get('pim_versioning.serializer.normalizer.flat.proxy_group'), 10 => $this->get('pim_versioning.serializer.normalizer.flat.job_instance'), 11 => $this->get('pim_versioning.serializer.normalizer.flat.channel'), 12 => $this->get('pim_versioning.serializer.normalizer.flat.label_translation'), 13 => $this->get('pim_versioning.serializer.normalizer.flat.collection'), 14 => $this->get('pim_versioning.serializer.normalizer.flat.metric'), 15 => $this->get('pim_versioning.serializer.normalizer.flat.datetime'), 16 => $this->get('pim_versioning.serializer.normalizer.flat.option'), 17 => $this->get('pim_versioning.serializer.normalizer.flat.price'), 18 => $this->get('pim_versioning.serializer.normalizer.flat.file'), 19 => $this->get('pim_versioning.serializer.normalizer.flat.locale'), 20 => $this->get('pim_reference_data.normalizer.flat.reference_data')), array(0 => new \Pim\Component\Connector\Encoder\CsvEncoder()));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_AssociationTypeService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.association_type'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\AssociationTypeNormalizer($this->get('pim_catalog.normalizer.standard.association_type'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_AttributeService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.attribute'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\AttributeNormalizer($this->get('pim_catalog.normalizer.standard.attribute'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_AttributeGroupService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.attribute_group'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\AttributeGroupNormalizer($this->get('pim_catalog.normalizer.standard.attribute_group'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_CategoryService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.category'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\CategoryNormalizer($this->get('pim_catalog.normalizer.standard.category'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_ChannelService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.channel'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\ChannelNormalizer($this->get('pim_catalog.normalizer.standard.channel'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_CollectionService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.collection'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\CollectionNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_DatetimeService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.datetime'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\DateTimeNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_FamilyService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.family'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\FamilyNormalizer($this->get('pim_catalog.normalizer.standard.family'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_FileService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.file'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\FileNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_GroupService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.group'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\GroupNormalizer($this->get('pim_catalog.normalizer.standard.group'), $this->get('pim_versioning.serializer.normalizer.flat.label_translation'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_JobInstanceService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.job_instance'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\JobInstanceNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_LabelTranslationService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.label_translation'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\TranslationNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_LocaleService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.locale'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\LocaleNormalizer($this->get('pim_catalog.normalizer.standard.locale'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_MetricService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.metric'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\MetricNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_OptionService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.option'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\AttributeOptionNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_PriceService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.price'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\PriceNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_ProductService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.product'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\ProductNormalizer();
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_ProxyGroupService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.proxy_group'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\ProxyGroupNormalizer($this->get('pim_versioning.serializer.normalizer.flat.group'), $this->get('pim_versioning.serializer.normalizer.flat.variant_group'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_VariantGroupService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.variant_group'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\VariantGroupNormalizer($this->get('pim_catalog.normalizer.standard.translation'), $this->get('pim_versioning.serializer.normalizer.flat.product_value'), $this->get('pim_catalog.denormalizer.standard.product_values'));
    }
    protected function getPimVersioning_UpdateGuesser_AttributeGroupService()
    {
        return $this->services['pim_versioning.update_guesser.attribute_group'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\AttributeGroupUpdateGuesser();
    }
    protected function getPimVersioning_UpdateGuesser_AttributeOptionService()
    {
        return $this->services['pim_versioning.update_guesser.attribute_option'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\AttributeOptionUpdateGuesser($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'), 'Pim\\Component\\Catalog\\Model\\Product');
    }
    protected function getPimVersioning_UpdateGuesser_ChainedService()
    {
        $this->services['pim_versioning.update_guesser.chained'] = $instance = new \Pim\Bundle\VersioningBundle\UpdateGuesser\ChainedUpdateGuesser();
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.attribute_group'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.attribute_option'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.contains_products'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.variant_group'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.product_value'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.translations'));
        $instance->addUpdateGuesser($this->get('pim_versioning.update_guesser.versionable'));
        return $instance;
    }
    protected function getPimVersioning_UpdateGuesser_ContainsProductsService()
    {
        return $this->services['pim_versioning.update_guesser.contains_products'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\ContainsProductsUpdateGuesser();
    }
    protected function getPimVersioning_UpdateGuesser_ProductValueService()
    {
        return $this->services['pim_versioning.update_guesser.product_value'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\ProductValueUpdateGuesser();
    }
    protected function getPimVersioning_UpdateGuesser_TranslationsService()
    {
        return $this->services['pim_versioning.update_guesser.translations'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\TranslationsUpdateGuesser(array(0 => 'Akeneo\\Component\\Batch\\Model\\JobInstance'));
    }
    protected function getPimVersioning_UpdateGuesser_VariantGroupService()
    {
        return $this->services['pim_versioning.update_guesser.variant_group'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\VariantGroupUpdateGuesser($this->get('akeneo_storage_utils.doctrine.smart_manager_registry'), 'Pim\\Bundle\\CatalogBundle\\Entity\\Group');
    }
    protected function getPimVersioning_UpdateGuesser_VersionableService()
    {
        return $this->services['pim_versioning.update_guesser.versionable'] = new \Pim\Bundle\VersioningBundle\UpdateGuesser\VersionableUpdateGuesser(array(0 => 'Akeneo\\Component\\Batch\\Model\\JobInstance'));
    }
    protected function getProfilerService()
    {
        $a = $this->get('monolog.logger.profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = $this->get('kernel', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $c = new \Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector();
        if ($this->has('kernel')) {
            $c->setKernel($b);
        }
        $this->services['profiler'] = $instance = new \Symfony\Component\HttpKernel\Profiler\Profiler(new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage(('file:'.__DIR__.'/profiler'), '', '', 86400), $a);
        $instance->add($c);
        $instance->add($this->get('data_collector.request'));
        $instance->add(new \Symfony\Bundle\FrameworkBundle\DataCollector\AjaxDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector($this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector($a));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector($b, $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
        $instance->add($this->get('data_collector.router'));
        $instance->add($this->get('data_collector.form'));
        $instance->add($this->get('data_collector.translation'));
        $instance->add(new \Symfony\Bridge\Twig\DataCollector\TwigDataCollector($this->get('twig.profile')));
        $instance->add(new \Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy')));
        $instance->add(new \Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector($this));
        $instance->add(new \Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector($this->get('doctrine')));
        $instance->add($this->get('pim_catalog.data_collector.database'));
        $instance->add($this->get('data_collector.dump'));
        return $instance;
    }
    protected function getProfilerListenerService()
    {
        return $this->services['profiler_listener'] = new \Symfony\Component\HttpKernel\EventListener\ProfilerListener($this->get('profiler'), NULL, false, false, $this->get('request_stack'));
    }
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false);
    }
    protected function getRequestService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('request', 'request');
        }
        throw new RuntimeException('You have requested a synthetic service ("request"). The DIC does not know how to construct this service.');
    }
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }
    protected function getRouterService()
    {
        return $this->services['router'] = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, ($this->targetDirs[2].'/config/routing_dev.yml'), array('cache_dir' => __DIR__, 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appDevUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appDevUrlMatcher', 'strict_requirements' => false), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('router'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }
    protected function getRouting_LoaderService()
    {
        $a = $this->get('controller_name_converter');
        $b = $this->get('file_locator');
        $c = $this->get('annotation_reader');
        $d = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($c);
        $e = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();
        $f = new \Symfony\Component\Config\Loader\LoaderResolver();
        $f->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $d));
        $f->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $d));
        $f->addLoader($d);
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($b, $e));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $b, $a, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($c, $this->get('fos_rest.request.param_fetcher.reader'), $this->get('fos_rest.inflector'), true, array('json' => false, 'html' => true)), $c), 'json'));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($b, $e, true, array('json' => false, 'html' => true), 'json'));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($b, $e, true, array('json' => false, 'html' => true), 'json'));
        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $f);
    }
    protected function getSecurity_Acl_CacheService()
    {
        return $this->services['security.acl.cache'] = new \Oro\Bundle\SecurityBundle\Acl\Cache\AclCache(new \Oro\Bundle\SecurityBundle\Acl\Cache\FilesystemCache((__DIR__.'/oro_acl')), $this->get('oro_security.acl.permission_granting_strategy'), 'sf2_acl_');
    }
    protected function getSecurity_Acl_Dbal_SchemaService()
    {
        return $this->services['security.acl.dbal.schema'] = new \Symfony\Component\Security\Acl\Dbal\Schema(array('class_table_name' => 'acl_classes', 'entry_table_name' => 'acl_entries', 'oid_table_name' => 'acl_object_identities', 'oid_ancestors_table_name' => 'acl_object_identity_ancestors', 'sid_table_name' => 'acl_security_identities'), $this->get('doctrine.dbal.default_connection'));
    }
    protected function getSecurity_Acl_Dbal_SchemaListenerService()
    {
        return $this->services['security.acl.dbal.schema_listener'] = new \Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener($this->get('security.acl.dbal.schema'));
    }
    protected function getSecurity_Acl_ProviderService()
    {
        return $this->services['security.acl.provider'] = new \Oro\Bundle\SecurityBundle\Acl\Dbal\MutableAclProvider($this->get('doctrine.dbal.default_connection'), $this->get('oro_security.acl.permission_granting_strategy'), array('class_table_name' => 'acl_classes', 'entry_table_name' => 'acl_entries', 'oid_table_name' => 'acl_object_identities', 'oid_ancestors_table_name' => 'acl_object_identity_ancestors', 'sid_table_name' => 'acl_security_identities'), $this->get('security.acl.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_Acl_Voter_BasicPermissionsService()
    {
        $a = $this->get('oro_security.acl.extension_selector');
        $b = $this->get('oro_security.acl.object_identity_factory');
        $c = new \Oro\Bundle\SecurityBundle\Acl\Domain\RootBasedAclProvider($b);
        $c->setBaseAclProvider($this->get('security.acl.provider'));
        $this->services['security.acl.voter.basic_permissions'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Voter\AclVoter($c, new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdentityRetrievalStrategy($b), new \Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy($this->get('security.role_hierarchy'), $this->get('security.authentication.trust_resolver')), new \Oro\Bundle\SecurityBundle\Acl\Permission\PermissionMap($a), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), true);
        $instance->setAclExtensionSelector($a);
        return $instance;
    }
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils($this->get('request_stack'));
    }
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker($this->get('security.token_storage'), $this->get('security.authentication.manager'), $this->get('security.access.decision_manager'), false);
    }
    protected function getSecurity_ContextService()
    {
        return $this->services['security.context'] = new \Symfony\Component\Security\Core\SecurityContext($this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator($this->get('security.secure_random')), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array('Pim\\Bundle\\UserBundle\\Entity\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder', 'arguments' => array(0 => 'sha512', 1 => true, 2 => 5000)), 'Symfony\\Component\\Security\\Core\\User\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder', 'arguments' => array(0 => false))));
    }
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/'), 'security.firewall.map.context.install' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/installer'), 'security.firewall.map.context.liip_imagine' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/media'), 'security.firewall.map.context.login' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/user/(login|reset-request|send-email|check-email)$'), 'security.firewall.map.context.reset_password' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/user/reset/*'), 'security.firewall.map.context.main' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/'))), $this->get('event_dispatcher'));
    }
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Firewall_Map_Context_InstallService()
    {
        return $this->services['security.firewall.map.context.install'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Firewall_Map_Context_LiipImagineService()
    {
        return $this->services['security.firewall.map.context.liip_imagine'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Firewall_Map_Context_LoginService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.firewall.map.context.login'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider')), 'login', $b, $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5873c159bed6d5.63720088', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Pim\Bundle\UserBundle\Security\FirewallExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'login', NULL, NULL, NULL, $b));
    }
    protected function getSecurity_Firewall_Map_Context_MainService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('security.user.provider.concrete.chain_provider');
        $c = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $e = $this->get('security.http_utils');
        $f = $this->get('http_kernel');
        $g = $this->get('security.authentication.manager');
        $h = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $b), 'ThisTokenIsNotSoSecretChangeIt', 'main', array('name' => 'BAPRM', 'lifetime' => 1209600, 'path' => '/', 'domain' => NULL, 'secure' => false, 'httponly' => true, 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'), $c);
        $i = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $e, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($e, '/'), array('csrf_parameter' => '_csrf_token', 'intention' => 'logout', 'logout_path' => 'oro_user_security_logout'));
        $i->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
        $i->addHandler($h);
        $j = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($e, array());
        $j->setOptions(array('login_path' => 'oro_user_security_login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false));
        $j->setProviderKey('main');
        $k = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($f, $e, array(), $c);
        $k->setOptions(array('login_path' => 'oro_user_security_login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));
        $l = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $g, new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate'), $e, 'main', $j, $k, array('check_path' => 'oro_user_security_check', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'intention' => 'authenticate', 'post_only' => true), $c, $d, $this->get('form.csrf_provider'));
        $l->setRememberMeServices($h);
        return $this->services['security.firewall.map.context.main'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $b, 1 => $this->get('oro_user.security.provider')), 'main', $c, $d), 2 => $i, 3 => $l, 4 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($a, $h, $g, $c, $d, true), 5 => $this->get('security.access_listener')), new \Pim\Bundle\UserBundle\Security\FirewallExceptionListener($a, $this->get('security.authentication.trust_resolver'), $e, 'main', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($f, $e, 'oro_user_security_login', false), NULL, NULL, $c));
    }
    protected function getSecurity_Firewall_Map_Context_ResetPasswordService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.firewall.map.context.reset_password'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('security.user.provider.concrete.chain_provider'), 1 => $this->get('oro_user.security.provider')), 'reset_password', $b, $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5873c159bed6d5.63720088', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Pim\Bundle\UserBundle\Security\FirewallExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'reset_password', NULL, NULL, NULL, $b));
    }
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder($this->get('security.encoder_factory'));
    }
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }
    protected function getSecurity_SecureRandomService()
    {
        return $this->services['security.secure_random'] = new \Symfony\Component\Security\Core\Util\SecureRandom((__DIR__.'/secure_random.seed'), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.token_storage'), $this->get('security.encoder_factory'));
    }
    protected function getSensioDistribution_SecurityCheckerService()
    {
        return $this->services['sensio_distribution.security_checker'] = new \SensioLabs\Security\SecurityChecker();
    }
    protected function getSensioDistribution_SecurityChecker_CommandService()
    {
        return $this->services['sensio_distribution.security_checker.command'] = new \SensioLabs\Security\Command\SecurityCheckerCommand($this->get('sensio_distribution.security_checker'));
    }
    protected function getSensioDistribution_WebconfiguratorService()
    {
        $this->services['sensio_distribution.webconfigurator'] = $instance = new \Sensio\Bundle\DistributionBundle\Configurator\Configurator($this->targetDirs[2]);
        $instance->addStep(new \Sensio\Bundle\DistributionBundle\Configurator\Step\DoctrineStep(), 10);
        $instance->addStep(new \Sensio\Bundle\DistributionBundle\Configurator\Step\SecretStep(), 0);
        return $instance;
    }
    protected function getSensioFrameworkExtra_Cache_ListenerService()
    {
        return $this->services['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener();
    }
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->services['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener($this->get('annotation_reader'));
    }
    protected function getSensioFrameworkExtra_Converter_DatetimeService()
    {
        return $this->services['sensio_framework_extra.converter.datetime'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter();
    }
    protected function getSensioFrameworkExtra_Converter_Doctrine_OrmService()
    {
        return $this->services['sensio_framework_extra.converter.doctrine.orm'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        return $this->services['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($this->get('sensio_framework_extra.converter.manager'), true);
    }
    protected function getSensioFrameworkExtra_Converter_ManagerService()
    {
        $this->services['sensio_framework_extra.converter.manager'] = $instance = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();
        $instance->add($this->get('sensio_framework_extra.converter.doctrine.orm'), 0, 'doctrine.orm');
        $instance->add($this->get('sensio_framework_extra.converter.datetime'), 0, 'datetime');
        return $instance;
    }
    protected function getSensioFrameworkExtra_Security_ListenerService()
    {
        return $this->services['sensio_framework_extra.security.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener(NULL, new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage(), $this->get('security.authentication.trust_resolver', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_View_GuesserService()
    {
        return $this->services['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser($this->get('kernel'));
    }
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->services['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener($this);
    }
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }
    protected function getSession_Handler_PdoService()
    {
        return $this->services['session.handler.pdo'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler($this->get('doctrine.dbal.default.wrapped_connection'), array('db_table' => 'pim_session'));
    }
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage((__DIR__.'/sessions'), 'MOCKSESSID', $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('name' => 'BAPID', 'gc_maxlifetime' => 3600, 'gc_probability' => 1), $this->get('session.handler.pdo'), $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage($this->get('session.handler.pdo'), $this->get('session.storage.metadata_bag'));
    }
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }
    protected function getStofDoctrineExtensions_EventListener_LocaleService()
    {
        return $this->services['stof_doctrine_extensions.event_listener.locale'] = new \Pim\Bundle\EnrichBundle\EventListener\UserContextListener($this->get('security.token_storage'), $this->get('pim_enrich.event_listener.add_locale'), $this->get('pim_catalog.context.catalog'), $this->get('pim_user.context.user'));
    }
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }
    protected function getSwiftmailer_Mailer_Default_SpoolService()
    {
        return $this->services['swiftmailer.mailer.default.spool'] = new \Swift_MemorySpool();
    }
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        return $this->services['swiftmailer.mailer.default.transport'] = new \Swift_Transport_SpoolTransport($this->get('swiftmailer.mailer.default.transport.eventdispatcher'), $this->get('swiftmailer.mailer.default.spool'));
    }
    protected function getSwiftmailer_Mailer_Default_Transport_RealService()
    {
        return $this->services['swiftmailer.mailer.default.transport.real'] = new \Swift_Transport_NullTransport($this->get('swiftmailer.mailer.default.transport.eventdispatcher'));
    }
    protected function getTemplatingService()
    {
        $this->services['templating'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());
        $instance->addEngine($this->get('templating.engine.twig'));
        $instance->addEngine($this->get('templating.engine.php'));
        return $instance;
    }
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }
    protected function getTemplating_GlobalsService()
    {
        return $this->services['templating.globals'] = new \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables($this);
    }
    protected function getTemplating_Helper_ActionsService()
    {
        return $this->services['templating.helper.actions'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper($this->get('fragment.handler'));
    }
    protected function getTemplating_Helper_AssetsService()
    {
        return $this->services['templating.helper.assets'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper($this->get('assets.packages'), array());
    }
    protected function getTemplating_Helper_CodeService()
    {
        return $this->services['templating.helper.code'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper(NULL, $this->targetDirs[2], 'UTF-8');
    }
    protected function getTemplating_Helper_FormService()
    {
        return $this->services['templating.helper.form'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper(new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine($this->get('templating.engine.php'), array(0 => 'FrameworkBundle:Form')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
    }
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper($this->get('security.logout_url_generator'));
    }
    protected function getTemplating_Helper_RequestService()
    {
        return $this->services['templating.helper.request'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper($this->get('request_stack'));
    }
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper($this->get('router'));
    }
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTemplating_Helper_SessionService()
    {
        return $this->services['templating.helper.session'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper($this->get('request_stack'));
    }
    protected function getTemplating_Helper_SlotsService()
    {
        return $this->services['templating.helper.slots'] = new \Symfony\Component\Templating\Helper\SlotsHelper();
    }
    protected function getTemplating_Helper_StopwatchService()
    {
        return $this->services['templating.helper.stopwatch'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTemplating_Helper_TranslatorService()
    {
        return $this->services['templating.helper.translator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper($this->get('translator'));
    }
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader($this->get('templating.locator'));
    }
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser($this->get('kernel'));
    }
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();
        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));
        $instance->addExtractor('navigation_translation_extractor', $this->get('oro_navigation.translation.extractor'));
        return $instance;
    }
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');
        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();
        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));
        return $instance;
    }
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();
        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));
        return $instance;
    }
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Symfony\Component\Translation\DataCollectorTranslator($this->get('translator.default'));
    }
    protected function getTranslator_DefaultService()
    {
        $this->services['translator.default'] = $instance = new \Oro\Bundle\TranslationBundle\Translation\Translator($this, new \Symfony\Component\Translation\MessageSelector(), array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json')), array('cache_dir' => (__DIR__.'/translations'), 'debug' => false, 'resource_files' => array('vi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.vi.xlf')), 'pt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.pt.yml'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.pt.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.pt.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.pt.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.pt.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.pt.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.pt.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.pt.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.pt.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.pt.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.pt.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.pt.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.pt.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.pt.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.pt.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.pt.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.pt.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.pt.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.pt.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.pt.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.pt.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.pt.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.pt.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.pt.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.pt.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.pt.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.pt.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.pt.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.pt.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.pt.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.pt.yml')), 'nl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.nl.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.nl.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.nl.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.nl.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.nl.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.nl.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.nl.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.nl.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.nl.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.nl.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.nl.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.nl.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.nl.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.nl.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.nl.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.nl.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.nl.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.nl.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.nl.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.nl.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.nl.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.nl.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.nl.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.nl.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.nl.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.nl.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.nl.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.nl.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.nl.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.nl.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.nl.yml')), 'az' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf')), 'et' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf')), 'ar' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf')), 'fa' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf')), 'da' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf')), 'lt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lt.xlf')), 'hr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hr.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.hr.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.hr.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.hr.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.hr.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.hr.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.hr.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.hr.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.hr.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.hr.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.hr.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.hr.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.hr.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.hr.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.hr.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.hr.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.hr.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.hr.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.hr.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.hr.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.hr.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.hr.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.hr.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.hr.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.hr.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.hr.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.hr.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.hr.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.hr.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.hr.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.hr.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.hr.yml')), 'eu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf')), 'cy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf')), 'af' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf')), 'id' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.id.xlf')), 'en' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/ConfigBundle/Resources/translations/jsmessages.en.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/ConfigBundle/Resources/translations/messages.en.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/DataGridBundle/Resources/translations/jsmessages.en.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/DataGridBundle/Resources/translations/messages.en.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/FilterBundle/Resources/translations/jsmessages.en.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/FilterBundle/Resources/translations/messages.en.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/translations/jsmessages.en.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/translations/messages.en.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/SecurityBundle/Resources/translations/messages.en.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/translations/config.en.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/translations/jsmessages.en.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/translations/messages.en.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/translations/validators.en.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.en.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.en.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.en.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.en.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.en.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.en.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.en.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.en.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.en.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.en.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.en.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.en.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.en.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.en.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.en.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.en.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.en.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.en.yml'), 34 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.en.yml'), 35 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.en.yml'), 36 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.en.yml'), 37 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.en.yml'), 38 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.en.yml'), 39 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.en.yml'), 40 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.en.yml'), 41 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.en.yml'), 42 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.en.yml'), 43 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.en.yml'), 44 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.en.yml')), 'cs' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf')), 'th' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.th.xlf')), 'ja' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ja.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.ja.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.ja.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.ja.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.ja.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.ja.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.ja.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.ja.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.ja.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.ja.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.ja.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.ja.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.ja.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.ja.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.ja.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.ja.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.ja.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.ja.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.ja.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.ja.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.ja.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.ja.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.ja.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.ja.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.ja.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.ja.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.ja.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.ja.yml')), 'el' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf')), 'ru' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.ru.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.ru.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.ru.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.ru.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.ru.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.ru.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.ru.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.ru.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.ru.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.ru.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.ru.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.ru.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.ru.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.ru.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.ru.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.ru.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.ru.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.ru.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.ru.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.ru.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.ru.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.ru.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.ru.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.ru.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.ru.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.ru.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.ru.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.ru.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.ru.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.ru.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.ru.yml')), 'sq' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf')), 'bg' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.bg.xlf')), 'zh_CN' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.zh_CN.xlf')), 'nb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf')), 'ro' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf')), 'no' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf')), 'sk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf')), 'it' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.it.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.it.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.it.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.it.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.it.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.it.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.it.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.it.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.it.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.it.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.it.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.it.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.it.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.it.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.it.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.it.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.it.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.it.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.it.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.it.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.it.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.it.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.it.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.it.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.it.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.it.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.it.yml')), 'sr_Latn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf')), 'gl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf')), 'pl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.pl.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.pl.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.pl.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.pl.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.pl.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.pl.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.pl.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.pl.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.pl.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.pl.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.pl.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.pl.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.pl.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.pl.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.pl.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.pl.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.pl.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.pl.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.pl.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.pl.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.pl.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.pl.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.pl.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.pl.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.pl.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.pl.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.pl.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.pl.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.pl.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.pl.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.pl.yml')), 'sv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf')), 'es' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/DataGridBundle/Resources/translations/jsmessages.es.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.es.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.es.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.es.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.es.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.es.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.es.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.es.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.es.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.es.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.es.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.es.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.es.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.es.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.es.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.es.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.es.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.es.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.es.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.es.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.es.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.es.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.es.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.es.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.es.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.es.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.es.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.es.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.es.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.es.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.es.yml'), 34 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.es.yml')), 'hy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf')), 'pt_BR' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.pt_BR.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.pt_BR.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.pt_BR.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.pt_BR.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.pt_BR.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.pt_BR.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.pt_BR.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.pt_BR.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.pt_BR.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.pt_BR.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.pt_BR.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.pt_BR.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.pt_BR.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.pt_BR.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.pt_BR.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.pt_BR.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.pt_BR.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.pt_BR.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.pt_BR.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.pt_BR.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.pt_BR.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.pt_BR.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.pt_BR.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.pt_BR.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.pt_BR.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.pt_BR.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.pt_BR.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.pt_BR.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.pt_BR.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.pt_BR.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.pt_BR.yml')), 'tr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf')), 'fi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.fi.yml'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.fi.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.fi.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.fi.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.fi.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.fi.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.fi.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.fi.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.fi.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.fi.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.fi.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.fi.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.fi.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.fi.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.fi.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.fi.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.fi.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.fi.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.fi.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.fi.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.fi.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.fi.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.fi.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.fi.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.fi.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.fi.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.fi.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.fi.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.fi.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.fi.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.fi.yml')), 'ca' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.ca.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.ca.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.ca.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.ca.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.ca.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.ca.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.ca.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.ca.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.ca.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.ca.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.ca.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.ca.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.ca.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.ca.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.ca.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.ca.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.ca.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.ca.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.ca.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.ca.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.ca.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.ca.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.ca.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.ca.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.ca.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.ca.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.ca.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.ca.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.ca.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.ca.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.ca.yml')), 'sr_Cyrl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf')), 'uk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf')), 'he' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf')), 'mn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf')), 'de' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.de.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.de.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.de.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.de.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.de.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.de.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.de.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.de.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.de.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.de.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.de.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.de.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.de.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.de.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.de.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.de.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.de.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.de.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.de.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.de.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.de.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.de.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.de.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.de.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.de.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.de.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.de.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.de.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.de.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.de.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.de.yml')), 'fr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.fr.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.fr.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.fr.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.fr.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.fr.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.fr.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.fr.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.fr.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.fr.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.fr.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.fr.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.fr.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.fr.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.fr.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.fr.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.fr.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.fr.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.fr.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.fr.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.fr.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.fr.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.fr.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.fr.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.fr.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.fr.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.fr.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.fr.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.fr.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.fr.yml'), 32 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.fr.yml'), 33 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.fr.yml')), 'lb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf')), 'sl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf')), 'zh_TW' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf')), 'hu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf')), 'lv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf')), 'ua' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf')), 'pt_PT' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf'), 1 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.pt_PT.yml'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.pt_PT.yml'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.pt_PT.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.pt_PT.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.pt_PT.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.pt_PT.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.pt_PT.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.pt_PT.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.pt_PT.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.pt_PT.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.pt_PT.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.pt_PT.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.pt_PT.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.pt_PT.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.pt_PT.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.pt_PT.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.pt_PT.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.pt_PT.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.pt_PT.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.pt_PT.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.pt_PT.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.pt_PT.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.pt_PT.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.pt_PT.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.pt_PT.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.pt_PT.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.pt_PT.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.pt_PT.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.pt_PT.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.pt_PT.yml'), 31 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.pt_PT.yml')), 'zh' => array(0 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/jsmessages.zh.yml'), 1 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/MeasureBundle/Resources/translations/messages.zh.yml'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/translations/validators.zh.yml'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/translations/jsmessages.zh.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/jsmessages.zh.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/FilterBundle/Resources/translations/messages.zh.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/config.zh.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/translations/messages.zh.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/translations/messages.zh.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/jsmessages.zh.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/translations/messages.zh.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/jsmessages.zh.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/translations/messages.zh.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/jsmessages.zh.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/translations/messages.zh.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/measures.zh.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/validators.zh.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/translations/messages.zh.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/jsmessages.zh.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/translations/messages.zh.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/jsmessages.zh.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/validators.zh.yml'), 22 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/translations/messages.zh.yml'), 23 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/jsmessages.zh.yml'), 24 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/validators.zh.yml'), 25 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/translations/messages.zh.yml'), 26 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/jsmessages.zh.yml'), 27 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CommentBundle/Resources/translations/messages.zh.yml'), 28 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ConnectorBundle/Resources/translations/messages.zh.yml'), 29 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/validators.zh.yml'), 30 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/LocalizationBundle/Resources/translations/messages.zh.yml')))), array());
        $instance->setFallbackLocales(array(0 => 'en'));
        return $instance;
    }
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator'), $this->get('request_stack'));
    }
    protected function getTwigService()
    {
        $a = $this->get('request_stack');
        $b = $this->get('fragment.handler');
        $c = new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($a);
        $d = new \Symfony\Bridge\Twig\AppVariable();
        $d->setEnvironment('dev');
        $d->setDebug(false);
        if ($this->has('security.token_storage')) {
            $d->setTokenStorage($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->has('request_stack')) {
            $d->setRequestStack($a);
        }
        $d->setContainer($this);
        $this->services['twig'] = $instance = new \Twig_Environment($this->get('twig.loader'), array('exception_controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction', 'debug' => false, 'strict_variables' => false, 'form_themes' => array(0 => 'form_div_layout.html.twig', 1 => 'PimUIBundle:Form:pim-fields.html.twig'), 'autoescape' => 'filename', 'cache' => (__DIR__.'/twig'), 'charset' => 'UTF-8', 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));
        $instance->addExtension($this->get('twig.extension.intl'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension($this->get('security.logout_url_generator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension($this->get('assets.packages'), $c));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\ActionsExtension($b));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(NULL, $this->targetDirs[2], 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('router')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE), false));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension($b));
        $instance->addExtension($c);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig', 1 => 'PimUIBundle:Form:pim-fields.html.twig', 2 => 'LiipImagineBundle:Form:form_div_layout.html.twig')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE))));
        $instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('assetic.asset_factory'), $this->get('templating.name_parser'), false, array(), array(0 => 'OroAsseticBundle', 1 => 'OroNavigationBundle', 2 => 'PimUserBundle', 3 => 'PimUIBundle', 4 => 'PimCatalogBundle', 5 => 'PimEnrichBundle', 6 => 'PimNotificationBundle'), new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerExtension($this->get('jms_serializer')));
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension($this->get('knp_menu.helper')));
        $instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension($this->get('liip_imagine.cache.manager')));
        $instance->addExtension($this->get('oro_assetic.twig.extension'));
        $instance->addExtension($this->get('oro_config.twig.config_extension'));
        $instance->addExtension($this->get('oro_datagrid.twig.metadata'));
        $instance->addExtension($this->get('oro_filter.twig.extension.render_layout'));
        $instance->addExtension($this->get('oro_filter.twig.extension.render_header'));
        $instance->addExtension($this->get('oro_menu.twig.extension'));
        $instance->addExtension($this->get('oro_navigation.title_service.twig.extension'));
        $instance->addExtension($this->get('oro_navigation.twig.hash_nav_extension'));
        $instance->addExtension($this->get('oro_requirejs.twig.requirejs_extension'));
        $instance->addExtension($this->get('oro_security.twig.security_extension'));
        $instance->addExtension($this->get('twig.extension.jsformvalidation'));
        $instance->addExtension($this->get('pim_user.twig.acl_groups_extension'));
        $instance->addExtension($this->get('pim_analytics.twig.update_extension'));
        $instance->addExtension($this->get('pim_ui.twig.ui_extension'));
        $instance->addExtension(new \Pim\Bundle\UIBundle\Twig\StyleExtension());
        $instance->addExtension(new \Pim\Bundle\UIBundle\Twig\LoadingMessageExtension($this->get('file_locator'), '@PimUIBundle/Resources/config/loading_messages.txt'));
        $instance->addExtension($this->get('pim_ui.twig.ceil_extension'));
        $instance->addExtension($this->get('pim_ui.twig.md5_extension'));
        $instance->addExtension($this->get('pim_ui.twig.date_extension'));
        $instance->addExtension($this->get('pim_notification.twig.notification_extension'));
        $instance->addExtension($this->get('pim_datagrid.twig.filter_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.locale_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.category_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.view_element_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.attribute_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.object_class_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.version_extension'));
        $instance->addExtension($this->get('pim_enrich.twig.translations_extension'));
        $instance->addExtension($this->get('pim_datagrid.twig.image_extension'));
        $instance->addExtension($this->get('pim_localization.twig.locale_extension'));
        $instance->addExtension($this->get('pim_localization.twig.attribute_option_extension'));
        $instance->addExtension($this->get('pim_localization.twig.attribute_extension'));
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\DumpExtension($this->get('var_dumper.cloner')));
        $instance->addGlobal('app', $d);
        $instance->addGlobal('bap', array('layout' => 'PimEnrichBundle::base.html.twig', 'start_route' => 'oro_default'));
        $instance->addGlobal('ws', array('port' => 8080, 'host' => '127.0.0.1'));
        $instance->addGlobal('uservoice_key', NULL);
        call_user_func(array(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','), 'configure'), $instance);
        return $instance;
    }
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController($this->get('twig'), false);
    }
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController($this->get('http_kernel'), 'FOS\\RestBundle\\Controller\\ExceptionController::showAction');
    }
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('FOS\\RestBundle\\Controller\\ExceptionController::showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTwig_Extension_IntlService()
    {
        return $this->services['twig.extension.intl'] = new \Twig_Extensions_Extension_Intl();
    }
    protected function getTwig_Extension_JsformvalidationService()
    {
        return $this->services['twig.extension.jsformvalidation'] = new \Pim\Bundle\JsFormValidationBundle\Twig\Extension\JsFormValidationTwigExtension($this);
    }
    protected function getTwig_LoaderService()
    {
        $this->services['twig.loader'] = $instance = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($this->get('templating.locator'), $this->get('templating.name_parser'));
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), 'Framework');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), 'Security');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views'), 'Twig');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath(($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/views'), 'Doctrine');
        $instance->addPath(($this->targetDirs[3].'/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/views'), 'LiipImagine');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/AsseticBundle/Resources/views'), 'OroAssetic');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/ConfigBundle/Resources/views'), 'OroConfig');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/FilterBundle/Resources/views'), 'OroFilter');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/views'), 'OroNavigation');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/RequireJSBundle/Resources/views'), 'OroRequireJS');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/TranslationBundle/Resources/views'), 'OroTranslation');
        $instance->addPath(($this->targetDirs[3].'/vendor/apy/jsfv-bundle/APY/JsFormValidationBundle/Resources/views'), 'APYJsFormValidation');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/views'), 'AkeneoBatch');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NavigationBundle/Resources/views'), 'PimNavigation');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/views'), 'PimUser');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/JsFormValidationBundle/Resources/views'), 'PimJsFormValidation');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/AnalyticsBundle/Resources/views'), 'PimAnalytics');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DashboardBundle/Resources/views'), 'PimDashboard');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UIBundle/Resources/views'), 'PimUI');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/views'), 'PimNotification');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/views'), 'PimCatalog');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/views'), 'PimDataGrid');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/ImportExportBundle/Resources/views'), 'PimImportExport');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/VersioningBundle/Resources/views'), 'PimVersioning');
        $instance->addPath(($this->targetDirs[2].'/Resources/PimEnrichBundle/views'), 'PimEnrich');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/views'), 'PimEnrich');
        $instance->addPath(($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/PdfGeneratorBundle/Resources/views'), 'PimPdfGenerator');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views'), 'WebProfiler');
        $instance->addPath(($this->targetDirs[3].'/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/views'), 'SensioDistribution');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views'), 'Debug');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'));
        $instance->addPath(($this->targetDirs[3].'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));
        return $instance;
    }
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig_Profiler_Profile();
    }
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('ThisTokenIsNotSoSecretChangeIt');
    }
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();
        $instance->setConstraintValidatorFactory($this->get('validator.validator_factory'));
        $instance->setTranslator($this->get('translator'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml')));
        $instance->addYamlMappings(array(0 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/NavigationBundle/Resources/config/validation.yml'), 1 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Oro/Bundle/UserBundle/Resources/config/validation.yml'), 2 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/validation/jobinstance.yml'), 3 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/validation/itemstep.yml'), 4 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/validation/job.yml'), 5 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/BatchBundle/Resources/config/validation/stepexecution.yml'), 6 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Akeneo/Bundle/FileStorageBundle/Resources/config/validation/fileInfo.yml'), 7 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/UserBundle/Resources/config/validation.yml'), 8 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/NotificationBundle/Resources/config/validation/notification.yml'), 9 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/group.yml'), 10 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/family.yml'), 11 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/category.yml'), 12 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/attribute.yml'), 13 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/completeness.yml'), 14 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/grouptype.yml'), 15 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/associationType.yml'), 16 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/productvalue.yml'), 17 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/channel.yml'), 18 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/product.yml'), 19 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/CatalogBundle/Resources/config/validation/attributegroup.yml'), 20 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/DataGridBundle/Resources/config/validation/datagrid_view.yml'), 21 => ($this->targetDirs[3].'/vendor/akeneo/pim-community-dev/src/Pim/Bundle/EnrichBundle/Resources/config/validation/validation.yml')));
        $instance->enableAnnotationMapping($this->get('annotation_reader'));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers(array(0 => $this->get('doctrine.orm.validator_initializer')));
        return $instance;
    }
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator($this->get('property_accessor'));
    }
    protected function getVarDumper_CliDumperService()
    {
        return $this->services['var_dumper.cli_dumper'] = new \Symfony\Component\VarDumper\Dumper\CliDumper(NULL, 'UTF-8');
    }
    protected function getVarDumper_ClonerService()
    {
        $this->services['var_dumper.cloner'] = $instance = new \Symfony\Component\VarDumper\Cloner\VarCloner();
        $instance->setMaxItems(2500);
        $instance->setMaxString(-1);
        return $instance;
    }
    protected function getWebProfiler_Controller_ExceptionService()
    {
        return $this->services['web_profiler.controller.exception'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), false);
    }
    protected function getWebProfiler_Controller_ProfilerService()
    {
        return $this->services['web_profiler.controller.profiler'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController($this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), array('data_collector.config' => array(0 => 'config', 1 => '@WebProfiler/Collector/config.html.twig'), 'data_collector.request' => array(0 => 'request', 1 => '@WebProfiler/Collector/request.html.twig'), 'data_collector.ajax' => array(0 => 'ajax', 1 => '@WebProfiler/Collector/ajax.html.twig'), 'data_collector.exception' => array(0 => 'exception', 1 => '@WebProfiler/Collector/exception.html.twig'), 'data_collector.events' => array(0 => 'events', 1 => '@WebProfiler/Collector/events.html.twig'), 'data_collector.logger' => array(0 => 'logger', 1 => '@WebProfiler/Collector/logger.html.twig'), 'data_collector.time' => array(0 => 'time', 1 => '@WebProfiler/Collector/time.html.twig'), 'data_collector.memory' => array(0 => 'memory', 1 => '@WebProfiler/Collector/memory.html.twig'), 'data_collector.router' => array(0 => 'router', 1 => '@WebProfiler/Collector/router.html.twig'), 'data_collector.form' => array(0 => 'form', 1 => '@WebProfiler/Collector/form.html.twig'), 'data_collector.translation' => array(0 => 'translation', 1 => '@WebProfiler/Collector/translation.html.twig'), 'data_collector.twig' => array(0 => 'twig', 1 => '@WebProfiler/Collector/twig.html.twig'), 'data_collector.security' => array(0 => 'security', 1 => '@Security/Collector/security.html.twig'), 'swiftmailer.data_collector' => array(0 => 'swiftmailer', 1 => '@Swiftmailer/Collector/swiftmailer.html.twig'), 'data_collector.doctrine' => array(0 => 'db', 1 => 'DoctrineBundle:Collector:db'), 'pim_catalog.data_collector.database' => array(0 => 'database', 1 => 'PimCatalogBundle:Collector:database'), 'data_collector.dump' => array(0 => 'dump', 1 => '@Debug/Profiler/dump.html.twig')), 'bottom');
    }
    protected function getWebProfiler_Controller_RouterService()
    {
        return $this->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getWebProfiler_DebugToolbarService()
    {
        return $this->services['web_profiler.debug_toolbar'] = new \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener($this->get('twig'), false, 2, 'bottom', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), '^/(app(_[\\w]+)?\\.php/)?_wdt');
    }
    protected function synchronizeRequestService()
    {
        if ($this->initialized('oro_datagrid.datagrid.request_params')) {
                    if ($this->has('request')) {
    $this->get('oro_datagrid.datagrid.request_params')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('oro_user.form.handler.acl_role')) {
            $this->get('oro_user.form.handler.acl_role')->setRequest($this->get('request'));
        }
        if ($this->initialized('pim_datagrid.datagrid.configuration.product.context_configurator')) {
                    if ($this->has('request')) {
    $this->get('pim_datagrid.datagrid.configuration.product.context_configurator')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_datagrid.datagrid.configuration.product.group_columns_configurator')) {
                    if ($this->has('request')) {
    $this->get('pim_datagrid.datagrid.configuration.product.group_columns_configurator')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_datagrid.datagrid.request.parameters_extractor')) {
                    if ($this->has('request')) {
    $this->get('pim_datagrid.datagrid.request.parameters_extractor')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_enrich.event_listener.product_grid_after_listener')) {
                    if ($this->has('request')) {
    $this->get('pim_enrich.event_listener.product_grid_after_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_enrich.event_listener.product_group_grid_after_listener')) {
                    if ($this->has('request')) {
    $this->get('pim_enrich.event_listener.product_group_grid_after_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_enrich.event_listener.product_variant_group_grid_after_listener')) {
                    if ($this->has('request')) {
    $this->get('pim_enrich.event_listener.product_variant_group_grid_after_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('pim_enrich.event_listener.association_product_grid_after_listener')) {
                    if ($this->has('request')) {
    $this->get('pim_enrich.event_listener.association_product_grid_after_listener')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
    }
    protected function getAkeneoStorageUtils_EventSubscriber_ResolveTargetRepositoryService()
    {
        $this->services['akeneo_storage_utils.event_subscriber.resolve_target_repository'] = $instance = new \Akeneo\Bundle\StorageUtilsBundle\EventSubscriber\ResolveTargetRepositorySubscriber();
        $instance->addResolveTargetRepository('Akeneo\\Component\\FileStorage\\Model\\FileInfo', 'Akeneo\\Bundle\\FileStorageBundle\\Doctrine\\ORM\\Repository\\FileInfoRepository');
        $instance->addResolveTargetRepository('Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem', 'Oro\\Bundle\\NavigationBundle\\Entity\\Repository\\HistoryItemRepository');
        $instance->addResolveTargetRepository('Oro\\Bundle\\UserBundle\\Entity\\Role', 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\RoleRepository');
        $instance->addResolveTargetRepository('Oro\\Bundle\\UserBundle\\Entity\\Group', 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\GroupRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\UserBundle\\Entity\\User', 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\UserRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification', 'Pim\\Bundle\\NotificationBundle\\Entity\\Repository\\UserNotificationRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AssociationTypeRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeGroupRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeOptionRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeRequirementRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Category', 'Akeneo\\Bundle\\ClassificationBundle\\Doctrine\\ORM\\Repository\\CategoryRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Channel', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ChannelRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Currency', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\CurrencyRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Family', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\FamilyRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Group', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\GroupRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\GroupType', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\GroupTypeRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\Locale', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\LocaleRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductTemplateRepository');
        $instance->addResolveTargetRepository('Pim\\Component\\Catalog\\Model\\Product', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductRepository');
        $instance->addResolveTargetRepository('Pim\\Component\\Catalog\\Model\\Association', 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AssociationRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView', 'Pim\\Bundle\\DataGridBundle\\Repository\\DatagridViewRepository');
        $instance->addResolveTargetRepository('Akeneo\\Component\\Batch\\Model\\JobInstance', 'Pim\\Bundle\\ImportExportBundle\\Entity\\Repository\\JobInstanceRepository');
        $instance->addResolveTargetRepository('Akeneo\\Component\\Batch\\Model\\JobExecution', 'Pim\\Bundle\\ImportExportBundle\\Entity\\Repository\\JobExecutionRepository');
        $instance->addResolveTargetRepository('Akeneo\\Component\\Versioning\\Model\\Version', 'Pim\\Bundle\\VersioningBundle\\Doctrine\\ORM\\VersionRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit', 'Pim\\Bundle\\EnrichBundle\\Entity\\Repository\\SequentialEditRepository');
        $instance->addResolveTargetRepository('Pim\\Bundle\\CommentBundle\\Entity\\Comment', 'Pim\\Bundle\\CommentBundle\\Repository\\CommentRepository');
        return $instance;
    }
    protected function getAssetic_AssetFactoryService()
    {
        $this->services['assetic.asset_factory'] = $instance = new \Symfony\Bundle\AsseticBundle\Factory\AssetFactory($this->get('kernel'), $this, $this->getParameterBag(), ($this->targetDirs[2].'/../web'), false);
        $instance->addWorker(new \Assetic\Factory\Worker\EnsureFilterWorker('/\\.less$/', $this->get('assetic.filter.lessphp')));
        return $instance;
    }
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }
    protected function getDoctrine_Orm_Listeners_ResolveTargetEntityService()
    {
        $this->services['doctrine.orm.listeners.resolve_target_entity'] = $instance = new \Doctrine\ORM\Tools\ResolveTargetEntityListener();
        $instance->addResolveTargetEntity('placeholder', 'placeholder', array());
        $instance->addResolveTargetEntity('Akeneo\\Component\\FileStorage\\Model\\FileInfoInterface', 'Akeneo\\Component\\FileStorage\\Model\\FileInfo', array());
        $instance->addResolveTargetEntity('Pim\\Bundle\\UserBundle\\Entity\\UserInterface', 'Pim\\Bundle\\UserBundle\\Entity\\User', array());
        $instance->addResolveTargetEntity('Symfony\\Component\\Security\\Core\\User\\UserInterface', 'Pim\\Bundle\\UserBundle\\Entity\\User', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AssociationInterface', 'Pim\\Component\\Catalog\\Model\\Association', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AssociationTypeInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeOptionInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeOptionValueInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOptionValue', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeGroupInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeRequirementInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\GroupInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Group', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\GroupTypeInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupType', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\CompletenessInterface', 'Pim\\Component\\Catalog\\Model\\Completeness', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\LocaleInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Locale', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\MetricInterface', 'Pim\\Component\\Catalog\\Model\\Metric', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ProductInterface', 'Pim\\Component\\Catalog\\Model\\Product', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ProductPriceInterface', 'Pim\\Component\\Catalog\\Model\\ProductPrice', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ProductValueInterface', 'Pim\\Component\\Catalog\\Model\\ProductValue', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\CategoryInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Category', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\CurrencyInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Currency', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\FamilyInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Family', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ChannelInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\Channel', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ProductTemplateInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\CategoryTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\CategoryTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\FamilyTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\FamilyTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeGroupTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroupTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AttributeTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\AssociationTypeTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationTypeTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\GroupTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\GroupTypeTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupTypeTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Component\\Catalog\\Model\\ChannelTranslationInterface', 'Pim\\Bundle\\CatalogBundle\\Entity\\ChannelTranslation', array());
        $instance->addResolveTargetEntity('Pim\\Bundle\\CommentBundle\\Model\\CommentInterface', 'Pim\\Bundle\\CommentBundle\\Entity\\Comment', array());
        return $instance;
    }
    protected function getFosRest_Exception_CodesMapService()
    {
        return $this->services['fos_rest.exception.codes_map'] = new \FOS\RestBundle\Util\ExceptionValueMap(array('Pim\\Bundle\\EnrichBundle\\Exception\\DeleteException' => 'HTTP_CONFLICT'));
    }
    protected function getFosRest_Request_ParamFetcher_ReaderService()
    {
        return $this->services['fos_rest.request.param_fetcher.reader'] = new \FOS\RestBundle\Request\ParamReader($this->get('annotation_reader'));
    }
    protected function getFosRest_Serializer_JmsHandlerRegistryService()
    {
        return $this->services['fos_rest.serializer.jms_handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(1 => array('Exception' => array('json' => array(0 => 'fos_rest.serializer.exception_normalizer.jms', 1 => 'serializeToJson'), 'xml' => array(0 => 'fos_rest.serializer.exception_normalizer.jms', 1 => 'serializeToXml')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml'))), 2 => array('DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap')))));
    }
    protected function getJmsSerializer_UnserializeObjectConstructorService()
    {
        return $this->services['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor();
    }
    protected function getKnpMenu_HelperService()
    {
        return $this->services['knp_menu.helper'] = new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'));
    }
    protected function getOroSecurity_Acl_ExtensionSelectorService()
    {
        $a = new \Oro\Bundle\SecurityBundle\Acl\Domain\ObjectIdAccessor();
        $this->services['oro_security.acl.extension_selector'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Extension\AclExtensionSelector($a);
        $instance->addAclExtension(new \Oro\Bundle\SecurityBundle\Acl\Extension\ActionAclExtension($this->get('oro_security.action_metadata_provider')));
        $instance->addAclExtension(new \Oro\Bundle\SecurityBundle\Acl\Extension\EntityAclExtension($a, $this->get('oro_security.acl.entity_class_resolver')));
        return $instance;
    }
    protected function getOroSecurity_Acl_PermissionGrantingStrategyService()
    {
        $this->services['oro_security.acl.permission_granting_strategy'] = $instance = new \Oro\Bundle\SecurityBundle\Acl\Domain\PermissionGrantingStrategy();
        $instance->setContext($this->get('oro_security.acl.voter_link'));
        return $instance;
    }
    protected function getOroSecurity_ActionMetadataProviderService()
    {
        return $this->services['oro_security.action_metadata_provider'] = new \Oro\Bundle\SecurityBundle\Metadata\ActionMetadataProvider($this->get('oro_security.acl.annotation_provider'), new \Doctrine\Common\Cache\FilesystemCache((__DIR__.'/oro_acl_annotations')));
    }
    protected function getOroUser_Security_ProviderService()
    {
        return $this->services['oro_user.security.provider'] = new \Oro\Bundle\UserBundle\Security\UserProvider($this->get('oro_user.manager'));
    }
    protected function getPimCatalog_Comparator_RegistryService()
    {
        $this->services['pim_catalog.comparator.registry'] = $instance = new \Pim\Component\Catalog\Comparator\ComparatorRegistry();
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\FileComparator(array(0 => 'pim_catalog_file', 1 => 'pim_catalog_image'), $this->get('akeneo_file_storage.repository.file_info')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\PricesComparator(array(0 => 'pim_catalog_price_collection')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\MetricComparator(array(0 => 'pim_catalog_metric')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\OptionComparator(array(0 => 'pim_catalog_simpleselect', 1 => 'pim_reference_data_simpleselect')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\OptionsComparator(array(0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\NumberComparator(array(0 => 'pim_catalog_number')), 0);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\BooleanComparator(array(0 => 'pim_catalog_boolean')), -100);
        $instance->addAttributeComparator(new \Pim\Component\Catalog\Comparator\Attribute\ScalarComparator(array(0 => 'pim_catalog_date', 1 => 'pim_catalog_identifier', 2 => 'pim_catalog_text', 3 => 'pim_catalog_textarea')), -128);
        $instance->addFieldComparator(new \Pim\Component\Catalog\Comparator\Field\BooleanComparator(array(0 => 'enabled')), 0);
        $instance->addFieldComparator(new \Pim\Component\Catalog\Comparator\Field\ArrayComparator(array(0 => 'categories', 1 => 'groups', 2 => 'associations')), 0);
        $instance->addFieldComparator(new \Pim\Component\Catalog\Comparator\Field\ScalarComparator(array(0 => 'family', 1 => 'variant_group')), -128);
        return $instance;
    }
    protected function getPimCatalog_Validator_ConstraintGuesser_ChainedAttributeService()
    {
        $this->services['pim_catalog.validator.constraint_guesser.chained_attribute'] = $instance = new \Pim\Component\Catalog\Validator\ChainedAttributeConstraintGuesser();
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\EmailGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\FileGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\LengthGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\NotBlankGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\DateGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\NumericGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\StringGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\BooleanGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\RangeGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\RegexGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\NotDecimalGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\UrlGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\UniqueValueGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\PriceCollectionGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\MetricGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\CurrencyGuesser());
        $instance->addConstraintGuesser(new \Pim\Component\Catalog\Validator\ConstraintGuesser\IdentifierGuesser());
        return $instance;
    }
    protected function getPimCatalog_Validator_Helper_AttributeService()
    {
        return $this->services['pim_catalog.validator.helper.attribute'] = new \Pim\Component\Catalog\Validator\AttributeValidatorHelper($this->get('pim_catalog.repository.locale'), $this->get('pim_catalog.repository.channel'));
    }
    protected function getPimVersioning_Serializer_Normalizer_Flat_ProductValueService()
    {
        return $this->services['pim_versioning.serializer.normalizer.flat.product_value'] = new \Pim\Bundle\VersioningBundle\Normalizer\Flat\ProductValueNormalizer();
    }
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }
    protected function getSecurity_Access_DecisionManagerService()
    {
        $a = $this->get('security.role_hierarchy');
        $b = $this->get('security.authentication.trust_resolver');
        return $this->services['security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(0 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter($a), 1 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $b, $a), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($b), 3 => $this->get('security.acl.voter.basic_permissions')), 'affirmative', false, true);
    }
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.token_storage'), $this->get('security.access.decision_manager'), $this->get('security.access_map'), $this->get('security.authentication.manager'));
    }
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/'), array(0 => 'ROLE_ADMIN'), NULL);
        return $instance;
    }
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = new \Symfony\Component\Security\Core\User\UserChecker();
        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5873c159bed6d5.63720088'), 1 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5873c159bed6d5.63720088'), 2 => new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider($this->get('security.user.provider.concrete.chain_provider'), $a, 'main', $this->get('security.encoder_factory'), true), 3 => new \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider($a, 'ThisTokenIsNotSoSecretChangeIt', 'main')), true);
        $instance->setEventDispatcher($this->get('event_dispatcher'));
        return $instance;
    }
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener($this->get('security.access_map'), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->registerListener('main', 'oro_user_security_logout', 'logout', '_csrf_token', NULL);
        return $instance;
    }
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array());
    }
    protected function getSecurity_User_Provider_Concrete_ChainProviderService()
    {
        return $this->services['security.user.provider.concrete.chain_provider'] = new \Symfony\Component\Security\Core\User\ChainUserProvider(array(0 => $this->get('oro_user.security.provider')));
    }
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }
    protected function getSwiftmailer_Mailer_Default_Transport_EventdispatcherService()
    {
        return $this->services['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher();
    }
    protected function getTemplating_Engine_PhpService()
    {
        $this->services['templating.engine.php'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\PhpEngine($this->get('templating.name_parser'), $this, $this->get('templating.loader'), $this->get('templating.globals'));
        $instance->setCharset('UTF-8');
        $instance->setHelpers(array('assets' => 'templating.helper.assets', 'router' => 'templating.helper.router', 'slots' => 'templating.helper.slots', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'templating.helper.security', 'assetic' => 'assetic.helper.static', 'jms_serializer' => 'jms_serializer.templating.helper.serializer', 'imagine' => 'liip_imagine.templating.helper'));
        return $instance;
    }
    protected function getTemplating_Engine_TwigService()
    {
        return $this->services['templating.engine.twig'] = new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), $this->get('templating.locator'));
    }
    protected function getTemplating_LocatorService()
    {
        return $this->services['templating.locator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), __DIR__);
    }
    protected function getValidator_ValidatorFactoryService()
    {
        return $this->services['validator.validator_factory'] = new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password', 'doctrine.orm.validator.unique' => 'doctrine.orm.validator.unique', 'akeneo_job_instance_validator' => 'akeneo_batch.validator.job_instance', 'pim_localization_number_format' => 'pim_catalog.localization.validator.constraint.number_format', 'pim_localization_date_format' => 'pim_catalog.localization.validator.constraint.date_format', 'pim_metric_validator' => 'pim_catalog.validator.constraint.valid_metric', 'pim_currency_validator' => 'pim_catalog.validator.constraint.currency', 'pim_single_identifier_attribute_validator' => 'pim_catalog.validator.constraint.single_identifier', 'pim_unique_variant_axis_validator' => 'pim_catalog.validator.constraint.unique_variant_axis', 'pim_unique_variant_group_validator' => 'pim_catalog.validator.constraint.unique_variant_group', 'pim_unique_value_validator' => 'pim_catalog.validator.constraint.unique_value', 'pim_immutable_validator' => 'pim_catalog.validator.constraint.immutable', 'pim_variant_group_values_validator' => 'pim_catalog.validator.constraint.variant_group_values', 'pim_variant_group_axis_validator' => 'pim_catalog.validator.constraint.variant_group_axis', 'pim_has_variant_axes_validator' => 'pim_catalog.validator.constraint.has_variant_axes', 'pim_family_requirements_validator' => 'pim_catalog.validator.constraint.family_requirements', 'pim_scopable_value_validator' => 'pim_catalog.validator.constraint.scopable_value', 'pim_localizable_value_validator' => 'pim_catalog.validator.constraint.localizable_value', 'pim_attribute_type_for_option_validator' => 'pim_catalog.validator.constraint.attribute_type_for_option', 'pim_is_reference_data_configured_validator' => 'pim_catalog.validator.constraint.is_reference_data_configured', 'pim_unique_variant_group_type_validator' => 'pim_catalog.validator.constraint.unique_variant_group_type', 'filter_data_validator' => 'pim_import_export.validator.constraints.filter_data_validator', 'filter_structure_locale_validator' => 'pim_import_export.validator.constraints.filter_structure_locale_validator', 'filter_structure_attribute_validator' => 'pim_import_export.validator.constraints.filter_structure_attribute_validator', 'channel_validator' => 'pim_connector.validator.constraints.channel_validator'));
    }
    public function getParameter($name)
    {
        $name = strtolower($name);
        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        return $this->parameters[$name];
    }
    public function hasParameter($name)
    {
        $name = strtolower($name);
        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters);
    }
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $this->parameterBag = new FrozenParameterBag($this->parameters);
        }
        return $this->parameterBag;
    }
    protected function getDefaultParameters()
    {
        return array(
            'kernel.root_dir' => $this->targetDirs[2],
            'kernel.environment' => 'dev',
            'kernel.debug' => false,
            'kernel.name' => 'app',
            'kernel.cache_dir' => __DIR__,
            'kernel.logs_dir' => ($this->targetDirs[2].'/logs'),
            'kernel.bundles' => array(
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle',
                'EscapeWSSEAuthenticationBundle' => 'Escape\\WSSEAuthenticationBundle\\EscapeWSSEAuthenticationBundle',
                'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'OroAsseticBundle' => 'Oro\\Bundle\\AsseticBundle\\OroAsseticBundle',
                'OroConfigBundle' => 'Oro\\Bundle\\ConfigBundle\\OroConfigBundle',
                'OroDataGridBundle' => 'Oro\\Bundle\\DataGridBundle\\OroDataGridBundle',
                'OroFilterBundle' => 'Oro\\Bundle\\FilterBundle\\OroFilterBundle',
                'OroNavigationBundle' => 'Oro\\Bundle\\NavigationBundle\\OroNavigationBundle',
                'OroRequireJSBundle' => 'Oro\\Bundle\\RequireJSBundle\\OroRequireJSBundle',
                'OroSecurityBundle' => 'Oro\\Bundle\\SecurityBundle\\OroSecurityBundle',
                'OroTranslationBundle' => 'Oro\\Bundle\\TranslationBundle\\OroTranslationBundle',
                'OroUserBundle' => 'Oro\\Bundle\\UserBundle\\OroUserBundle',
                'APYJsFormValidationBundle' => 'APY\\JsFormValidationBundle\\APYJsFormValidationBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle',
                'AkeneoMeasureBundle' => 'Akeneo\\Bundle\\MeasureBundle\\AkeneoMeasureBundle',
                'AkeneoBatchBundle' => 'Akeneo\\Bundle\\BatchBundle\\AkeneoBatchBundle',
                'AkeneoBufferBundle' => 'Akeneo\\Bundle\\BufferBundle\\AkeneoBufferBundle',
                'AkeneoStorageUtilsBundle' => 'Akeneo\\Bundle\\StorageUtilsBundle\\AkeneoStorageUtilsBundle',
                'AkeneoFileStorageBundle' => 'Akeneo\\Bundle\\FileStorageBundle\\AkeneoFileStorageBundle',
                'PimNavigationBundle' => 'Pim\\Bundle\\NavigationBundle\\PimNavigationBundle',
                'PimFilterBundle' => 'Pim\\Bundle\\FilterBundle\\PimFilterBundle',
                'PimUserBundle' => 'Pim\\Bundle\\UserBundle\\PimUserBundle',
                'PimJsFormValidationBundle' => 'Pim\\Bundle\\JsFormValidationBundle\\PimJsFormValidationBundle',
                'PimAnalyticsBundle' => 'Pim\\Bundle\\AnalyticsBundle\\PimAnalyticsBundle',
                'PimDashboardBundle' => 'Pim\\Bundle\\DashboardBundle\\PimDashboardBundle',
                'PimInstallerBundle' => 'Pim\\Bundle\\InstallerBundle\\PimInstallerBundle',
                'PimUIBundle' => 'Pim\\Bundle\\UIBundle\\PimUIBundle',
                'PimNotificationBundle' => 'Pim\\Bundle\\NotificationBundle\\PimNotificationBundle',
                'PimCatalogBundle' => 'Pim\\Bundle\\CatalogBundle\\PimCatalogBundle',
                'PimDataGridBundle' => 'Pim\\Bundle\\DataGridBundle\\PimDataGridBundle',
                'PimImportExportBundle' => 'Pim\\Bundle\\ImportExportBundle\\PimImportExportBundle',
                'PimVersioningBundle' => 'Pim\\Bundle\\VersioningBundle\\PimVersioningBundle',
                'PimEnrichBundle' => 'Pim\\Bundle\\EnrichBundle\\PimEnrichBundle',
                'PimCommentBundle' => 'Pim\\Bundle\\CommentBundle\\PimCommentBundle',
                'PimPdfGeneratorBundle' => 'Pim\\Bundle\\PdfGeneratorBundle\\PimPdfGeneratorBundle',
                'PimReferenceDataBundle' => 'Pim\\Bundle\\ReferenceDataBundle\\PimReferenceDataBundle',
                'PimConnectorBundle' => 'Pim\\Bundle\\ConnectorBundle\\PimConnectorBundle',
                'PimLocalizationBundle' => 'Pim\\Bundle\\LocalizationBundle\\PimLocalizationBundle',
                'AkeneoClassificationBundle' => 'Akeneo\\Bundle\\ClassificationBundle\\AkeneoClassificationBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle',
                'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle',
                'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appDevProjectContainer',
            'database_unix_socket' => NULL,
            'mailer_transport' => 'smtp',
            'mailer_host' => 'localhost',
            'mailer_user' => NULL,
            'mailer_password' => NULL,
            'mailer_from_address' => 'no-reply@example.com',
            'mailer_from_name' => 'Akeneo Admin',
            'websocket_host' => '127.0.0.1',
            'websocket_port' => 8080,
            'upload_dir' => ($this->targetDirs[2].'/uploads/product'),
            'archive_dir' => ($this->targetDirs[2].'/archive'),
            'catalog_storage_dir' => ($this->targetDirs[2].'/file_storage/catalog'),
            'tmp_storage_dir' => '/tmp/pim/file_storage',
            'installed' => NULL,
            'installer_data' => 'PimInstallerBundle:icecat_demo_dev',
            'uservoice_key' => NULL,
            'mass_edit_limit' => 1000,
            'max_products_category_removal' => 100,
            'pim_catalog_product_storage_driver' => 'doctrine/orm',
            'doctrine_migrations_dir' => ($this->targetDirs[2].'/../upgrades/schema'),
            'security.exception_listener.class' => 'Pim\\Bundle\\UserBundle\\Security\\FirewallExceptionListener',
            'pim_analytics_update_server_url' => 'https://updates.akeneo.com',
            'database_driver' => 'pdo_mysql',
            'database_host' => 'localhost',
            'database_port' => NULL,
            'database_name' => 'akeneo_pim',
            'database_user' => 'akeneo_pim',
            'database_password' => 'akeneo_pim',
            'locale' => 'en',
            'secret' => 'ThisTokenIsNotSoSecretChangeIt',
            'apy_js_form_validation.yui_js' => false,
            'controller_resolver.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver',
            'controller_name_converter.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser',
            'response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener',
            'streamed_response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener',
            'locale_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener',
            'event_dispatcher.class' => 'Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher',
            'http_kernel.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel',
            'filesystem.class' => 'Symfony\\Component\\Filesystem\\Filesystem',
            'cache_warmer.class' => 'Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate',
            'cache_clearer.class' => 'Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer',
            'file_locator.class' => 'Symfony\\Component\\HttpKernel\\Config\\FileLocator',
            'uri_signer.class' => 'Symfony\\Component\\HttpKernel\\UriSigner',
            'request_stack.class' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
            'fragment.handler.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\LazyLoadingFragmentHandler',
            'fragment.renderer.inline.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer',
            'fragment.renderer.hinclude.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\HIncludeFragmentRenderer',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.renderer.esi.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\EsiFragmentRenderer',
            'fragment.path' => '/_fragment',
            'translator.class' => 'Oro\\Bundle\\TranslationBundle\\Translation\\Translator',
            'translator.identity.class' => 'Symfony\\Component\\Translation\\IdentityTranslator',
            'translator.selector.class' => 'Symfony\\Component\\Translation\\MessageSelector',
            'translation.loader.php.class' => 'Symfony\\Component\\Translation\\Loader\\PhpFileLoader',
            'translation.loader.yml.class' => 'Symfony\\Component\\Translation\\Loader\\YamlFileLoader',
            'translation.loader.xliff.class' => 'Symfony\\Component\\Translation\\Loader\\XliffFileLoader',
            'translation.loader.po.class' => 'Symfony\\Component\\Translation\\Loader\\PoFileLoader',
            'translation.loader.mo.class' => 'Symfony\\Component\\Translation\\Loader\\MoFileLoader',
            'translation.loader.qt.class' => 'Symfony\\Component\\Translation\\Loader\\QtFileLoader',
            'translation.loader.csv.class' => 'Symfony\\Component\\Translation\\Loader\\CsvFileLoader',
            'translation.loader.res.class' => 'Symfony\\Component\\Translation\\Loader\\IcuResFileLoader',
            'translation.loader.dat.class' => 'Symfony\\Component\\Translation\\Loader\\IcuDatFileLoader',
            'translation.loader.ini.class' => 'Symfony\\Component\\Translation\\Loader\\IniFileLoader',
            'translation.loader.json.class' => 'Symfony\\Component\\Translation\\Loader\\JsonFileLoader',
            'translation.dumper.php.class' => 'Symfony\\Component\\Translation\\Dumper\\PhpFileDumper',
            'translation.dumper.xliff.class' => 'Symfony\\Component\\Translation\\Dumper\\XliffFileDumper',
            'translation.dumper.po.class' => 'Symfony\\Component\\Translation\\Dumper\\PoFileDumper',
            'translation.dumper.mo.class' => 'Symfony\\Component\\Translation\\Dumper\\MoFileDumper',
            'translation.dumper.yml.class' => 'Symfony\\Component\\Translation\\Dumper\\YamlFileDumper',
            'translation.dumper.qt.class' => 'Symfony\\Component\\Translation\\Dumper\\QtFileDumper',
            'translation.dumper.csv.class' => 'Symfony\\Component\\Translation\\Dumper\\CsvFileDumper',
            'translation.dumper.ini.class' => 'Symfony\\Component\\Translation\\Dumper\\IniFileDumper',
            'translation.dumper.json.class' => 'Symfony\\Component\\Translation\\Dumper\\JsonFileDumper',
            'translation.dumper.res.class' => 'Symfony\\Component\\Translation\\Dumper\\IcuResFileDumper',
            'translation.extractor.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\PhpExtractor',
            'translation.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\TranslationLoader',
            'translation.extractor.class' => 'Symfony\\Component\\Translation\\Extractor\\ChainExtractor',
            'translation.writer.class' => 'Symfony\\Component\\Translation\\Writer\\TranslationWriter',
            'property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'kernel.secret' => 'ThisTokenIsNotSoSecretChangeIt',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(
            ),
            'kernel.trusted_proxies' => array(
            ),
            'kernel.default_locale' => 'en',
            'session.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Session',
            'session.flashbag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBag',
            'session.attribute_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag',
            'session.storage.metadata_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag',
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.native.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorage',
            'session.storage.php_bridge.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorage',
            'session.storage.mock_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorage',
            'session.handler.native_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\NativeFileSessionHandler',
            'session.handler.write_check.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\WriteCheckSessionHandler',
            'session_listener.class' => 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener',
            'session.storage.options' => array(
                'name' => 'BAPID',
                'gc_maxlifetime' => 3600,
                'gc_probability' => 1,
            ),
            'session.save_path' => (__DIR__.'/sessions'),
            'session.metadata.update_threshold' => '0',
            'security.secure_random.class' => 'Symfony\\Component\\Security\\Core\\Util\\SecureRandom',
            'form.resolved_type_factory.class' => 'Symfony\\Component\\Form\\ResolvedFormTypeFactory',
            'form.registry.class' => 'Symfony\\Component\\Form\\FormRegistry',
            'form.factory.class' => 'Symfony\\Component\\Form\\FormFactory',
            'form.extension.class' => 'Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension',
            'form.type_guesser.validator.class' => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser',
            'form.type_extension.form.request_handler.class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'security.csrf.token_generator.class' => 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator',
            'security.csrf.token_storage.class' => 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage',
            'security.csrf.token_manager.class' => 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManager',
            'templating.engine.delegating.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\DelegatingEngine',
            'templating.name_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateNameParser',
            'templating.filename_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateFilenameParser',
            'templating.cache_warmer.template_paths.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'templating.locator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\TemplateLocator',
            'templating.loader.filesystem.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\FilesystemLoader',
            'templating.loader.cache.class' => 'Symfony\\Component\\Templating\\Loader\\CacheLoader',
            'templating.loader.chain.class' => 'Symfony\\Component\\Templating\\Loader\\ChainLoader',
            'templating.finder.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplateFinder',
            'templating.helper.assets.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\AssetsHelper',
            'templating.helper.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RouterHelper',
            'templating.helper.code.file_link_format' => NULL,
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'twig',
                1 => 'php',
            ),
            'templating.engine.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\PhpEngine',
            'templating.helper.slots.class' => 'Symfony\\Component\\Templating\\Helper\\SlotsHelper',
            'templating.helper.actions.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\ActionsHelper',
            'templating.helper.request.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RequestHelper',
            'templating.helper.session.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\SessionHelper',
            'templating.helper.code.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\CodeHelper',
            'templating.helper.translator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\TranslatorHelper',
            'templating.helper.form.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\FormHelper',
            'templating.helper.stopwatch.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\StopwatchHelper',
            'templating.form.engine.class' => 'Symfony\\Component\\Form\\Extension\\Templating\\TemplatingRendererEngine',
            'templating.form.renderer.class' => 'Symfony\\Component\\Form\\FormRenderer',
            'templating.globals.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\GlobalVariables',
            'templating.helper.form.resources' => array(
                0 => 'FrameworkBundle:Form',
            ),
            'validator.class' => 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface',
            'validator.builder.class' => 'Symfony\\Component\\Validator\\ValidatorBuilderInterface',
            'validator.builder.factory.class' => 'Symfony\\Component\\Validator\\Validation',
            'validator.mapping.cache.apc.class' => 'Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache',
            'validator.mapping.cache.prefix' => '',
            'validator.validator_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Validator\\ConstraintValidatorFactory',
            'validator.expression.class' => 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator',
            'validator.email.class' => 'Symfony\\Component\\Validator\\Constraints\\EmailValidator',
            'validator.translation_domain' => 'validators',
            'validator.api' => '2.5-bc',
            'fragment.listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener',
            'translator.logging' => false,
            'profiler.class' => 'Symfony\\Component\\HttpKernel\\Profiler\\Profiler',
            'profiler_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener',
            'data_collector.config.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ConfigDataCollector',
            'data_collector.request.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector',
            'data_collector.exception.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ExceptionDataCollector',
            'data_collector.events.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\EventDataCollector',
            'data_collector.logger.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\LoggerDataCollector',
            'data_collector.time.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\TimeDataCollector',
            'data_collector.memory.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\MemoryDataCollector',
            'data_collector.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\DataCollector\\RouterDataCollector',
            'form.resolved_type_factory.data_collector_proxy.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Proxy\\ResolvedTypeFactoryDataCollectorProxy',
            'form.type_extension.form.data_collector.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Type\\DataCollectorTypeExtension',
            'data_collector.form.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataCollector',
            'data_collector.form.extractor.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataExtractor',
            'profiler_listener.only_exceptions' => false,
            'profiler_listener.only_master_requests' => false,
            'profiler.storage.dsn' => ('file:'.__DIR__.'/profiler'),
            'profiler.storage.username' => '',
            'profiler.storage.password' => '',
            'profiler.storage.lifetime' => 86400,
            'router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\Router',
            'router.request_context.class' => 'Symfony\\Component\\Routing\\RequestContext',
            'routing.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader',
            'routing.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'routing.loader.xml.class' => 'Symfony\\Component\\Routing\\Loader\\XmlFileLoader',
            'routing.loader.yml.class' => 'Symfony\\Component\\Routing\\Loader\\YamlFileLoader',
            'routing.loader.php.class' => 'Symfony\\Component\\Routing\\Loader\\PhpFileLoader',
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.cache_warmer.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer',
            'router.options.matcher.cache_class' => 'appDevUrlMatcher',
            'router.options.generator.cache_class' => 'appDevUrlGenerator',
            'router_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener',
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => ($this->targetDirs[2].'/config/routing_dev.yml'),
            'router.cache_class_prefix' => 'appDev',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'annotations.reader.class' => 'Doctrine\\Common\\Annotations\\AnnotationReader',
            'annotations.cached_reader.class' => 'Doctrine\\Common\\Annotations\\CachedReader',
            'annotations.file_cache_reader.class' => 'Doctrine\\Common\\Annotations\\FileCacheReader',
            'serializer.class' => 'Symfony\\Component\\Serializer\\Serializer',
            'serializer.encoder.xml.class' => 'Symfony\\Component\\Serializer\\Encoder\\XmlEncoder',
            'serializer.encoder.json.class' => 'Symfony\\Component\\Serializer\\Encoder\\JsonEncoder',
            'serializer.mapping.cache.prefix' => '',
            'debug.debug_handlers_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener',
            'debug.stopwatch.class' => 'Symfony\\Component\\Stopwatch\\Stopwatch',
            'debug.error_handler.throw_at' => 0,
            'security.context.class' => 'Symfony\\Component\\Security\\Core\\SecurityContext',
            'security.user_checker.class' => 'Symfony\\Component\\Security\\Core\\User\\UserChecker',
            'security.encoder_factory.generic.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory',
            'security.encoder.digest.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'security.encoder.plain.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder',
            'security.encoder.pbkdf2.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder',
            'security.encoder.bcrypt.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder',
            'security.user.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider',
            'security.user.provider.in_memory.user.class' => 'Symfony\\Component\\Security\\Core\\User\\User',
            'security.user.provider.chain.class' => 'Symfony\\Component\\Security\\Core\\User\\ChainUserProvider',
            'security.authentication.trust_resolver.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.authentication.manager.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationProviderManager',
            'security.authentication.session_strategy.class' => 'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy',
            'security.access.decision_manager.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager',
            'security.access.simple_role_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter',
            'security.access.authenticated_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter',
            'security.access.role_hierarchy_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleHierarchyVoter',
            'security.access.expression_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter',
            'security.firewall.class' => 'Symfony\\Component\\Security\\Http\\Firewall',
            'security.firewall.map.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap',
            'security.firewall.context.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext',
            'security.matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'security.expression_matcher.class' => 'Symfony\\Component\\HttpFoundation\\ExpressionRequestMatcher',
            'security.role_hierarchy.class' => 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy',
            'security.http_utils.class' => 'Symfony\\Component\\Security\\Http\\HttpUtils',
            'security.validator.user_password.class' => 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator',
            'security.expression_language.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage',
            'security.authentication.retry_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint',
            'security.channel_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener',
            'security.authentication.form_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint',
            'security.authentication.listener.form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener',
            'security.authentication.listener.simple_form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimpleFormAuthenticationListener',
            'security.authentication.listener.simple_preauth.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener',
            'security.authentication.listener.basic.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\BasicAuthenticationListener',
            'security.authentication.basic_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\BasicAuthenticationEntryPoint',
            'security.authentication.listener.digest.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\DigestAuthenticationListener',
            'security.authentication.digest_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\DigestAuthenticationEntryPoint',
            'security.authentication.listener.x509.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\X509AuthenticationListener',
            'security.authentication.listener.anonymous.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener',
            'security.authentication.switchuser_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener',
            'security.logout_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener',
            'security.logout.handler.session.class' => 'Symfony\\Component\\Security\\Http\\Logout\\SessionLogoutHandler',
            'security.logout.handler.cookie_clearing.class' => 'Symfony\\Component\\Security\\Http\\Logout\\CookieClearingLogoutHandler',
            'security.logout.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler',
            'security.access_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AccessListener',
            'security.access_map.class' => 'Symfony\\Component\\Security\\Http\\AccessMap',
            'security.context_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener',
            'security.authentication.provider.dao.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\DaoAuthenticationProvider',
            'security.authentication.provider.simple.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\SimpleAuthenticationProvider',
            'security.authentication.provider.pre_authenticated.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\PreAuthenticatedAuthenticationProvider',
            'security.authentication.provider.anonymous.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\AnonymousAuthenticationProvider',
            'security.authentication.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler',
            'security.authentication.failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler',
            'security.authentication.simple_success_failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\SimpleAuthenticationHandler',
            'security.authentication.provider.rememberme.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\RememberMeAuthenticationProvider',
            'security.authentication.listener.rememberme.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\RememberMeListener',
            'security.rememberme.token.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\InMemoryTokenProvider',
            'security.authentication.rememberme.services.persistent.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\PersistentTokenBasedRememberMeServices',
            'security.authentication.rememberme.services.simplehash.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\TokenBasedRememberMeServices',
            'security.rememberme.response_listener.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener',
            'templating.helper.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\LogoutUrlHelper',
            'templating.helper.security.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\SecurityHelper',
            'twig.extension.logout_url.class' => 'Symfony\\Bridge\\Twig\\Extension\\LogoutUrlExtension',
            'twig.extension.security.class' => 'Symfony\\Bridge\\Twig\\Extension\\SecurityExtension',
            'data_collector.security.class' => 'Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector',
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'security.role_hierarchy.roles' => array(
            ),
            'security.acl.permission_granting_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\PermissionGrantingStrategy',
            'security.acl.voter.class' => 'Symfony\\Component\\Security\\Acl\\Voter\\AclVoter',
            'security.acl.permission.map.class' => 'Symfony\\Component\\Security\\Acl\\Permission\\BasicPermissionMap',
            'security.acl.object_identity_retrieval_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\ObjectIdentityRetrievalStrategy',
            'security.acl.security_identity_retrieval_strategy.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\SecurityIdentityRetrievalStrategy',
            'security.acl.collection_cache.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\AclCollectionCache',
            'security.acl.cache.doctrine.class' => 'Symfony\\Component\\Security\\Acl\\Domain\\DoctrineAclCache',
            'security.acl.dbal.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Dbal\\MutableAclProvider',
            'security.acl.dbal.schema.class' => 'Symfony\\Component\\Security\\Acl\\Dbal\\Schema',
            'security.acl.dbal.schema_listener.class' => 'Symfony\\Bundle\\SecurityBundle\\EventListener\\AclSchemaListener',
            'security.acl.dbal.class_table_name' => 'acl_classes',
            'security.acl.dbal.entry_table_name' => 'acl_entries',
            'security.acl.dbal.oid_table_name' => 'acl_object_identities',
            'security.acl.dbal.oid_ancestors_table_name' => 'acl_object_identity_ancestors',
            'security.acl.dbal.sid_table_name' => 'acl_security_identities',
            'twig.class' => 'Twig_Environment',
            'twig.loader.filesystem.class' => 'Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader',
            'twig.loader.chain.class' => 'Twig_Loader_Chain',
            'templating.engine.twig.class' => 'Symfony\\Bundle\\TwigBundle\\TwigEngine',
            'twig.cache_warmer.class' => 'Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer',
            'twig.extension.trans.class' => 'Symfony\\Bridge\\Twig\\Extension\\TranslationExtension',
            'twig.extension.actions.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\ActionsExtension',
            'twig.extension.code.class' => 'Symfony\\Bridge\\Twig\\Extension\\CodeExtension',
            'twig.extension.routing.class' => 'Symfony\\Bridge\\Twig\\Extension\\RoutingExtension',
            'twig.extension.yaml.class' => 'Symfony\\Bridge\\Twig\\Extension\\YamlExtension',
            'twig.extension.form.class' => 'Symfony\\Bridge\\Twig\\Extension\\FormExtension',
            'twig.extension.httpkernel.class' => 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension',
            'twig.extension.debug.stopwatch.class' => 'Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension',
            'twig.extension.expression.class' => 'Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension',
            'twig.form.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'twig.form.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'twig.translation.extractor.class' => 'Symfony\\Bridge\\Twig\\Translation\\TwigExtractor',
            'twig.exception_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener',
            'twig.controller.exception.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\ExceptionController',
            'twig.controller.preview_error.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\PreviewErrorController',
            'twig.exception_listener.controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
                1 => 'PimUIBundle:Form:pim-fields.html.twig',
                2 => 'LiipImagineBundle:Form:form_div_layout.html.twig',
            ),
            'monolog.logger.class' => 'Symfony\\Bridge\\Monolog\\Logger',
            'monolog.gelf.publisher.class' => 'Gelf\\MessagePublisher',
            'monolog.gelfphp.publisher.class' => 'Gelf\\Publisher',
            'monolog.handler.stream.class' => 'Monolog\\Handler\\StreamHandler',
            'monolog.handler.console.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler',
            'monolog.handler.group.class' => 'Monolog\\Handler\\GroupHandler',
            'monolog.handler.buffer.class' => 'Monolog\\Handler\\BufferHandler',
            'monolog.handler.rotating_file.class' => 'Monolog\\Handler\\RotatingFileHandler',
            'monolog.handler.syslog.class' => 'Monolog\\Handler\\SyslogHandler',
            'monolog.handler.syslogudp.class' => 'Monolog\\Handler\\SyslogUdpHandler',
            'monolog.handler.null.class' => 'Monolog\\Handler\\NullHandler',
            'monolog.handler.test.class' => 'Monolog\\Handler\\TestHandler',
            'monolog.handler.gelf.class' => 'Monolog\\Handler\\GelfHandler',
            'monolog.handler.rollbar.class' => 'Monolog\\Handler\\RollbarHandler',
            'monolog.handler.flowdock.class' => 'Monolog\\Handler\\FlowdockHandler',
            'monolog.handler.browser_console.class' => 'Monolog\\Handler\\BrowserConsoleHandler',
            'monolog.handler.firephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\FirePHPHandler',
            'monolog.handler.chromephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ChromePhpHandler',
            'monolog.handler.debug.class' => 'Symfony\\Bridge\\Monolog\\Handler\\DebugHandler',
            'monolog.handler.swift_mailer.class' => 'Symfony\\Bridge\\Monolog\\Handler\\SwiftMailerHandler',
            'monolog.handler.native_mailer.class' => 'Monolog\\Handler\\NativeMailerHandler',
            'monolog.handler.socket.class' => 'Monolog\\Handler\\SocketHandler',
            'monolog.handler.pushover.class' => 'Monolog\\Handler\\PushoverHandler',
            'monolog.handler.raven.class' => 'Monolog\\Handler\\RavenHandler',
            'monolog.handler.newrelic.class' => 'Monolog\\Handler\\NewRelicHandler',
            'monolog.handler.hipchat.class' => 'Monolog\\Handler\\HipChatHandler',
            'monolog.handler.slack.class' => 'Monolog\\Handler\\SlackHandler',
            'monolog.handler.cube.class' => 'Monolog\\Handler\\CubeHandler',
            'monolog.handler.amqp.class' => 'Monolog\\Handler\\AmqpHandler',
            'monolog.handler.error_log.class' => 'Monolog\\Handler\\ErrorLogHandler',
            'monolog.handler.loggly.class' => 'Monolog\\Handler\\LogglyHandler',
            'monolog.handler.logentries.class' => 'Monolog\\Handler\\LogEntriesHandler',
            'monolog.handler.whatfailuregroup.class' => 'Monolog\\Handler\\WhatFailureGroupHandler',
            'monolog.activation_strategy.not_found.class' => 'Symfony\\Bundle\\MonologBundle\\NotFoundActivationStrategy',
            'monolog.handler.fingers_crossed.class' => 'Monolog\\Handler\\FingersCrossedHandler',
            'monolog.handler.fingers_crossed.error_level_activation_strategy.class' => 'Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy',
            'monolog.handler.filter.class' => 'Monolog\\Handler\\FilterHandler',
            'monolog.handler.mongo.class' => 'Monolog\\Handler\\MongoDBHandler',
            'monolog.mongo.client.class' => 'MongoClient',
            'monolog.handler.elasticsearch.class' => 'Monolog\\Handler\\ElasticSearchHandler',
            'monolog.elastica.client.class' => 'Elastica\\Client',
            'monolog.swift_mailer.handlers' => array(
            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.firephp' => NULL,
                'monolog.handler.main' => NULL,
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.delivery.enabled' => false,
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => 'localhost',
            'swiftmailer.mailer.default.transport.smtp.username' => NULL,
            'swiftmailer.mailer.default.transport.smtp.password' => NULL,
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.spool.default.memory.path' => (__DIR__.'/swiftmailer/spool/default'),
            'swiftmailer.mailer.default.spool.enabled' => true,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.spool.enabled' => true,
            'swiftmailer.delivery.enabled' => false,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'assetic.asset_factory.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\AssetFactory',
            'assetic.asset_manager.class' => 'Assetic\\Factory\\LazyAssetManager',
            'assetic.asset_manager_cache_warmer.class' => 'Symfony\\Bundle\\AsseticBundle\\CacheWarmer\\AssetManagerCacheWarmer',
            'assetic.cached_formula_loader.class' => 'Assetic\\Factory\\Loader\\CachedFormulaLoader',
            'assetic.config_cache.class' => 'Assetic\\Cache\\ConfigCache',
            'assetic.config_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\ConfigurationLoader',
            'assetic.config_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\ConfigurationResource',
            'assetic.coalescing_directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\CoalescingDirectoryResource',
            'assetic.directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\DirectoryResource',
            'assetic.filter_manager.class' => 'Symfony\\Bundle\\AsseticBundle\\FilterManager',
            'assetic.worker.ensure_filter.class' => 'Assetic\\Factory\\Worker\\EnsureFilterWorker',
            'assetic.value_supplier.class' => 'Symfony\\Bundle\\AsseticBundle\\DefaultValueSupplier',
            'assetic.node.paths' => array(
            ),
            'assetic.cache_dir' => (__DIR__.'/assetic'),
            'assetic.bundles' => array(
                0 => 'OroAsseticBundle',
                1 => 'OroNavigationBundle',
                2 => 'PimUserBundle',
                3 => 'PimUIBundle',
                4 => 'PimCatalogBundle',
                5 => 'PimEnrichBundle',
                6 => 'PimNotificationBundle',
            ),
            'assetic.twig_extension.class' => 'Symfony\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'assetic.twig_formula_loader.class' => 'Assetic\\Extension\\Twig\\TwigFormulaLoader',
            'assetic.helper.dynamic.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\DynamicAsseticHelper',
            'assetic.helper.static.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\StaticAsseticHelper',
            'assetic.php_formula_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\AsseticHelperFormulaLoader',
            'assetic.debug' => false,
            'assetic.use_controller' => false,
            'assetic.enable_profiler' => false,
            'assetic.read_from' => ($this->targetDirs[2].'/../web'),
            'assetic.write_to' => ($this->targetDirs[2].'/../web'),
            'assetic.variables' => array(
            ),
            'assetic.java.bin' => '/usr/bin/java',
            'assetic.node.bin' => '/usr/bin/node',
            'assetic.ruby.bin' => '/usr/bin/ruby',
            'assetic.sass.bin' => '/usr/bin/sass',
            'assetic.filter.lessphp.class' => 'Assetic\\Filter\\LessphpFilter',
            'assetic.filter.lessphp.presets' => array(
            ),
            'assetic.filter.lessphp.paths' => array(
            ),
            'assetic.filter.lessphp.formatter' => NULL,
            'assetic.filter.lessphp.preserve_comments' => NULL,
            'assetic.filter.cssrewrite.class' => 'Assetic\\Filter\\CssRewriteFilter',
            'assetic.twig_extension.functions' => array(
            ),
            'sensio_framework_extra.view.guesser.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Templating\\TemplateGuesser',
            'sensio_framework_extra.controller.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener',
            'sensio_framework_extra.routing.loader.annot_dir.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationDirectoryLoader',
            'sensio_framework_extra.routing.loader.annot_file.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationFileLoader',
            'sensio_framework_extra.routing.loader.annot_class.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Routing\\AnnotatedRouteControllerLoader',
            'sensio_framework_extra.converter.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener',
            'sensio_framework_extra.converter.manager.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterManager',
            'sensio_framework_extra.converter.doctrine.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DoctrineParamConverter',
            'sensio_framework_extra.converter.datetime.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DateTimeParamConverter',
            'sensio_framework_extra.view.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(
                'datetime' => array(
                    'class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\DBAL\\Types\\UTCDateTimeType',
                    'commented' => true,
                ),
            ),
            'doctrine.connections' => array(
                'default' => 'doctrine.dbal.default_connection',
                'session' => 'doctrine.dbal.session_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ArrayApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\ORM\\Mapping\\Driver\\DriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.auto_generate_proxy_classes' => false,
            'doctrine.orm.proxy_dir' => (__DIR__.'/doctrine/orm/Proxies'),
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'escape_wsse_authentication.provider.class' => 'Pim\\Bundle\\UserBundle\\Security\\WsseUserProvider',
            'escape_wsse_authentication.listener.class' => 'Oro\\Bundle\\UserBundle\\Security\\WsseAuthListener',
            'escape_wsse_authentication.entry_point.class' => 'Escape\\WSSEAuthenticationBundle\\Security\\Http\\EntryPoint\\EntryPoint',
            'escape_wsse_authentication.encoder.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'escape_wsse_authentication.nonce_cache.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'fos_js_routing.extractor.class' => 'FOS\\JsRoutingBundle\\Extractor\\ExposedRoutesExtractor',
            'fos_js_routing.controller.class' => 'FOS\\JsRoutingBundle\\Controller\\Controller',
            'fos_js_routing.cache_control' => array(
                'enabled' => false,
            ),
            'jms_serializer.form_error_handler.class' => 'JMS\\Serializer\\Handler\\FormErrorHandler',
            'fos_rest.format_listener.rules' => NULL,
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\PhpDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CamelCaseNamingStrategy',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 0,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(
            ),
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'jms_serializer.infer_types_from_doctrine_metadata' => true,
            'knp_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'knp_menu.factory_extension.routing.class' => 'Knp\\Menu\\Integration\\Symfony\\RoutingExtension',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.matcher.class' => 'Knp\\Menu\\Matcher\\Matcher',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(
            ),
            'knp_menu.listener.voters.class' => 'Knp\\Bundle\\MenuBundle\\EventListener\\VoterInitializerListener',
            'knp_menu.voter.router.class' => 'Knp\\Menu\\Matcher\\Voter\\RouteVoter',
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => array(
            ),
            'knp_menu.renderer.twig.template' => 'knp_menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'liip_imagine.filter.configuration.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterConfiguration',
            'liip_imagine.filter.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager',
            'liip_imagine.data.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\DataManager',
            'liip_imagine.cache.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager',
            'liip_imagine.cache.signer.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Signer',
            'liip_imagine.binary.mime_type_guesser.class' => 'Liip\\ImagineBundle\\Binary\\SimpleMimeTypeGuesser',
            'liip_imagine.controller.class' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'liip_imagine.twig.extension.class' => 'Liip\\ImagineBundle\\Templating\\ImagineExtension',
            'liip_imagine.templating.helper.class' => 'Liip\\ImagineBundle\\Templating\\Helper\\ImagineHelper',
            'liip_imagine.gd.class' => 'Imagine\\Gd\\Imagine',
            'liip_imagine.imagick.class' => 'Imagine\\Imagick\\Imagine',
            'liip_imagine.gmagick.class' => 'Imagine\\Gmagick\\Imagine',
            'liip_imagine.filter.loader.relative_resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader',
            'liip_imagine.filter.loader.resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader',
            'liip_imagine.filter.loader.thumbnail.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader',
            'liip_imagine.filter.loader.crop.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'liip_imagine.filter.loader.paste.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader',
            'liip_imagine.filter.loader.watermark.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader',
            'liip_imagine.filter.loader.strip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader',
            'liip_imagine.filter.loader.background.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader',
            'liip_imagine.filter.loader.upscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader',
            'liip_imagine.filter.loader.auto_rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\AutoRotateFilterLoader',
            'liip_imagine.filter.loader.rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RotateFilterLoader',
            'liip_imagine.filter.loader.interlace.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\InterlaceFilterLoader',
            'liip_imagine.binary.loader.filesystem.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader',
            'liip_imagine.binary.loader.stream.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\StreamLoader',
            'liip_imagine.cache.resolver.web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver',
            'liip_imagine.cache.resolver.no_cache_web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheWebPathResolver',
            'liip_imagine.cache.resolver.aws_s3.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\AwsS3Resolver',
            'liip_imagine.cache.resolver.cache.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\CacheResolver',
            'liip_imagine.cache.resolver.proxy.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\ProxyResolver',
            'liip_imagine.form.type.image.class' => 'Liip\\ImagineBundle\\Form\\Type\\ImageType',
            'liip_imagine.meta_data.reader.class' => 'Imagine\\Image\\Metadata\\ExifMetadataReader',
            'liip_imagine.filter.post_processor.jpegoptim.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\JpegOptimPostProcessor',
            'liip_imagine.jpegoptim.binary' => '/usr/bin/jpegoptim',
            'liip_imagine.cache.resolver.default' => 'default',
            'liip_imagine.default_image' => NULL,
            'liip_imagine.filter_sets' => array(
                'avatar_med' => array(
                    'quality' => 95,
                    'format' => 'jpg',
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 58,
                                1 => 58,
                            ),
                            'mode' => 'outbound',
                        ),
                        'strip' => array(
                        ),
                    ),
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'preview' => array(
                    'quality' => 95,
                    'format' => 'jpg',
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 900,
                                1 => 600,
                            ),
                            'mode' => 'inset',
                        ),
                        'strip' => array(
                        ),
                    ),
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumbnail' => array(
                    'quality' => 95,
                    'format' => 'jpg',
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 320,
                                1 => 240,
                            ),
                            'mode' => 'outbound',
                        ),
                        'strip' => array(
                        ),
                    ),
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumbnail_small' => array(
                    'quality' => 95,
                    'format' => 'jpg',
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 80,
                                1 => 120,
                            ),
                            'mode' => 'inset',
                        ),
                        'strip' => array(
                        ),
                    ),
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
            ),
            'liip_imagine.binary.loader.default' => 'flysystem_data_loader',
            'liip_imagine.controller.filter_action' => 'liip_imagine.controller:filterAction',
            'liip_imagine.controller.filter_runtime_action' => 'liip_imagine.controller:filterRuntimeAction',
            'oro_assetic.twig_extension.class' => 'Oro\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'oro_assetic.asset_manager.class' => 'Oro\\Bundle\\AsseticBundle\\Factory\\OroAssetManager',
            'oro_assetic.assets_groups' => array(
                'css' => array(
                    0 => 'lib',
                    1 => 'lib_customization',
                    2 => 'bem',
                    3 => 'grids',
                ),
            ),
            'oro_assetic.compiled_assets_groups' => array(
                'css' => array(
                ),
            ),
            'oro_assetic.assets' => array(
                'css' => array(
                    'compress' => array(
                        0 => array(
                            0 => 'bundles/pimui/lib/bootstrap/less/bootstrap.less',
                            1 => 'bundles/pimui/lib/font-awesome/css/font-awesome.css',
                            2 => 'bundles/pimui/lib/bootstrap-switch/bootstrap.switch.css',
                            3 => 'bundles/pimui/lib/bootstrap-datetimepicker/css/bootstrap-datepicker.css',
                            4 => 'bundles/pimui/lib/select2/select2.css',
                            5 => 'bundles/pimui/lib/slimbox2/slimbox2.css',
                            6 => 'bundles/pimui/lib/summernote/summernote.css',
                            7 => 'bundles/pimui/less/lib/bootstrap.switch.less',
                            8 => 'bundles/pimui/less/lib/dialog.less',
                            9 => 'bundles/pimui/less/lib/dropdown.less',
                            10 => 'bundles/pimui/less/lib/flags.less',
                            11 => 'bundles/pimui/less/lib/font-awesome.less',
                            12 => 'bundles/pimui/less/lib/jquery.jstree.less',
                            13 => 'bundles/pimui/less/lib/jquery-ui.less',
                            14 => 'bundles/pimui/less/lib/jquery.multiselect.less',
                            15 => 'bundles/pimui/less/lib/jquery.sidebarize.less',
                            16 => 'bundles/pimui/less/lib/modal.less',
                            17 => 'bundles/pimui/less/lib/navs.less',
                            18 => 'bundles/pimui/less/lib/select2.less',
                            19 => 'bundles/pimui/less/lib/slimbox2.less',
                            20 => 'bundles/pimui/less/lib/tabs.less',
                            21 => 'bundles/pimui/less/lib/wizard.less',
                            22 => 'bundles/pimui/less/lib/select2.less',
                            23 => 'bundles/pimui/less/base/general.less',
                            24 => 'bundles/pimui/less/components/button/ActionButton.less',
                            25 => 'bundles/pimui/less/components/button/SeveralActionsButton.less',
                            26 => 'bundles/pimui/less/components/button/Button.less',
                            27 => 'bundles/pimui/less/components/button/ButtonList.less',
                            28 => 'bundles/pimui/less/components/button/DropdownButton.less',
                            29 => 'bundles/pimui/less/components/button/IconButton.less',
                            30 => 'bundles/pimui/less/components/grid/FilterBox.less',
                            31 => 'bundles/pimui/less/components/grid/FilterChoice.less',
                            32 => 'bundles/pimui/less/components/grid/FilterDate.less',
                            33 => 'bundles/pimui/less/components/grid/Grid.less',
                            34 => 'bundles/pimui/less/components/grid/GridsLine.less',
                            35 => 'bundles/pimui/less/components/grid/GridContainer.less',
                            36 => 'bundles/pimui/less/components/grid/GridToolbar.less',
                            37 => 'bundles/pimui/less/components/product-edit-form/AttributeActions.less',
                            38 => 'bundles/pimui/less/components/product-edit-form/CommentPanel.less',
                            39 => 'bundles/pimui/less/components/product-edit-form/CompletenessBlock.less',
                            40 => 'bundles/pimui/less/components/product-edit-form/ComparableFields.less',
                            41 => 'bundles/pimui/less/components/product-edit-form/FieldContainer.less',
                            42 => 'bundles/pimui/less/components/product-edit-form/FormContainer.less',
                            43 => 'bundles/pimui/less/components/product-edit-form/HorizontalNavtab.less',
                            44 => 'bundles/pimui/less/components/product-edit-form/MediaField.less',
                            45 => 'bundles/pimui/less/components/product-edit-form/MetricField.less',
                            46 => 'bundles/pimui/less/components/product-edit-form/PanelContainer.less',
                            47 => 'bundles/pimui/less/components/product-edit-form/PriceList.less',
                            48 => 'bundles/pimui/less/components/product-edit-form/TabHeader.less',
                            49 => 'bundles/pimui/less/components/product-edit-form/TextareaField.less',
                            50 => 'bundles/pimui/less/components/product-edit-form/TextField.less',
                            51 => 'bundles/pimui/less/components/product-edit-form/VerticalNavtab.less',
                            52 => 'bundles/pimui/less/components/Acl.less',
                            53 => 'bundles/pimui/less/components/Badge.less',
                            54 => 'bundles/pimui/less/components/Bell.less',
                            55 => 'bundles/pimui/less/components/Breadcrumb.less',
                            56 => 'bundles/pimui/less/components/BreadcrumbContainer.less',
                            57 => 'bundles/pimui/less/components/Caret.less',
                            58 => 'bundles/pimui/less/components/ColumnConfigurator.less',
                            59 => 'bundles/pimui/less/components/DashboardButtons.less',
                            60 => 'bundles/pimui/less/components/Diff.less',
                            61 => 'bundles/pimui/less/components/Dropdown.less',
                            62 => 'bundles/pimui/less/components/Flash.less',
                            63 => 'bundles/pimui/less/components/Footer.less',
                            64 => 'bundles/pimui/less/components/Header.less',
                            65 => 'bundles/pimui/less/components/InfoBlock.less',
                            66 => 'bundles/pimui/less/components/List.less',
                            67 => 'bundles/pimui/less/components/LoadingMask.less',
                            68 => 'bundles/pimui/less/components/MessageBox.less',
                            69 => 'bundles/pimui/less/components/MainMenu.less',
                            70 => 'bundles/pimui/less/components/Notification.less',
                            71 => 'bundles/pimui/less/components/NotificationList.less',
                            72 => 'bundles/pimui/less/components/Progress.less',
                            73 => 'bundles/pimui/less/components/ProjectWidget.less',
                            74 => 'bundles/pimui/less/components/Rule.less',
                            75 => 'bundles/pimui/less/components/SequentialEdit.less',
                            76 => 'bundles/pimui/less/components/TabContainer.less',
                            77 => 'bundles/pimui/less/components/TitleContainer.less',
                            78 => 'bundles/pimui/less/components/UserMenu.less',
                            79 => 'bundles/pimui/less/components/VerticalList.less',
                            80 => 'bundles/pimui/less/components/Widget.less',
                            81 => 'bundles/pimui/less/pages/Default.less',
                            82 => 'bundles/pimui/less/pages/Login.less',
                            83 => 'bundles/pimdatagrid/lib/multiselect/jquery.multiselect.css',
                            84 => 'bundles/pimdatagrid/lib/multiselect/jquery.multiselect.filter.css',
                        ),
                    ),
                    'uncompress' => array(
                        0 => array(
                        ),
                    ),
                ),
            ),
            'oro_config.controller.configuration.class' => 'Oro\\Bundle\\ConfigBundle\\Controller\\Rest\\ConfigurationController',
            'oro_config.global.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\ConfigManager',
            'oro_config.user.class' => 'Oro\\Bundle\\ConfigBundle\\Config\\UserConfigManager',
            'oro_config.twig_extension.class' => 'Oro\\Bundle\\ConfigBundle\\Twig\\ConfigExtension',
            'oro_config.provider.system_configuration.form_provider.class' => 'Oro\\Bundle\\ConfigBundle\\Provider\\SystemConfigurationFormProvider',
            'oro_config.form.config_subscriber.class' => 'Oro\\Bundle\\ConfigBundle\\Form\\EventListener\\ConfigSubscriber',
            'oro_datagrid.datagrid.base.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Datagrid',
            'oro_datagrid.extension.acceptor.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Acceptor',
            'oro_datagrid.datagrid.manager.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Manager',
            'oro_datagrid.datagrid.builder.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\Builder',
            'oro_datagrid.datagrid.request_params.class' => 'Oro\\Bundle\\DataGridBundle\\Datagrid\\RequestParameters',
            'oro_datagrid.provider.resolver.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\SystemAwareResolver',
            'oro_datagrid.twig.metadata.class' => 'Oro\\Bundle\\DataGridBundle\\Twig\\MetadataExtension',
            'oro_datagrid.event_listener.base_orm_relation.class' => 'Oro\\Bundle\\DataGridBundle\\EventListener\\BaseOrmRelationDatagridListener',
            'oro_datagrid.configuration.provider.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\ConfigurationProvider',
            'oro_datagrid.configuration.provider.chain.class' => 'Oro\\Bundle\\DataGridBundle\\Provider\\ChainConfigurationProvider',
            'oro_datagrid.extension.toolbar.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Toolbar\\ToolbarExtension',
            'oro_datagrid.extension.formatter.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\FormatterExtension',
            'oro_datagrid.extension.orm_pager.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Pager\\OrmPagerExtension',
            'oro_datagrid.extension.pager.orm.pager.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Pager\\Orm\\Pager',
            'oro_datagrid.extension.orm_sorter.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Sorter\\OrmSorterExtension',
            'oro_datagrid.extension.action.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\ActionExtension',
            'oro_datagrid.extension.mass_action.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionExtension',
            'oro_datagrid.extension.views.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\GridViews\\GridViewsExtension',
            'oro_datagrid.datasource.orm.class' => 'Oro\\Bundle\\DataGridBundle\\Datasource\\Orm\\OrmDatasource',
            'oro_datagrid.extension.formatter.property.field_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\FieldProperty',
            'oro_datagrid.extension.formatter.property.url_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\UrlProperty',
            'oro_datagrid.extension.formatter.property.twig_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\TwigTemplateProperty',
            'oro_datagrid.extension.formatter.property.translateable_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\TranslateableProperty',
            'oro_datagrid.extension.formatter.property.callback_property.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\CallbackProperty',
            'oro_datagrid.extension.action.type.navigate.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\NavigateAction',
            'oro_datagrid.extension.action.type.ajax.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\AjaxAction',
            'oro_datagrid.extension.action.type.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\DeleteAction',
            'oro_datagrid.extension.mass_action.handler.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\DeleteMassActionHandler',
            'oro_datagrid.mass_action.parameters_parser.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionParametersParser',
            'oro_datagrid.mass_action.dispatcher.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionDispatcher',
            'oro_datagrid.extension.mass_action.type.ajax.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Ajax\\AjaxMassAction',
            'oro_datagrid.extension.mass_action.type.delete.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Ajax\\DeleteMassAction',
            'oro_datagrid.extension.mass_action.type.redirect.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Redirect\\RedirectMassAction',
            'oro_datagrid.extension.mass_action.type.widget.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Widget\\WidgetMassAction',
            'oro_datagrid.extension.mass_action.type.window.class' => 'Oro\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Widget\\WindowMassAction',
            'oro_filter.twig.layout' => 'PimFilterBundle:Filter:pim-layout.js.twig',
            'oro_filter.twig.header' => 'OroFilterBundle:Filter:header.html.twig',
            'oro_filter.twig.extension.render_layout.class' => 'Oro\\Bundle\\FilterBundle\\Twig\\RenderLayoutExtension',
            'oro_filter.twig.extension.render_header.class' => 'Oro\\Bundle\\FilterBundle\\Twig\\RenderHeaderExtension',
            'oro_filter.extension.orm_filter.class' => 'Oro\\Bundle\\FilterBundle\\Grid\\Extension\\OrmFilterExtension',
            'oro_filter.filter_utility.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\FilterUtility',
            'oro_filter.string_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\StringFilter',
            'oro_filter.select_row_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\SelectRowFilter',
            'oro_filter.number_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\NumberFilter',
            'oro_filter.percent_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\PercentFilter',
            'oro_filter.choice_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\ChoiceFilter',
            'oro_filter.entity_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\EntityFilter',
            'oro_filter.boolean_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\BooleanFilter',
            'oro_filter.date_range_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DateRangeFilter',
            'oro_filter.datetime_range_filter.class' => 'Oro\\Bundle\\FilterBundle\\Filter\\DateTimeRangeFilter',
            'oro_menu.factory.acl_extension.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\AclAwareMenuFactoryExtension',
            'oro_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'oro_menu.builder_chain.class' => 'Oro\\Bundle\\NavigationBundle\\Provider\\BuilderChainProvider',
            'oro_menu.configuration_builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\ConfigurationBuilder',
            'oro_menu.twig.extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\MenuExtension',
            'oro_navigation.navigation_item_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationItemBuilder',
            'oro_navigation.navigation_history_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationHistoryBuilder',
            'oro_navigation.navigation_mostviewed_menu.builder.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\NavigationMostviewedBuilder',
            'oro_navigation.item.builder.pinbar.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\PinbarTabBuilder',
            'oro_navigation.item.builder.favorite.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\NavigationItemBuilder',
            'oro_navigation.item.builder.history.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\HistoryItemBuilder',
            'oro_navigation.item.factory.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Builder\\ItemFactory',
            'oro_navigation.item.pinbar.post_persist_listener.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Listener\\PinbarPostPersist',
            'oro_navigation.event.response_history.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\ResponseHistoryListener',
            'oro_navigation.event.response_hashnav.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\ResponseHashnavListener',
            'oro_navigation.menu.matcher.voter.request' => 'Oro\\Bundle\\NavigationBundle\\Menu\\Matcher\\Voter\\RequestVoter',
            'oro_navigation.menu.matcher.voter.routepattern' => 'Oro\\Bundle\\NavigationBundle\\Menu\\Matcher\\Voter\\RoutePatternVoter',
            'oro_navigation.title_service.class' => 'Pim\\Bundle\\NavigationBundle\\Provider\\TitleService',
            'oro_navigation.title_service.twig.extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\TitleExtension',
            'oro_navigation.title_service.annotations_reader.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TitleReader\\AnnotationsReader',
            'oro_navigation.title_service.config_reader.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TitleReader\\ConfigReader',
            'oro_navigation.title_service.event.request.listener.class' => 'Oro\\Bundle\\NavigationBundle\\Event\\RequestTitleListener',
            'oro_navigation.translation.extractor.class' => 'Oro\\Bundle\\NavigationBundle\\Title\\TranslationExtractor',
            'oro_navigation.twig_hash_nav_extension.class' => 'Oro\\Bundle\\NavigationBundle\\Twig\\HashNavExtension',
            'oro_navigation.form.type.pagestate.class' => 'Oro\\Bundle\\NavigationBundle\\Form\\Type\\PageStateType',
            'oro_navigation.form.handler.pagestate.class' => 'Oro\\Bundle\\NavigationBundle\\Form\\Handler\\PageStateHandler',
            'oro_navigation.breadcrumbs_manager.class' => 'Oro\\Bundle\\NavigationBundle\\Menu\\BreadcrumbManager',
            'oro_navigation.history.forbidden_routes' => array(
                0 => 'oro_default',
                1 => 'pim_enrich_product_edit',
            ),
            'oro_menu_config' => array(
                'items' => array(
                    'system_configuration' => array(
                        'label' => 'Configuration',
                        'extras' => array(
                            'description' => 'System configuration',
                        ),
                        'route' => 'oro_config_configuration_system',
                        'aclResourceId' => 'oro_config_system',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pinbar' => array(
                        'label' => 'Pinbar',
                        'extras' => array(
                            'icon' => 'icon-folder-close',
                            'maxItems' => 10,
                        ),
                        'uri' => '#',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'history' => array(
                        'label' => 'History',
                        'extras' => array(
                            'icon' => 'icon-time',
                            'activeIfFirstIsEmpty' => true,
                        ),
                        'uri' => '#',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'favorite' => array(
                        'label' => 'Favorites',
                        'extras' => array(
                            'icon' => 'icon-star-empty',
                        ),
                        'uri' => '#',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'mostviewed' => array(
                        'label' => 'Most Viewed',
                        'extras' => array(
                            'icon' => 'icon-flag',
                        ),
                        'uri' => '#',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'system_tab' => array(
                        'label' => 'System',
                        'uri' => '#',
                        'extras' => array(
                            'position' => 60,
                            'hideIfEmpty' => true,
                        ),
                        'showNonAuthorized' => false,
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'users_management' => array(
                        'label' => 'Users Management',
                        'uri' => '#',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                        'extras' => array(
                        ),
                    ),
                    'user_list' => array(
                        'label' => 'Users',
                        'route' => 'oro_user_index',
                        'aclResourceId' => 'pim_user_user_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^oro_user_(?!role\\w+|group\\w+|security\\w+|reset\\w+)\\w+$/',
                            ),
                            'description' => 'List of system users',
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'user_create' => array(
                        'label' => 'Create User',
                        'route' => 'oro_user_create',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                        'extras' => array(
                        ),
                    ),
                    'user_roles' => array(
                        'label' => 'Roles',
                        'route' => 'oro_user_role_index',
                        'aclResourceId' => 'pim_user_role_index',
                        'extras' => array(
                            'routes' => array(
                                0 => 'oro_user_role_*',
                            ),
                            'description' => 'List of system roles',
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'user_groups' => array(
                        'label' => 'Groups',
                        'route' => 'oro_user_group_index',
                        'aclResourceId' => 'pim_user_group_index',
                        'extras' => array(
                            'routes' => array(
                                0 => 'oro_user_group_*',
                            ),
                            'description' => 'List of system groups',
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'shortcut_new_user' => array(
                        'label' => 'Create new user',
                        'route' => 'oro_user_create',
                        'extras' => array(
                            'description' => 'Create new user instance',
                            'isCustomAction' => true,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'shortcut_list_users' => array(
                        'label' => 'Show users list',
                        'route' => 'oro_user_index',
                        'extras' => array(
                            'description' => 'List of all system users',
                            'isCustomAction' => true,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'shortcut_new_role' => array(
                        'label' => 'Create new role',
                        'route' => 'oro_user_role_create',
                        'extras' => array(
                            'description' => 'Create new role instance',
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'shortcut_new_group' => array(
                        'label' => 'Create new group',
                        'route' => 'oro_user_group_create',
                        'extras' => array(
                            'description' => 'Create new group instance',
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'oro_user_profile_view' => array(
                        'label' => 'My User',
                        'route' => 'oro_user_profile_view',
                        'linkAttributes' => array(
                            'class' => 'AknDropdown-menuLink',
                        ),
                        'extras' => array(
                            'position' => 10,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_analytics_system_info' => array(
                        'label' => 'pim_menu.item.system_info',
                        'route' => 'pim_analytics_system_info_index',
                        'aclResourceId' => 'pim_analytics_system_info_index',
                        'extras' => array(
                            'routes' => array(
                                0 => 'pim_analytics_system_info_index',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_import_tab' => array(
                        'label' => 'pim_menu.tab.collect',
                        'uri' => '#',
                        'extras' => array(
                            'position' => 10,
                        ),
                        'showNonAuthorized' => false,
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_export_tab' => array(
                        'label' => 'pim_menu.tab.spread',
                        'uri' => '#',
                        'extras' => array(
                            'position' => 30,
                        ),
                        'showNonAuthorized' => false,
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_ie_import' => array(
                        'label' => 'pim_menu.item.import_profile',
                        'route' => 'pim_importexport_import_profile_index',
                        'aclResourceId' => 'pim_importexport_import_profile_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_importexport_import_profile_\\w+$/',
                            ),
                            'position' => 10,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_ie_export' => array(
                        'label' => 'pim_menu.item.export_profile',
                        'route' => 'pim_importexport_export_profile_index',
                        'aclResourceId' => 'pim_importexport_export_profile_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_importexport_export_profile_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_report_import' => array(
                        'label' => 'pim_menu.item.import_history',
                        'route' => 'pim_importexport_import_execution_index',
                        'aclResourceId' => 'pim_importexport_import_execution_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_importexport_import_execution_\\w+$/',
                            ),
                            'position' => 30,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_report_export' => array(
                        'label' => 'pim_menu.item.export_history',
                        'route' => 'pim_importexport_export_execution_index',
                        'aclResourceId' => 'pim_importexport_export_execution_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_importexport_export_execution_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'home' => array(
                        'name' => 'Home',
                        'label' => '',
                        'extras' => array(
                            'icon' => 'icon-home',
                            'position' => 1,
                        ),
                        'route' => 'oro_default',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_tab' => array(
                        'label' => 'pim_menu.tab.enrich',
                        'uri' => '#',
                        'extras' => array(
                            'position' => 20,
                        ),
                        'showNonAuthorized' => false,
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_product' => array(
                        'label' => 'pim_menu.item.product',
                        'route' => 'pim_enrich_product_index',
                        'aclResourceId' => 'pim_enrich_product_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_product_\\w+$/',
                                1 => '/^pim_enrich_mass_edit_\\w+$/',
                            ),
                            'position' => 10,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_attribute' => array(
                        'label' => 'pim_menu.item.attribute',
                        'route' => 'pim_enrich_attribute_index',
                        'aclResourceId' => 'pim_enrich_attribute_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_attribute_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_family' => array(
                        'label' => 'pim_menu.item.family',
                        'route' => 'pim_enrich_family_index',
                        'aclResourceId' => 'pim_enrich_family_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_family_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_attributegroup' => array(
                        'label' => 'pim_menu.item.attribute_group',
                        'route' => 'pim_enrich_attributegroup_index',
                        'aclResourceId' => 'pim_enrich_attributegroup_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_attributegroup_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_categorytree' => array(
                        'label' => 'pim_menu.item.category',
                        'route' => 'pim_enrich_categorytree_index',
                        'aclResourceId' => 'pim_enrich_product_category_list',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_categorytree_\\w+$/',
                            ),
                            'position' => 20,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_configuration_tab' => array(
                        'label' => 'pim_menu.tab.settings',
                        'uri' => '#',
                        'extras' => array(
                            'position' => 50,
                        ),
                        'showNonAuthorized' => false,
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_locale' => array(
                        'label' => 'pim_menu.item.locale',
                        'route' => 'pim_enrich_locale_index',
                        'aclResourceId' => 'pim_enrich_locale_index',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                        'extras' => array(
                        ),
                    ),
                    'pim_enrich_currency' => array(
                        'label' => 'pim_menu.item.currency',
                        'route' => 'pim_enrich_currency_index',
                        'aclResourceId' => 'pim_enrich_currency_index',
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                        'extras' => array(
                        ),
                    ),
                    'pim_enrich_channel' => array(
                        'label' => 'pim_menu.item.channel',
                        'route' => 'pim_enrich_channel_index',
                        'aclResourceId' => 'pim_enrich_channel_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_channel_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_variant_group' => array(
                        'label' => 'pim_menu.item.variant_group',
                        'route' => 'pim_enrich_variant_group_index',
                        'aclResourceId' => 'pim_enrich_variant_group_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_variant_group_\\w+$/',
                            ),
                            'position' => 30,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_group' => array(
                        'label' => 'pim_menu.item.group',
                        'route' => 'pim_enrich_group_index',
                        'aclResourceId' => 'pim_enrich_group_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_group_\\w+$/',
                            ),
                            'position' => 40,
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_associationtype' => array(
                        'label' => 'pim_menu.item.association_type',
                        'route' => 'pim_enrich_associationtype_index',
                        'aclResourceId' => 'pim_enrich_associationtype_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_associationtype_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_grouptype' => array(
                        'label' => 'pim_menu.item.group_type',
                        'route' => 'pim_enrich_grouptype_index',
                        'aclResourceId' => 'pim_enrich_grouptype_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_grouptype_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                    'pim_enrich_job_tracker' => array(
                        'label' => 'job_tracker.tab.title',
                        'route' => 'pim_enrich_job_tracker_index',
                        'aclResourceId' => 'pim_enrich_job_tracker_index',
                        'extras' => array(
                            'routes' => array(
                                0 => '/^pim_enrich_job_tracker_\\w+$/',
                            ),
                        ),
                        'translateParameters' => array(
                        ),
                        'routeParameters' => array(
                        ),
                    ),
                ),
                'tree' => array(
                    'application_menu' => array(
                        'children' => array(
                            'system_tab' => array(
                                'children' => array(
                                    'system_configuration' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'users_management' => array(
                                        'children' => array(
                                            'user_list' => array(
                                                'children' => array(
                                                ),
                                            ),
                                            'user_roles' => array(
                                                'children' => array(
                                                ),
                                            ),
                                            'user_groups' => array(
                                                'children' => array(
                                                ),
                                            ),
                                        ),
                                    ),
                                    'pim_analytics_system_info' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_job_tracker' => array(
                                        'children' => array(
                                        ),
                                    ),
                                ),
                            ),
                            'pim_import_tab' => array(
                                'children' => array(
                                    'pim_ie_import' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_report_import' => array(
                                        'children' => array(
                                        ),
                                    ),
                                ),
                            ),
                            'pim_export_tab' => array(
                                'children' => array(
                                    'pim_ie_export' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_report_export' => array(
                                        'children' => array(
                                        ),
                                    ),
                                ),
                            ),
                            'pim_enrich_tab' => array(
                                'children' => array(
                                    'pim_enrich_product' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_categorytree' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_variant_group' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_group' => array(
                                        'children' => array(
                                        ),
                                    ),
                                ),
                            ),
                            'pim_configuration_tab' => array(
                                'children' => array(
                                    'pim_enrich_attributegroup' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_attribute' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_family' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_associationtype' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_grouptype' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_currency' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_locale' => array(
                                        'children' => array(
                                        ),
                                    ),
                                    'pim_enrich_channel' => array(
                                        'children' => array(
                                        ),
                                    ),
                                ),
                            ),
                        ),
                        'type' => 'application_menu',
                        'extras' => array(
                        ),
                    ),
                    'dots_menu' => array(
                        'type' => 'dots_menu',
                        'children' => array(
                            'pinbar' => array(
                                'children' => array(
                                ),
                            ),
                            'history' => array(
                                'children' => array(
                                ),
                            ),
                            'favorite' => array(
                                'children' => array(
                                ),
                            ),
                            'mostviewed' => array(
                                'children' => array(
                                ),
                            ),
                        ),
                        'extras' => array(
                        ),
                    ),
                    'usermenu' => array(
                        'children' => array(
                            'oro_user_profile_view' => array(
                                'children' => array(
                                ),
                            ),
                        ),
                        'extras' => array(
                        ),
                    ),
                    'shortcuts' => array(
                        'children' => array(
                            'shortcut_new_user' => array(
                                'children' => array(
                                ),
                            ),
                            'shortcut_list_users' => array(
                                'children' => array(
                                ),
                            ),
                            'shortcut_new_role' => array(
                                'children' => array(
                                ),
                            ),
                            'shortcut_new_group' => array(
                                'children' => array(
                                ),
                            ),
                        ),
                        'extras' => array(
                        ),
                    ),
                ),
                'templates' => array(
                    'application_menu' => array(
                        'template' => 'OroNavigationBundle:Menu:application_menu.html.twig',
                        'currentClass' => 'AknMainMenu-item--active',
                        'ancestorClass' => 'AknMainMenu-item--active',
                        'allow_safe_labels' => true,
                        'rootClass' => 'AknMainMenu',
                    ),
                    'dots_menu' => array(
                        'template' => 'OroNavigationBundle:Menu:dots_menu.html.twig',
                    ),
                    'navbar' => array(
                        'template' => 'OroNavigationBundle:Menu:navbar.html.twig',
                    ),
                    'dropdown' => array(
                        'template' => 'OroNavigationBundle:Menu:dropdown.html.twig',
                    ),
                    'horizontal_tabs' => array(
                        'template' => 'OroNavigationBundle:Menu:horizontal_tabs.html.twig',
                    ),
                    'pinbar' => array(
                        'template' => 'OroNavigationBundle:Menu:pinbar.html.twig',
                    ),
                    'favorite' => array(
                        'template' => 'OroNavigationBundle:Menu:favorites.html.twig',
                    ),
                    'mostviewed' => array(
                        'template' => 'OroNavigationBundle:Menu:mostviewed.html.twig',
                        'rootClass' => 'extra-list AknList',
                    ),
                    'history' => array(
                        'template' => 'OroNavigationBundle:Menu:history.html.twig',
                        'rootClass' => 'extra-list AknList',
                        'currentAsLink' => false,
                    ),
                ),
                'settings' => array(
                    'maxItems' => array(
                        'value' => 20,
                        'scope' => 'app',
                    ),
                    'title_suffix' => array(
                        'value' => '',
                        'scope' => 'app',
                    ),
                    'title_delimiter' => array(
                        'value' => '-',
                        'scope' => 'app',
                    ),
                    'breadcrumb_menu' => array(
                        'value' => 'application_menu',
                        'scope' => 'app',
                    ),
                ),
            ),
            'oro_titles' => array(
                'oro_config_configuration_system' => 'pim_title.system_configuration.index',
                'oro_pinbar_help' => 'How To Use Pinbar',
                'oro_user_view' => '%username%',
                'oro_user_update' => '%username% - Edit',
                'oro_user_create' => 'Create User',
                'oro_user_index' => 'pim_title.user.index',
                'oro_user_profile_view' => '%username%',
                'oro_user_profile_update' => '%username% - Edit',
                'oro_user_role_update' => '%role% - Edit',
                'oro_user_role_create' => 'Create Role',
                'oro_user_role_index' => 'pim_title.user_role.index',
                'oro_user_security_login' => 'Login',
                'oro_user_reset_reset' => 'Password Reset',
                'oro_user_reset_request' => 'Forgot Password',
                'oro_user_reset_check_email' => 'Password Reset - Check Email',
                'oro_user_group_create' => 'Create Group',
                'oro_user_group_update' => '%group% - Edit',
                'oro_user_group_index' => 'pim_title.user_group.index',
                'pim_analytics_system_info_index' => 'pim_analytics.system_info.title',
                'pim_importexport_export_profile_index' => 'pim_title.export_profile.index',
                'pim_importexport_export_profile_edit' => 'pim_title.export_profile.edit',
                'pim_importexport_export_profile_show' => 'pim_title.export_profile.show',
                'pim_importexport_export_execution_index' => 'pim_title.export_execution.index',
                'pim_importexport_export_execution_show' => 'pim_title.export_execution.show',
                'pim_importexport_import_profile_index' => 'pim_title.import_profile.index',
                'pim_importexport_import_profile_edit' => 'pim_title.import_profile.edit',
                'pim_importexport_import_profile_show' => 'pim_title.import_profile.show',
                'pim_importexport_import_execution_index' => 'pim_title.import_execution.index',
                'pim_importexport_import_execution_show' => 'pim_title.import_execution.show',
                'oro_default' => 'pim_title.dashboard',
                'pim_enrich_attributegroup_index' => 'pim_title.attribute_group.index',
                'pim_enrich_attributegroup_create' => 'pim_title.attribute_group.create',
                'pim_enrich_attributegroup_edit' => 'pim_title.attribute_group.edit',
                'pim_enrich_categorytree_index' => 'pim_title.category.index',
                'pim_enrich_categorytree_create' => 'pim_title.category.create',
                'pim_enrich_categorytree_edit' => 'pim_title.category.edit',
                'pim_enrich_attribute_index' => 'pim_title.attribute.index',
                'pim_enrich_attribute_create' => 'pim_title.attribute.create',
                'pim_enrich_attribute_edit' => 'pim_title.attribute.edit',
                'pim_enrich_product_index' => 'pim_title.product.index',
                'pim_enrich_product_edit' => 'pim_title.product.edit',
                'pim_enrich_family_index' => 'pim_title.family.index',
                'pim_enrich_family_edit' => 'pim_title.family.edit',
                'pim_enrich_channel_index' => 'pim_title.channel.index',
                'pim_enrich_channel_create' => 'pim_title.channel.create',
                'pim_enrich_channel_edit' => 'pim_title.channel.edit',
                'pim_enrich_currency_index' => 'pim_title.currency.index',
                'pim_enrich_locale_index' => 'pim_title.locale.index',
                'pim_enrich_group_index' => 'pim_title.group.index',
                'pim_enrich_group_edit' => 'pim_title.group.edit',
                'pim_enrich_variant_group_index' => 'pim_title.variant_group.index',
                'pim_enrich_variant_group_edit' => 'pim_title.variant_group.edit',
                'pim_enrich_associationtype_index' => 'pim_title.association_type.index',
                'pim_enrich_associationtype_edit' => 'pim_title.association_type.edit',
                'pim_enrich_grouptype_index' => 'pim_title.group_type.index',
                'pim_enrich_grouptype_edit' => 'pim_title.group_type.edit',
                'pim_enrich_mass_edit_family_action_choose' => 'pim_title.mass_edit_family_action.choose',
                'pim_enrich_mass_edit_product_action_choose' => 'pim_title.mass_edit_product_action.choose',
                'pim_enrich_mass_edit_family_action_configure' => 'pim_title.mass_edit_family_action.configure',
                'pim_enrich_mass_edit_product_action_configure' => 'pim_title.mass_edit_product_action.configure',
                'pim_enrich_mass_edit_family_action_perform' => 'pim_title.mass_edit_family_action.configure',
                'pim_enrich_mass_edit_product_action_perform' => 'pim_title.mass_edit_product_action.configure',
                'pim_enrich_job_tracker_index' => 'pim_title.job_tracker.index',
                'pim_enrich_job_tracker_show' => 'pim_title.job_tracker.show',
            ),
            'oro_requirejs.twig.class' => 'Oro\\Bundle\\RequireJSBundle\\Twig\\OroRequireJSExtension',
            'oro_requirejs.provider.config.class' => 'Oro\\Bundle\\RequireJSBundle\\Provider\\Config',
            'oro_require_js' => array(
                'config' => array(
                    'waitSeconds' => 0,
                ),
                'build_path' => 'js/oro.min.js',
                'building_timeout' => 3600,
                'build' => array(
                    'optimize' => 'uglify2',
                    'preserveLicenseComments' => true,
                    'paths' => array(
                    ),
                ),
                'js_engine' => 'node',
                'web_root' => ($this->targetDirs[2].'/../web'),
            ),
            'oro_require_js.web_root' => ($this->targetDirs[2].'/../web'),
            'oro_require_js.build_path' => 'js/oro.min.js',
            'oro_security.entity.owners' => array(
                'user' => 'PimUserBundle:User',
            ),
            'oro_security.security_facade.class' => 'Oro\\Bundle\\SecurityBundle\\SecurityFacade',
            'oro_security.acl.manager.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclManager',
            'oro_security.acl.sid_manager.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclSidManager',
            'oro_security.acl.cache.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Cache\\FilesystemCache',
            'oro_security.acl.ace_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AceManipulationHelper',
            'oro_security.acl.privilege_repository.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Persistence\\AclPrivilegeRepository',
            'oro_security.acl.extension_selector.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\AclExtensionSelector',
            'oro_security.acl.extension.entity.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\EntityAclExtension',
            'oro_security.acl.entity_class_resolver.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\EntityClassResolver',
            'oro_security.acl.extension.action.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Extension\\ActionAclExtension',
            'oro_security.acl.voter.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Voter\\AclVoter',
            'oro_security.acl.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\RootBasedAclProvider',
            'oro_security.acl.dbal.provider.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Dbal\\MutableAclProvider',
            'oro_security.acl.permission_granting_strategy.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\PermissionGrantingStrategy',
            'oro_security.acl.permission_map.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Permission\\PermissionMap',
            'oro_security.acl.object_identity_factory.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdentityFactory',
            'oro_security.acl.object_identity_retrieval_strategy.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdentityRetrievalStrategy',
            'oro_security.acl.object_id_accessor.class' => 'Oro\\Bundle\\SecurityBundle\\Acl\\Domain\\ObjectIdAccessor',
            'oro_security.type.oro_acl_label.class' => 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\ObjectLabelType',
            'oro_security.action_metadata_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Metadata\\ActionMetadataProvider',
            'oro_security.acl.annotation_provider.class' => 'Oro\\Bundle\\SecurityBundle\\Metadata\\AclAnnotationProvider',
            'oro_security.acl.annotation_provider.cache.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'oro_security.acl.annotation_loader.class' => 'Oro\\Bundle\\SecurityBundle\\Annotation\\Loader\\AclAnnotationLoader',
            'oro_security.acl.yaml_config_loader.class' => 'Oro\\Bundle\\SecurityBundle\\Annotation\\Loader\\AclYamlConfigLoader',
            'oro_security.acl.annotation_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\AclAnnotationCacheWarmer',
            'oro_security.acl.annotation_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\AclAnnotationCacheClearer',
            'oro_security.action_metadata_provider.cache.warmer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\ActionMetadataCacheWarmer',
            'oro_security.action_metadata_provider.cache.clearer.class' => 'Oro\\Bundle\\SecurityBundle\\Cache\\ActionMetadataCacheClearer',
            'oro_security.listener.controller.class' => 'Oro\\Bundle\\SecurityBundle\\EventListener\\ControllerListener',
            'oro_security.twig.security_extension' => 'Oro\\Bundle\\SecurityBundle\\Twig\\OroSecurityExtension',
            'oro_translation.controller.class' => 'Oro\\Bundle\\TranslationBundle\\Controller\\Controller',
            'oro_translation.js_translation.domains' => array(
                0 => 'measures',
                1 => 'jsmessages',
                2 => 'validators',
            ),
            'oro_user.manager.class' => 'Oro\\Bundle\\UserBundle\\Entity\\UserManager',
            'oro_user.entity.class' => 'Pim\\Bundle\\UserBundle\\Entity\\User',
            'oro_user.group.entity.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Group',
            'oro_user.role.entity.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Role',
            'oro_user.security.provider.class' => 'Oro\\Bundle\\UserBundle\\Security\\UserProvider',
            'oro_user.security.login.class' => 'Oro\\Bundle\\UserBundle\\EventListener\\LoginSubscriber',
            'oro_user.user_menu.builder.class' => 'Oro\\Bundle\\UserBundle\\Menu\\UserMenuBuilder',
            'oro_user.role.listener.class' => 'Oro\\Bundle\\UserBundle\\EventListener\\RoleListener',
            'oro_user.entity_with_image.subscriber.class' => 'Oro\\Bundle\\UserBundle\\Entity\\EventListener\\UploadedImageSubscriber',
            'oro_user.change_password.subscriber.class' => 'Oro\\Bundle\\UserBundle\\Form\\EventListener\\ChangePasswordSubscriber',
            'oro_user.form.type.user.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\UserApiType',
            'oro_user.form.type.reset.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\ResetType',
            'oro_user.form.type.role.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\RoleApiType',
            'oro_user.form.type.group.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\GroupType',
            'oro_user.form.type.group.api.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\GroupApiType',
            'oro_user.form.type.change_password.class' => 'Oro\\Bundle\\UserBundle\\Form\\Type\\ChangePasswordType',
            'oro_user.form.handler.user.class' => 'Pim\\Bundle\\UserBundle\\Form\\Handler\\UserHandler',
            'oro_user.form.handler.reset.class' => 'Pim\\Bundle\\UserBundle\\Form\\Handler\\ResetHandler',
            'oro_user.form.handler.role.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\RoleHandler',
            'oro_user.form.handler.group.class' => 'Oro\\Bundle\\UserBundle\\Form\\Handler\\GroupHandler',
            'oro_user.form.handler.acl_role.class' => 'Pim\\Bundle\\UserBundle\\Form\\Handler\\AclRoleHandler',
            'oro_user.reset.ttl' => 86400,
            'oro_user.email' => array(
                'no-reply@example.com' => 'Akeneo Admin',
            ),
            'oro_user.privileges' => array(
                'action' => array(
                    'label' => 'rights.action',
                    'view_type' => 'groups',
                    'types' => array(
                        0 => 'action',
                    ),
                    'field_type' => 'pim_acl_access_level_selector',
                    'default_value' => 5,
                    'show_default' => true,
                ),
            ),
            'apy_js_form_validation.enabled' => true,
            'apy_js_form_validation.check_modes' => array(
                0 => 'submit',
                1 => 'change',
            ),
            'apy_js_form_validation.script_directory' => 'bundles/jsformvalidation/js/',
            'apy_js_form_validation.validation_bundle' => 'APYJsFormValidationBundle',
            'apy_js_form_validation.javascript_framework' => 'jquery',
            'apy_js_form_validation.warmer_routes' => array(
            ),
            'apy_js_form_validation.identifier_field' => 'jsfv_identifier',
            'apy_js_form_validation.translation_group' => 'validators',
            'jsfv.generator.class' => 'APY\\JsFormValidationBundle\\Generator\\FormValidationScriptGenerator',
            'twig.extension.jsformvalidation.class' => 'Pim\\Bundle\\JsFormValidationBundle\\Twig\\Extension\\JsFormValidationTwigExtension',
            'kernel.cache_warmer.jsformvalidation.class' => 'APY\\JsFormValidationBundle\\CacheWarmer\\JsFormValidationCacheWarmer',
            'form.type_extension.validation_groups.class' => 'APY\\JsFormValidationBundle\\Form\\Extension\\FormTypeExtension',
            'form.type_extension.repeated_field_parameters.class' => 'APY\\JsFormValidationBundle\\Form\\Extension\\RepeatedTypeExtension',
            'jsfv.validation_groups_listener.class' => 'APY\\JsFormValidationBundle\\EventListener\\ValidationGroupsListener',
            'jsfv.repeated_field_listener.class' => 'APY\\JsFormValidationBundle\\EventListener\\RepeatedFieldListener',
            'jsfv.controller.class' => 'APY\\JsFormValidationBundle\\Controller\\Controller',
            'doctrine_migrations.dir_name' => ($this->targetDirs[2].'/../upgrades/schema'),
            'doctrine_migrations.namespace' => 'Pim\\Upgrade\\Schema',
            'doctrine_migrations.name' => 'PIM Migrations',
            'doctrine_migrations.table_name' => 'migration_versions',
            'akeneo_measure.convert.measure_converter.class' => 'Akeneo\\Bundle\\MeasureBundle\\Convert\\MeasureConverter',
            'akeneo_measure.manager.measure_manager.class' => 'Akeneo\\Bundle\\MeasureBundle\\Manager\\MeasureManager',
            'akeneo_measure.measures_config' => array(
                'measures_config' => array(
                    'Area' => array(
                        'standard' => 'SQUARE_METER',
                        'units' => array(
                            'SQUARE_MILLIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 9.9999999999999995E-7,
                                    ),
                                ),
                                'symbol' => 'mm²',
                            ),
                            'SQUARE_CENTIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.0001,
                                    ),
                                ),
                                'symbol' => 'cm²',
                            ),
                            'SQUARE_DECIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.01,
                                    ),
                                ),
                                'symbol' => 'dm²',
                            ),
                            'SQUARE_METER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'm²',
                            ),
                            'CENTIARE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'ca',
                            ),
                            'SQUARE_DEKAMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'dam²',
                            ),
                            'ARE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'a',
                            ),
                            'SQUARE_HECTOMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10000,
                                    ),
                                ),
                                'symbol' => 'hm²',
                            ),
                            'HECTARE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10000,
                                    ),
                                ),
                                'symbol' => 'ha',
                            ),
                            'SQUARE_KILOMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000,
                                    ),
                                ),
                                'symbol' => 'km²',
                            ),
                            'SQUARE_MIL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 6.4515999999999997E-10,
                                    ),
                                ),
                                'symbol' => 'sq mil',
                            ),
                            'SQUARE_INCH' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.00064515999999999998,
                                    ),
                                ),
                                'symbol' => 'in²',
                            ),
                            'SQUARE_FOOT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.092903040000000006,
                                    ),
                                ),
                                'symbol' => 'ft²',
                            ),
                            'SQUARE_YARD' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.83612735999999999,
                                    ),
                                ),
                                'symbol' => 'yd²',
                            ),
                            'ARPENT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 3418.8899999999999,
                                    ),
                                ),
                                'symbol' => 'arpent',
                            ),
                            'ACRE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 4046.8564219999998,
                                    ),
                                ),
                                'symbol' => 'A',
                            ),
                            'SQUARE_FURLONG' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 40468.726000000002,
                                    ),
                                ),
                                'symbol' => 'fur²',
                            ),
                            'SQUARE_MILE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 2589988.1103360001,
                                    ),
                                ),
                                'symbol' => 'mi²',
                            ),
                        ),
                    ),
                    'Binary' => array(
                        'standard' => 'BYTE',
                        'units' => array(
                            'BIT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.125,
                                    ),
                                ),
                                'symbol' => 'b',
                            ),
                            'BYTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'B',
                            ),
                            'KILOBYTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1024,
                                    ),
                                ),
                                'symbol' => 'kB',
                            ),
                            'MEGABYTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1048576,
                                    ),
                                ),
                                'symbol' => 'MB',
                            ),
                            'GIGABYTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1073741824,
                                    ),
                                ),
                                'symbol' => 'GB',
                            ),
                            'TERABYTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1099511627776,
                                    ),
                                ),
                                'symbol' => 'TB',
                            ),
                        ),
                    ),
                    'Decibel' => array(
                        'standard' => 'DECIBEL',
                        'units' => array(
                            'DECIBEL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'dB',
                            ),
                        ),
                    ),
                    'Frequency' => array(
                        'standard' => 'HERTZ',
                        'units' => array(
                            'HERTZ' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'Hz',
                            ),
                            'KILOHERTZ' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kHz',
                            ),
                            'MEGAHERTZ' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000,
                                    ),
                                ),
                                'symbol' => 'MHz',
                            ),
                            'GIGAHERTZ' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000000,
                                    ),
                                ),
                                'symbol' => 'GHz',
                            ),
                            'TERAHERTZ' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000000000,
                                    ),
                                ),
                                'symbol' => 'THz',
                            ),
                        ),
                    ),
                    'Length' => array(
                        'standard' => 'METER',
                        'units' => array(
                            'MILLIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mm',
                            ),
                            'CENTIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.01,
                                    ),
                                ),
                                'symbol' => 'cm',
                            ),
                            'DECIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.10000000000000001,
                                    ),
                                ),
                                'symbol' => 'dm',
                            ),
                            'METER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'm',
                            ),
                            'DEKAMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10,
                                    ),
                                ),
                                'symbol' => 'dam',
                            ),
                            'HECTOMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'hm',
                            ),
                            'KILOMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'km',
                            ),
                            'MIL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 2.5400000000000001E-5,
                                    ),
                                ),
                                'symbol' => 'mil',
                            ),
                            'INCH' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.025399999999999999,
                                    ),
                                ),
                                'symbol' => 'in',
                            ),
                            'FEET' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.30480000000000002,
                                    ),
                                ),
                                'symbol' => 'ft',
                            ),
                            'YARD' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.91439999999999999,
                                    ),
                                ),
                                'symbol' => 'yd',
                            ),
                            'CHAIN' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 20.116800000000001,
                                    ),
                                ),
                                'symbol' => 'ch',
                            ),
                            'FURLONG' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 201.16800000000001,
                                    ),
                                ),
                                'symbol' => 'fur',
                            ),
                            'MILE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1609.3440000000001,
                                    ),
                                ),
                                'symbol' => 'mi',
                            ),
                        ),
                    ),
                    'Power' => array(
                        'standard' => 'WATT',
                        'units' => array(
                            'WATT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'W',
                            ),
                            'KILOWATT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kW',
                            ),
                            'MEGAWATT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000,
                                    ),
                                ),
                                'symbol' => 'MW',
                            ),
                            'GIGAWATT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000000,
                                    ),
                                ),
                                'symbol' => 'GW',
                            ),
                            'TERAWATT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000000000,
                                    ),
                                ),
                                'symbol' => 'TW',
                            ),
                        ),
                    ),
                    'Voltage' => array(
                        'standard' => 'VOLT',
                        'units' => array(
                            'MILLIVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mV',
                            ),
                            'CENTIVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.01,
                                    ),
                                ),
                                'symbol' => 'cV',
                            ),
                            'DECIVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.10000000000000001,
                                    ),
                                ),
                                'symbol' => 'dV',
                            ),
                            'VOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'V',
                            ),
                            'DEKAVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10,
                                    ),
                                ),
                                'symbol' => 'daV',
                            ),
                            'HECTOVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'hV',
                            ),
                            'KILOVOLT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kV',
                            ),
                        ),
                    ),
                    'Intensity' => array(
                        'standard' => 'AMPERE',
                        'units' => array(
                            'MILLIAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mA',
                            ),
                            'CENTIAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.01,
                                    ),
                                ),
                                'symbol' => 'cA',
                            ),
                            'DECIAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.10000000000000001,
                                    ),
                                ),
                                'symbol' => 'dA',
                            ),
                            'AMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'A',
                            ),
                            'DEKAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10,
                                    ),
                                ),
                                'symbol' => 'daA',
                            ),
                            'HECTOAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'hA',
                            ),
                            'KILOAMPERE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kA',
                            ),
                        ),
                    ),
                    'Resistance' => array(
                        'standard' => 'OHM',
                        'units' => array(
                            'MILLIOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mΩ',
                            ),
                            'CENTIOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.01,
                                    ),
                                ),
                                'symbol' => 'cΩ',
                            ),
                            'DECIOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.10000000000000001,
                                    ),
                                ),
                                'symbol' => 'dΩ',
                            ),
                            'OHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'Ω',
                            ),
                            'DEKAOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 10,
                                    ),
                                ),
                                'symbol' => 'daΩ',
                            ),
                            'HECTOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 100,
                                    ),
                                ),
                                'symbol' => 'hΩ',
                            ),
                            'KILOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kΩ',
                            ),
                            'MEGOHM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000000,
                                    ),
                                ),
                                'symbol' => 'MΩ',
                            ),
                        ),
                    ),
                    'Speed' => array(
                        'standard' => 'METER_PER_SECOND',
                        'units' => array(
                            'METER_PER_SECOND' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'mdivs',
                            ),
                            'METER_PER_MINUTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 60,
                                    ),
                                ),
                                'symbol' => 'mdivm',
                            ),
                            'METER_PER_HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                    1 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'mdivh',
                            ),
                            'KILOMETER_PER_HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                    1 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'kmdivh',
                            ),
                            'FOOT_PER_SECOND' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.30480000000000002,
                                    ),
                                ),
                                'symbol' => 'ftdivs',
                            ),
                            'FOOT_PER_HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.30480000000000002,
                                    ),
                                    1 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'ftdivh',
                            ),
                            'YARD_PER_HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => '0.9144\'',
                                    ),
                                    1 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'yddivh',
                            ),
                            'MILE_PER_HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1609.3440000000001,
                                    ),
                                    1 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'midivh',
                            ),
                        ),
                    ),
                    'ElectricCharge' => array(
                        'standard' => 'AMPEREHOUR',
                        'units' => array(
                            'MILLIAMPEREHOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mAh',
                            ),
                            'AMPEREHOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'Ah',
                            ),
                            'MILLICOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 3600000,
                                    ),
                                ),
                                'symbol' => 'mC',
                            ),
                            'CENTICOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 360000,
                                    ),
                                ),
                                'symbol' => 'cC',
                            ),
                            'DECICOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 36000,
                                    ),
                                ),
                                'symbol' => 'dC',
                            ),
                            'COULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 3600,
                                    ),
                                ),
                                'symbol' => 'C',
                            ),
                            'DEKACOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 360,
                                    ),
                                ),
                                'symbol' => 'daC',
                            ),
                            'HECTOCOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 36,
                                    ),
                                ),
                                'symbol' => 'hC',
                            ),
                            'KILOCOULOMB' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 3.6000000000000001,
                                    ),
                                ),
                                'symbol' => 'kC',
                            ),
                        ),
                    ),
                    'Duration' => array(
                        'standard' => 'SECOND',
                        'units' => array(
                            'MILLISECOND' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'ms',
                            ),
                            'SECOND' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 's',
                            ),
                            'MINUTE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 60,
                                    ),
                                ),
                                'symbol' => 'm',
                            ),
                            'HOUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 3600,
                                    ),
                                ),
                                'symbol' => 'h',
                            ),
                            'DAY' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 86400,
                                    ),
                                ),
                                'symbol' => 'd',
                            ),
                            'WEEK' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 604800,
                                    ),
                                ),
                                'symbol' => 'week',
                            ),
                            'MONTH' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 18748800,
                                    ),
                                ),
                                'symbol' => 'month',
                            ),
                            'YEAR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 31536000,
                                    ),
                                ),
                                'symbol' => 'year',
                            ),
                        ),
                    ),
                    'Temperature' => array(
                        'standard' => 'KELVIN',
                        'units' => array(
                            'CELSIUS' => array(
                                'convert' => array(
                                    0 => array(
                                        'add' => 273.14999999999998,
                                    ),
                                ),
                                'symbol' => '°C',
                            ),
                            'FAHRENHEIT' => array(
                                'convert' => array(
                                    0 => array(
                                        'sub' => 32,
                                    ),
                                    1 => array(
                                        'div' => 1.8,
                                    ),
                                    2 => array(
                                        'add' => 273.14999999999998,
                                    ),
                                ),
                                'symbol' => '°F',
                            ),
                            'KELVIN' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => '°K',
                            ),
                            'RANKINE' => array(
                                'convert' => array(
                                    0 => array(
                                        'div' => 1.8,
                                    ),
                                ),
                                'symbol' => '°R',
                            ),
                            'REAUMUR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1.25,
                                    ),
                                    1 => array(
                                        'add' => 273.14999999999998,
                                    ),
                                ),
                                'symbol' => '°r',
                            ),
                        ),
                    ),
                    'Volume' => array(
                        'standard' => 'CUBIC_METER',
                        'units' => array(
                            'CUBIC_MILLIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1.0000000000000001E-9,
                                    ),
                                ),
                                'symbol' => 'mm³',
                            ),
                            'CUBIC_CENTIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 9.9999999999999995E-7,
                                    ),
                                ),
                                'symbol' => 'cm³',
                            ),
                            'MILLILITER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 9.9999999999999995E-7,
                                    ),
                                ),
                                'symbol' => 'ml',
                            ),
                            'CENTILITER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1.0000000000000001E-5,
                                    ),
                                ),
                                'symbol' => 'cl',
                            ),
                            'DECILITER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.0001,
                                    ),
                                ),
                                'symbol' => 'dl',
                            ),
                            'CUBIC_DECIMETER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'dm³',
                            ),
                            'LITER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'l',
                            ),
                            'CUBIC_METER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'm³',
                            ),
                            'OUNCE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.00454609,
                                    ),
                                    1 => array(
                                        'div' => 160,
                                    ),
                                ),
                                'symbol' => 'oz',
                            ),
                            'PINT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.00454609,
                                    ),
                                    1 => array(
                                        'div' => 8,
                                    ),
                                ),
                                'symbol' => 'pt',
                            ),
                            'BARREL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.16365924000000001,
                                    ),
                                ),
                                'symbol' => 'bbl',
                            ),
                            'GALLON' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.00454609,
                                    ),
                                ),
                                'symbol' => 'gal',
                            ),
                            'CUBIC_FOOT' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 6.5411915900000004,
                                    ),
                                    1 => array(
                                        'div' => 231,
                                    ),
                                ),
                                'symbol' => 'ft³',
                            ),
                            'CUBIC_INCH' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.0037854118000000001,
                                    ),
                                    1 => array(
                                        'div' => 231,
                                    ),
                                ),
                                'symbol' => 'in³',
                            ),
                            'CUBIC_YARD' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.76455486100000003,
                                    ),
                                ),
                                'symbol' => 'yd³',
                            ),
                        ),
                    ),
                    'Weight' => array(
                        'standard' => 'KILOGRAM',
                        'units' => array(
                            'MILLIGRAM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 9.9999999999999995E-7,
                                    ),
                                ),
                                'symbol' => 'mg',
                            ),
                            'GRAM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'g',
                            ),
                            'KILOGRAM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'kg',
                            ),
                            'TON' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 't',
                            ),
                            'GRAIN' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 6.4798909999999995E-5,
                                    ),
                                ),
                                'symbol' => 'gr',
                            ),
                            'DENIER' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.0012750000000000001,
                                    ),
                                ),
                                'symbol' => 'denier',
                            ),
                            'ONCE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.030589999999999999,
                                    ),
                                ),
                                'symbol' => 'once',
                            ),
                            'MARC' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.24475,
                                    ),
                                ),
                                'symbol' => 'marc',
                            ),
                            'LIVRE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.48949999999999999,
                                    ),
                                ),
                                'symbol' => 'livre',
                            ),
                            'OUNCE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.45359237000000002,
                                    ),
                                    1 => array(
                                        'div' => 16,
                                    ),
                                ),
                                'symbol' => 'oz',
                            ),
                            'POUND' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.45359237000000002,
                                    ),
                                ),
                                'symbol' => 'lb',
                            ),
                        ),
                    ),
                    'Pressure' => array(
                        'standard' => 'BAR',
                        'units' => array(
                            'BAR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'Bar',
                            ),
                            'PASCAL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1.0000000000000001E-5,
                                    ),
                                ),
                                'symbol' => 'Pa',
                            ),
                            'HECTOPASCAL' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'hPa',
                            ),
                            'MILLIBAR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.001,
                                    ),
                                ),
                                'symbol' => 'mBar',
                            ),
                            'ATM' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 0.98692299999999999,
                                    ),
                                ),
                                'symbol' => 'atm',
                            ),
                            'PSI' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 14.503769853730221,
                                    ),
                                ),
                                'symbol' => 'PSI',
                            ),
                            'TORR' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 750.06375541921,
                                    ),
                                ),
                                'symbol' => 'Torr',
                            ),
                            'MMHG' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 750.06375541921,
                                    ),
                                ),
                                'symbol' => 'mmHg',
                            ),
                        ),
                    ),
                    'Energy' => array(
                        'standard' => 'JOULE',
                        'units' => array(
                            'JOULE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'J',
                            ),
                            'CALORIE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 4.1840000000000002,
                                    ),
                                ),
                                'symbol' => 'cal',
                            ),
                            'KILOCALORIE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 4184,
                                    ),
                                ),
                                'symbol' => 'kcal',
                            ),
                            'KILOJOULE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1000,
                                    ),
                                ),
                                'symbol' => 'kJ',
                            ),
                        ),
                    ),
                    'CaseBox' => array(
                        'standard' => 'PIECE',
                        'units' => array(
                            'PIECE' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 1,
                                    ),
                                ),
                                'symbol' => 'Pc',
                            ),
                            'DOZEN' => array(
                                'convert' => array(
                                    0 => array(
                                        'mul' => 12,
                                    ),
                                ),
                                'symbol' => 'Dz',
                            ),
                        ),
                    ),
                ),
            ),
            'akeneo_batch.entity.warning.class' => 'Akeneo\\Component\\Batch\\Model\\Warning',
            'akeneo_batch.entity.job_instance.class' => 'Akeneo\\Component\\Batch\\Model\\JobInstance',
            'akeneo_batch.entity.job_execution.class' => 'Akeneo\\Component\\Batch\\Model\\JobExecution',
            'akeneo_batch.entity.step_execution.class' => 'Akeneo\\Component\\Batch\\Model\\StepExecution',
            'akeneo_batch.job.batch_status.class' => 'Akeneo\\Component\\Batch\\Job\\BatchStatus',
            'akeneo_batch.job.job_parameters.class' => 'Akeneo\\Component\\Batch\\Job\\JobParameters',
            'akeneo_batch.job_parameters_factory.class' => 'Akeneo\\Component\\Batch\\Job\\JobParametersFactory',
            'akeneo_batch.job_repository.class' => 'Akeneo\\Bundle\\BatchBundle\\Job\\DoctrineJobRepository',
            'akeneo_batch.job.job_registry.class' => 'Akeneo\\Component\\Batch\\Job\\JobRegistry',
            'akeneo_batch.job.job_parameters.default_values_provider_registry.class' => 'Akeneo\\Component\\Batch\\Job\\JobParameters\\DefaultValuesProviderRegistry',
            'akeneo_batch.job.job_parameters.constraint_collection_provider_registry.class' => 'Akeneo\\Component\\Batch\\Job\\JobParameters\\ConstraintCollectionProviderRegistry',
            'akeneo_batch.job.job_parameters.empty_values_provider.class' => 'Akeneo\\Component\\Batch\\Job\\JobParameters\\EmptyDefaultValuesProvider',
            'akeneo_batch.job.job_parameters.empty_constraint_collection_provider.class' => 'Akeneo\\Component\\Batch\\Job\\JobParameters\\EmptyConstraintCollectionProvider',
            'akeneo_batch.job.job_parameters_validator.class' => 'Akeneo\\Component\\Batch\\Job\\JobParametersValidator',
            'akeneo_batch.job_instance_factory.class' => 'Akeneo\\Bundle\\BatchBundle\\Job\\JobInstanceFactory',
            'akeneo_batch.logger_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\LoggerSubscriber',
            'akeneo_batch.notification_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\NotificationSubscriber',
            'akeneo_batch.logger.batch_log_handler.class' => 'Akeneo\\Bundle\\BatchBundle\\Monolog\\Handler\\BatchLogHandler',
            'akeneo_batch.mail_notifier.class' => 'Akeneo\\Bundle\\BatchBundle\\Notification\\MailNotifier',
            'akeneo_batch.set_job_execution_log_file_subscriber.class' => 'Akeneo\\Bundle\\BatchBundle\\EventListener\\SetJobExecutionLogFileSubscriber',
            'akeneo_batch.manager.job_execution.class' => 'Akeneo\\Bundle\\BatchBundle\\Manager\\JobExecutionManager',
            'akeneo_batch.launcher.simple_job_launcher.class' => 'Akeneo\\Bundle\\BatchBundle\\Launcher\\SimpleJobLauncher',
            'akeneo_batch.connectors_config' => NULL,
            'akeneo_batch.jobs_config' => NULL,
            'akeneo_batch.validator.job_instance.class' => 'Akeneo\\Bundle\\BatchBundle\\Validator\\Constraints\\JobInstanceValidator',
            'akeneo_batch.updater.job_instance.class' => 'Akeneo\\Component\\Batch\\Updater\\JobInstanceUpdater',
            'akeneo_batch.mail_notifier.sender_email' => 'batch@example.com',
            'akeneo_buffer.factory.buffer.class' => 'Akeneo\\Component\\Buffer\\BufferFactory',
            'akeneo_storage_utils.mapping_overrides' => array(
                0 => array(
                    'original' => 'Pim\\Component\\Catalog\\Model\\ProductValue',
                    'override' => 'Acme\\Bundle\\AppBundle\\Model\\ProductValue',
                ),
            ),
            'akeneo_storage_utils.storage_driver' => 'doctrine/orm',
            'akeneo_storage_utils.storage_driver.doctrine/orm' => true,
            'doctrine.entity_repository.class' => 'Doctrine\\ORM\\EntityRepository',
            'doctrine.document_repository.class' => 'Doctrine\\ODM\\MongoDB\\DocumentRepository',
            'akeneo_storage_utils.doctrine.smart_manager_registry.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\SmartManagerRegistry',
            'akeneo_storage_utils.doctrine.table_name_builder.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\TableNameBuilder',
            'akeneo_storage_utils.doctrine.object_detacher.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Detacher\\ObjectDetacher',
            'akeneo_storage_utils.event_subscriber.resolve_target_repository.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\EventSubscriber\\ResolveTargetRepositorySubscriber',
            'akeneo_storage_utils.doctrine.orm_mappings_override_configurator.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\MappingsOverrideConfigurator',
            'akeneo_storage_utils.event_subscriber.configure_orm_mappings.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\EventSubscriber\\ConfigureMappingsSubscriber',
            'akeneo_storage_utils.factory.referenced_collection.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\MongoDBODM\\Collections\\ReferencedCollectionFactory',
            'akeneo_storage_utils.factory.simple.class' => 'Akeneo\\Component\\StorageUtils\\Factory\\SimpleFactory',
            'akeneo_storage_utils.remover.base.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Remover\\BaseRemover',
            'akeneo_storage_utils.remover.base_options_resolver.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Remover\\BaseRemovingOptionsResolver',
            'akeneo_storage_utils.repository.base_cached_object.class' => 'Akeneo\\Component\\StorageUtils\\Repository\\BaseCachedObjectRepository',
            'akeneo_storage_utils.saver.base.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Saver\\BaseSaver',
            'akeneo_storage_utils.saver.base_options_resolver.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Saver\\BaseSavingOptionsResolver',
            'akeneo_storage_utils.doctrine.orm.cursor.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\Cursor',
            'akeneo_storage_utils.doctrine.orm.cursor_factory.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\CursorFactory',
            'akeneo_file_storage.file_storage.file.file_storer.class' => 'Akeneo\\Component\\FileStorage\\File\\FileStorer',
            'akeneo_file_storage.file_storage.file.file_fetcher.class' => 'Akeneo\\Component\\FileStorage\\File\\FileFetcher',
            'akeneo_file_storage.file_storage.file.output_file_fetcher.class' => 'Akeneo\\Component\\FileStorage\\File\\OutputFileFetcher',
            'akeneo_file_storage.file_storage.file_info_factory.class' => 'Akeneo\\Component\\FileStorage\\FileInfoFactory',
            'akeneo_file_storage.file_storage.path_generator.class' => 'Akeneo\\Component\\FileStorage\\PathGenerator',
            'akeneo_file_storage.file_storage.filesystem_provider.class' => 'Akeneo\\Component\\FileStorage\\FilesystemProvider',
            'akeneo_file_storage.file_storage.formater.bytes.class' => 'Akeneo\\Component\\FileStorage\\Formater\\BytesFormater',
            'akeneo_file_storage.form.type.file_info.class' => 'Akeneo\\Bundle\\FileStorageBundle\\Form\\Type\\FileInfoType',
            'akeneo_file_storage.model.file_info.class' => 'Akeneo\\Component\\FileStorage\\Model\\FileInfo',
            'akeneo_file_storage.model.file_info.interface' => 'Akeneo\\Component\\FileStorage\\Model\\FileInfoInterface',
            'akeneo_file_storage.repository.file_info.class' => 'Akeneo\\Bundle\\FileStorageBundle\\Doctrine\\ORM\\Repository\\FileInfoRepository',
            'akeneo_file_storage.saver.file.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Saver\\BaseSaver',
            'oro_navigation.entity.navigation_history_item.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\NavigationHistoryItem',
            'oro_navigation.repository.navigation_history.class' => 'Oro\\Bundle\\NavigationBundle\\Entity\\Repository\\HistoryItemRepository',
            'pim_filter.form.type.filter.scope_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ScopeFilterType',
            'pim_filter.form.type.filter.category_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\CategoryFilterType',
            'pim_filter.form.type.filter.metric_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\MetricFilterType',
            'pim_filter.form.type.filter.price_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\PriceFilterType',
            'pim_filter.form.type.filter.ajax_choice_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\AjaxChoiceFilterType',
            'pim_filter.form.type.filter.boolean_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\Filter\\BooleanFilterType',
            'pim_filter.form.type.category_class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\CategoryType',
            'pim_filter.form.type.date_range.class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\DateRangeType',
            'pim_filter.form.type.date_time_range.class' => 'Pim\\Bundle\\FilterBundle\\Form\\Type\\DateTimeRangeType',
            'pim_filter.product_utility.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductFilterUtility',
            'pim_filter.datasource.orm_adapter.class' => 'Pim\\Bundle\\FilterBundle\\Datasource\\Orm\\OrmFilterDatasourceAdapter',
            'pim_filter.datasource.product_orm_adapter.class' => 'Pim\\Bundle\\FilterBundle\\Datasource\\Orm\\OrmFilterProductDatasourceAdapter',
            'pim_filter.ajax_choice_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\AjaxChoiceFilter',
            'pim_filter.product_scope_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\ScopeFilter',
            'pim_filter.product_groups_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\GroupsFilter',
            'pim_filter.product_family_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\FamilyFilter',
            'pim_filter.product_completeness_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\CompletenessFilter',
            'pim_filter.product_date_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\DateTimeRangeFilter',
            'pim_filter.category_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\CategoryFilter',
            'pim_filter.product_enabled_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\EnabledFilter',
            'pim_filter.product_in_group_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\InGroupFilter',
            'pim_filter.product_is_associated_filter.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\Product\\IsAssociatedFilter',
            'pim_filter.product_value_string.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\StringFilter',
            'pim_filter.product_value_choice.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\ChoiceFilter',
            'pim_filter.product_value_number.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\NumberFilter',
            'pim_filter.product_value_date.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\DateRangeFilter',
            'pim_filter.product_value_datetime.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\DateTimeRangeFilter',
            'pim_filter.product_value_boolean.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\BooleanFilter',
            'pim_filter.product_value_metric.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\MetricFilter',
            'pim_filter.product_value_price.class' => 'Pim\\Bundle\\FilterBundle\\Filter\\ProductValue\\PriceFilter',
            'pim_user.context.user.class' => 'Pim\\Bundle\\UserBundle\\Context\\UserContext',
            'pim_user.controller.user_rest.class' => 'Pim\\Bundle\\UserBundle\\Controller\\UserRestController',
            'pim_user.controller.security_rest.class' => 'Pim\\Bundle\\UserBundle\\Controller\\SecurityRestController',
            'pim_user.controller.user_group_rest.class' => 'Pim\\Bundle\\UserBundle\\Controller\\UserGroupRestController',
            'pim_user.entity.role.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Role',
            'pim_user.entity.group.class' => 'Oro\\Bundle\\UserBundle\\Entity\\Group',
            'pim_user.entity.user.class' => 'Pim\\Bundle\\UserBundle\\Entity\\User',
            'pim_user.entity.user_api.class' => 'Oro\\Bundle\\UserBundle\\Entity\\UserApi',
            'pim_user.event_subscriber.user_preferences.class' => 'Pim\\Bundle\\UserBundle\\EventSubscriber\\UserPreferencesSubscriber',
            'pim_user.event_subscriber.group.class' => 'Pim\\Bundle\\UserBundle\\EventSubscriber\\GroupSubscriber',
            'pim_locale.locale_subscriber.class' => 'Pim\\Bundle\\UserBundle\\EventSubscriber\\LocaleSubscriber',
            'pim_locale.locale_listener.class' => 'Pim\\Bundle\\UserBundle\\EventListener\\LocaleListener',
            'pim_user.form.type.user.class' => 'Pim\\Bundle\\UserBundle\\Form\\Type\\UserType',
            'pim_user.form.type.acl_collection.class' => 'Pim\\Bundle\\UserBundle\\Form\\Type\\PrivilegeCollectionType',
            'pim_user.form.subscriber.user_preferences.class' => 'Pim\\Bundle\\UserBundle\\Form\\Subscriber\\UserPreferencesSubscriber',
            'pim_user.form.type.acl_access_level_selector.class' => 'Pim\\Bundle\\UserBundle\\Form\\Type\\AclAccessLevelSelectorType',
            'pim_user.normalizer.user.class' => 'Pim\\Bundle\\UserBundle\\Normalizer\\UserNormalizer',
            'pim_user.provider.user.class' => 'Pim\\Bundle\\UserBundle\\Provider\\UserProvider',
            'pim_user.repository.role.class' => 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\RoleRepository',
            'pim_user.repository.group.class' => 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\GroupRepository',
            'pim_user.repository.user.class' => 'Pim\\Bundle\\UserBundle\\Entity\\Repository\\UserRepository',
            'pim_user.twig.acl_groups_extension.class' => 'Pim\\Bundle\\UserBundle\\Twig\\AclGroupsExtension',
            'pim_user.updater.user.class' => 'Pim\\Component\\User\\Updater\\UserUpdater',
            'pim_user.updater.group.class' => 'Pim\\Component\\User\\Updater\\GroupUpdater',
            'pim_user.updater.role.class' => 'Pim\\Component\\User\\Updater\\RoleUpdater',
            'pim_user.view_element.visibility_checker.groups_and_roles.class' => 'Pim\\Bundle\\UserBundle\\ViewElement\\Checker\\GroupsAndRolesVisibilityChecker',
            'pim_user.view_element.user.tab.general.template' => 'PimUserBundle:User:Tab/general.html.twig',
            'pim_user.view_element.user.tab.additional.template' => 'PimUserBundle:User:Tab/additional.html.twig',
            'pim_user.view_element.user.tab.group_and_role.template' => 'PimUserBundle:User:Tab/group_and_role.html.twig',
            'pim_user.view_element.user.tab.password.template' => 'PimUserBundle:User:Tab/password.html.twig',
            'pim_user.view_element.user.tab.interfaces.template' => 'PimUserBundle:User:Tab/interfaces.html.twig',
            'pim_jsfv.generator.class' => 'Pim\\Bundle\\JsFormValidationBundle\\Generator\\FormValidationScriptGenerator',
            'pim_analytics.controller.data.class' => 'Pim\\Bundle\\AnalyticsBundle\\Controller\\DataController',
            'pim_analytics.controller.system_info.class' => 'Pim\\Bundle\\AnalyticsBundle\\Controller\\SystemInfoController',
            'pim_analytics.data_collector.chained.class' => 'Akeneo\\Component\\Analytics\\ChainedDataCollector',
            'pim_analytics.data_collector.request.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\RequestDataCollector',
            'pim_analytics.data_collector.token_storage.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\TokenStorageDataCollector',
            'pim_analytics.data_collector.operating_system.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\OSDataCollector',
            'pim_analytics.data_collector.version.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\VersionDataCollector',
            'pim_analytics.data_collector.database.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\DBDataCollector',
            'pim_analytics.data_collector.bundles.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\BundlesDataCollector',
            'pim_analytics.data_collector.storage.class' => 'Pim\\Bundle\\AnalyticsBundle\\DataCollector\\StorageDataCollector',
            'pim_analytics.twig.update_extension.class' => 'Pim\\Bundle\\AnalyticsBundle\\Twig\\UpdateExtension',
            'pim_dashboard.controller.widget.class' => 'Pim\\Bundle\\DashboardBundle\\Controller\\WidgetController',
            'pim_dashboard.widget.registry.class' => 'Pim\\Bundle\\DashboardBundle\\Widget\\Registry',
            'pim_dashboard.widget.completeness.class' => 'Pim\\Bundle\\DashboardBundle\\Widget\\CompletenessWidget',
            'pim_dashboard.widget.links.class' => 'Pim\\Bundle\\DashboardBundle\\Widget\\LinksWidget',
            'pim_dashboard.widget.last_operations.class' => 'Pim\\Bundle\\DashboardBundle\\Widget\\LastOperationsWidget',
            'pim_installer.fixture_loader.path_provider.class' => 'Pim\\Bundle\\InstallerBundle\\FixtureLoader\\FixturePathProvider',
            'pim_installer.fixture_loader.job_instances_builder.class' => 'Pim\\Bundle\\InstallerBundle\\FixtureLoader\\JobInstancesBuilder',
            'pim_installer.fixture_loader.job_instances_configurator.class' => 'Pim\\Bundle\\InstallerBundle\\FixtureLoader\\JobInstancesConfigurator',
            'pim_installer.fixture_loader.job_loader.class' => 'Pim\\Bundle\\InstallerBundle\\FixtureLoader\\FixtureJobLoader',
            'pim_installer.fixture_loader.job_loader.config_file' => 'PimInstallerBundle/Resources/config/fixtures_jobs.yml',
            'pim_installer.connector_name.data_fixtures' => 'Data fixtures',
            'pim_installer.job_name.fixtures_category_csv' => 'fixtures_category_csv',
            'pim_installer.job_name.fixtures_attribute_group_csv' => 'fixtures_attribute_group_csv',
            'pim_installer.job_name.fixtures_channel_csv' => 'fixtures_channel_csv',
            'pim_installer.job_name.fixtures_locale_csv' => 'fixtures_locale_csv',
            'pim_installer.job_name.fixtures_currency_csv' => 'fixtures_currency_csv',
            'pim_installer.job_name.fixtures_group_type_csv' => 'fixtures_group_type_csv',
            'pim_installer.job_name.fixtures_association_type_csv' => 'fixtures_association_type_csv',
            'pim_installer.job_name.fixtures_attribute_csv' => 'fixtures_attribute_csv',
            'pim_installer.job_name.fixtures_attribute_options_csv' => 'fixtures_attribute_options_csv',
            'pim_installer.job_name.fixtures_family_csv' => 'fixtures_family_csv',
            'pim_installer.job_name.fixtures_variant_group_csv' => 'fixtures_variant_group_csv',
            'pim_installer.job_name.fixtures_product_csv' => 'fixtures_product_csv',
            'pim_installer.job_name.fixtures_job_yml' => 'fixtures_job_yml',
            'pim_installer.job_name.fixtures_user_csv' => 'fixtures_user_csv',
            'pim_installer.job_name.fixtures_user_role_csv' => 'fixtures_user_role_csv',
            'pim_installer.job_name.fixtures_user_group_csv' => 'fixtures_user_group_csv',
            'pim_installer.job_name.fixtures_group_csv' => 'fixtures_group_csv',
            'pim_installer.job.fixture_type' => 'fixtures',
            'pim_installer.yaml_persister.class' => 'Pim\\Bundle\\InstallerBundle\\Persister\\YamlPersister',
            'pim_installer.directories_registry.class' => 'Pim\\Bundle\\InstallerBundle\\PimDirectoriesRegistry',
            'pim_ui.controller.ajax_option.class' => 'Pim\\Bundle\\UIBundle\\Controller\\AjaxOptionController',
            'pim_ui.form.type.ajax_entity.class' => 'Pim\\Bundle\\UIBundle\\Form\\Type\\AjaxEntityType',
            'pim_ui.form.type.ajax_reference_data.class' => 'Pim\\Bundle\\UIBundle\\Form\\Type\\AjaxReferenceDataType',
            'pim_ui.form.type.number.class' => 'Pim\\Bundle\\UIBundle\\Form\\Type\\NumberType',
            'pim_ui.form.type.date.class' => 'Pim\\Bundle\\UIBundle\\Form\\Type\\DateType',
            'pim_ui.form.type.switch.class' => 'Pim\\Bundle\\UIBundle\\Form\\Type\\SwitchType',
            'pim_ui.form.transformer.ajax_entity.factory.class' => 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxEntityTransformerFactory',
            'pim_ui.form.transformer.ajax_entity.class' => 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxEntityTransformer',
            'pim_ui.form.transformer.ajax_reference_data.factory.class' => 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxReferenceDataTransformerFactory',
            'pim_ui.form.transformer.ajax_reference_data.class' => 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxReferenceDataTransformer',
            'pim_ui.form.transformer.ajax_creatable_entity.factory.class' => 'Pim\\Bundle\\UIBundle\\Form\\Transformer\\AjaxCreatableEntityTransformerFactory',
            'pim_ui.twig.extension.class' => 'Pim\\Bundle\\UIBundle\\Twig\\UiExtension',
            'pim_ui.twig.style_extension.class' => 'Pim\\Bundle\\UIBundle\\Twig\\StyleExtension',
            'pim_ui.twig.loading_message_extension.class' => 'Pim\\Bundle\\UIBundle\\Twig\\LoadingMessageExtension',
            'pim_ui.loading_messages_file' => '@PimUIBundle/Resources/config/loading_messages.txt',
            'pim_ui.twig.ceil.class' => 'Pim\\Bundle\\UIBundle\\Twig\\CeilExtension',
            'pim_ui.twig.md5.class' => 'Pim\\Bundle\\UIBundle\\Twig\\Md5Extension',
            'pim_ui.twig.date.class' => 'Pim\\Bundle\\UIBundle\\Twig\\DateExtension',
            'pim_ui.wrap_class' => 'block-wrap',
            'pim_ui.placeholders' => array(
                'head_style' => array(
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroAsseticBundle:Assets:oro_css.html.twig',
                            'name' => 'assets_css',
                        ),
                    ),
                    'label' => 'Head styles',
                ),
                'scripts_before' => array(
                    'label' => 'Scripts Before',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:Js:dot.menu.js.twig',
                            'name' => 'dot_menu_js',
                        ),
                        1 => array(
                            'order' => 200,
                            'template' => 'OroNavigationBundle:Js:pinbar.js.twig',
                            'name' => 'pinbar_js',
                        ),
                    ),
                ),
                'scripts_after' => array(
                    'label' => 'Scripts After',
                    'items' => array(
                    ),
                ),
                'hash_nav' => array(
                    'label' => 'Hash Navigation',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:HashNav:script.js.twig',
                            'name' => 'hashNavigation',
                        ),
                    ),
                ),
                'navbar' => array(
                    'label' => 'Navigation Bar',
                    'items' => NULL,
                ),
                'application_menu' => array(
                    'label' => 'Application Menu',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:ApplicationMenu:applicationMenu.html.twig',
                            'name' => 'application_menu',
                        ),
                    ),
                ),
                'before_navigation' => array(
                    'label' => 'Top Navigation Before',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:ApplicationMenu:dotsMenu.html.twig',
                            'name' => 'dots_menu',
                        ),
                    ),
                ),
                'after_navigation' => array(
                    'label' => 'Top Navigation After',
                ),
                'pin_button' => array(
                    'label' => 'Pinbar buttons',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:ApplicationMenu:pinButton.html.twig',
                            'name' => 'pin_button',
                        ),
                    ),
                ),
                'breadcrumb' => array(
                    'label' => 'Breadcrumbs',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:ApplicationMenu:breabcrumbs.html.twig',
                            'name' => 'breadcrumbs',
                        ),
                    ),
                ),
                'requirejs_config_extend' => array(
                    'items' => array(
                        0 => array(
                            'order' => 10,
                            'template' => 'PimUIBundle::requirejs.config.js.twig',
                            'name' => 'ui_requirejs_config',
                        ),
                        1 => array(
                            'order' => 100,
                            'template' => 'OroTranslationBundle::requirejs.config.js.twig',
                            'name' => 'translation_requirejs_config',
                        ),
                        2 => array(
                            'order' => 100,
                            'template' => 'OroNavigationBundle:Js:requirejs.config.js.twig',
                            'name' => 'routing_requirejs_config',
                        ),
                    ),
                    'lable' => 'RequireJS Configuration Run Time Extend',
                ),
                'user_menu' => array(
                    'items' => array(
                        0 => array(
                            'order' => 50,
                            'template' => 'PimNotificationBundle:Default:notifications.html.twig',
                            'name' => 'notifications',
                        ),
                        1 => array(
                            'order' => 100,
                            'template' => 'PimUserBundle:Menu:menuProfile.html.twig',
                            'name' => 'menu_user',
                        ),
                        2 => array(
                            'order' => 200,
                            'template' => 'PimUIBundle:Default:help.html.twig',
                            'name' => 'help',
                        ),
                    ),
                    'label' => 'Profile menu',
                ),
                'header_logo' => array(
                    'label' => 'Header Logo',
                    'items' => array(
                        0 => array(
                            'order' => 100,
                            'template' => 'PimUIBundle:Default:logo.html.twig',
                            'name' => 'logo',
                        ),
                    ),
                ),
                'head_script' => array(
                    'label' => 'Head scripts',
                ),
            ),
            'pim_notification.controller.notification.class' => 'Pim\\Bundle\\NotificationBundle\\Controller\\NotificationController',
            'pim_notification.email.email_notifier.class' => 'Pim\\Bundle\\NotificationBundle\\Email\\MailNotifier',
            'pim_notification.entity.notification.class' => 'Pim\\Bundle\\NotificationBundle\\Entity\\Notification',
            'pim_notification.entity.user_notification.class' => 'Pim\\Bundle\\NotificationBundle\\Entity\\UserNotification',
            'pim_notification.event_subscriber.job_execution_notifier.class' => 'Pim\\Bundle\\NotificationBundle\\EventSubscriber\\JobExecutionNotifier',
            'pim_notification.registry.factory.notification.class' => 'Pim\\Bundle\\NotificationBundle\\Factory\\NotificationFactoryRegistry',
            'pim_notification.factory.user_notification.class' => 'Pim\\Bundle\\NotificationBundle\\Factory\\UserNotificationFactory',
            'pim_notification.manager.notification.class' => 'Pim\\Bundle\\NotificationBundle\\Manager\\NotificationManager',
            'pim_notification.notifier.class' => 'Pim\\Bundle\\NotificationBundle\\Notifier',
            'pim_notification.repository.user_notification.class' => 'Pim\\Bundle\\NotificationBundle\\Entity\\Repository\\UserNotificationRepository',
            'pim_notification.twig.notification_extension.class' => 'Pim\\Bundle\\NotificationBundle\\Twig\\NotificationExtension',
            'pim_catalog.localization.decimal_separators' => array(
                '.' => 'dot (.)',
                ',' => 'comma (,)',
                '٫' => 'arabic decimal separator (٫)',
            ),
            'pim_catalog.localization.date_formats' => array(
                'yyyy-MM-dd' => 'yyyy-mm-dd',
                'yyyy/MM/dd' => 'yyyy/mm/dd',
                'MM/dd/yyyy' => 'mm/dd/yyyy',
                'dd/MM/yyyy' => 'dd/mm/yyyy',
                'dd.MM.yyyy' => 'dd.mm.yyyy',
            ),
            'pim_catalog.registry.attribute_type.class' => 'Pim\\Component\\Catalog\\AttributeTypeRegistry',
            'pim_catalog.attribute_type.identifier.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\IdentifierType',
            'pim_catalog.attribute_type.text.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\TextType',
            'pim_catalog.attribute_type.textarea.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\TextAreaType',
            'pim_catalog.attribute_type.multiselect.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\OptionMultiSelectType',
            'pim_catalog.attribute_type.simpleselect.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\OptionSimpleSelectType',
            'pim_catalog.attribute_type.price_collection.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\PriceCollectionType',
            'pim_catalog.attribute_type.number.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\NumberType',
            'pim_catalog.attribute_type.boolean.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\BooleanType',
            'pim_catalog.attribute_type.date.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\DateType',
            'pim_catalog.attribute_type.file.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\FileType',
            'pim_catalog.attribute_type.image.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\ImageType',
            'pim_catalog.attribute_type.metric.class' => 'Pim\\Bundle\\CatalogBundle\\AttributeType\\MetricType',
            'pim_catalog.builder.product.class' => 'Pim\\Component\\Catalog\\Builder\\ProductBuilder',
            'pim_catalog.builder.product_template.class' => 'Pim\\Component\\Catalog\\Builder\\ProductTemplateBuilder',
            'pim_catalog.builder.choices.class' => 'Pim\\Bundle\\CatalogBundle\\Builder\\ChoicesBuilder',
            'pim_catalog.data_collector.database.class' => 'Pim\\Bundle\\CatalogBundle\\Collector\\DatabaseCollector',
            'pim_catalog.comparator.registry.class' => 'Pim\\Component\\Catalog\\Comparator\\ComparatorRegistry',
            'pim_catalog.comparator.attribute.file.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\FileComparator',
            'pim_catalog.comparator.attribute.prices.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\PricesComparator',
            'pim_catalog.comparator.attribute.metric.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\MetricComparator',
            'pim_catalog.comparator.attribute.option.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\OptionComparator',
            'pim_catalog.comparator.attribute.options.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\OptionsComparator',
            'pim_catalog.comparator.attribute.scalar.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\ScalarComparator',
            'pim_catalog.comparator.attribute.boolean.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\BooleanComparator',
            'pim_catalog.comparator.attribute.number.class' => 'Pim\\Component\\Catalog\\Comparator\\Attribute\\NumberComparator',
            'pim_catalog.comparator.field.boolean.class' => 'Pim\\Component\\Catalog\\Comparator\\Field\\BooleanComparator',
            'pim_catalog.comparator.field.scalar.class' => 'Pim\\Component\\Catalog\\Comparator\\Field\\ScalarComparator',
            'pim_catalog.comparator.field.array.class' => 'Pim\\Component\\Catalog\\Comparator\\Field\\ArrayComparator',
            'pim_catalog.completeness.checker.chained.class' => 'Pim\\Component\\Catalog\\Completeness\\Checker\\ChainedProductValueCompleteChecker',
            'pim_catalog.completeness.checker.media.class' => 'Pim\\Component\\Catalog\\Completeness\\Checker\\MediaCompleteChecker',
            'pim_catalog.completeness.checker.metric.class' => 'Pim\\Component\\Catalog\\Completeness\\Checker\\MetricCompleteChecker',
            'pim_catalog.completeness.checker.price.class' => 'Pim\\Component\\Catalog\\Completeness\\Checker\\PriceCompleteChecker',
            'pim_catalog.completeness.checker.empty.class' => 'Pim\\Component\\Catalog\\Completeness\\Checker\\EmptyChecker',
            'pim_catalog.command_launcher.class' => 'Akeneo\\Component\\Console\\CommandLauncher',
            'pim_catalog.context.catalog.class' => 'Pim\\Bundle\\CatalogBundle\\Context\\CatalogContext',
            'pim_catalog.entity.product.class' => 'Pim\\Component\\Catalog\\Model\\Product',
            'pim_catalog.entity.product_value.class' => 'Pim\\Component\\Catalog\\Model\\ProductValue',
            'pim_catalog.entity.association.class' => 'Pim\\Component\\Catalog\\Model\\Association',
            'pim_catalog.entity.completeness.class' => 'Pim\\Component\\Catalog\\Model\\Completeness',
            'pim_catalog.entity.association_type.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationType',
            'pim_catalog.entity.association_type_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AssociationTypeTranslation',
            'pim_catalog.entity.category.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Category',
            'pim_catalog.entity.category_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\CategoryTranslation',
            'pim_catalog.entity.group.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Group',
            'pim_catalog.entity.group_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupTranslation',
            'pim_catalog.entity.group_type.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupType',
            'pim_catalog.entity.group_type_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\GroupTypeTranslation',
            'pim_catalog.entity.attribute.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Attribute',
            'pim_catalog.entity.attribute_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeTranslation',
            'pim_catalog.entity.attribute_group.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroup',
            'pim_catalog.entity.attribute_group_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeGroupTranslation',
            'pim_catalog.entity.attribute_option.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOption',
            'pim_catalog.entity.attribute_option_value.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeOptionValue',
            'pim_catalog.entity.attribute_requirement.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\AttributeRequirement',
            'pim_catalog.entity.family.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Family',
            'pim_catalog.entity.family_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\FamilyTranslation',
            'pim_catalog.entity.channel.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Channel',
            'pim_catalog.entity.channel_translation.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\ChannelTranslation',
            'pim_catalog.entity.currency.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Currency',
            'pim_catalog.entity.locale.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\Locale',
            'pim_catalog.entity.metric.class' => 'Pim\\Component\\Catalog\\Model\\Metric',
            'pim_catalog.entity.product_price.class' => 'Pim\\Component\\Catalog\\Model\\ProductPrice',
            'pim_catalog.entity.product_template.class' => 'Pim\\Bundle\\CatalogBundle\\Entity\\ProductTemplate',
            'pim_catalog.event_subscriber.product_category.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ProductCategorySubscriber',
            'pim_catalog.event_subscriber.product_template_attribute.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ProductTemplateAttributeSubscriber',
            'pim_catalog.event_subscriber.create_attribute_requirement.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\CreateAttributeRequirementSubscriber',
            'pim_catalog.event_subscriber.localizable.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\LocalizableSubscriber',
            'pim_catalog.event_subscriber.scopable.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ScopableSubscriber',
            'pim_catalog.event_subscriber.timestampable.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\TimestampableSubscriber',
            'pim_catalog.event_subscriber.outdate_indexed_values.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\OutdateIndexedValuesSubscriber',
            'pim_catalog.event_subscriber.category.check_channels.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\Category\\CheckChannelsOnDeletionSubscriber',
            'pim_catalog.event_subscriber.currency_disabling.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\CurrencyDisablingSubscriber',
            'pim_catalog.event_subscriber.reset_unique_validation.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ResetUniqueValidationSubscriber',
            'pim_catalog.factory.family.class' => 'Pim\\Component\\Catalog\\Factory\\FamilyFactory',
            'pim_catalog.factory.attribute_requirement.class' => 'Pim\\Component\\Catalog\\Factory\\AttributeRequirementFactory',
            'pim_catalog.factory.metric.class' => 'Pim\\Component\\Catalog\\Factory\\MetricFactory',
            'pim_catalog.factory.group.class' => 'Pim\\Component\\Catalog\\Factory\\GroupFactory',
            'pim_catalog.factory.attribute.class' => 'Pim\\Component\\Catalog\\Factory\\AttributeFactory',
            'pim_catalog.factory.group_type.class' => 'Pim\\Component\\Catalog\\Factory\\GroupTypeFactory',
            'pim_catalog.factory.currency.class' => 'Pim\\Component\\Catalog\\Factory\\CurrencyFactory',
            'pim_catalog.factory.product_template.class' => 'Pim\\Component\\Catalog\\Factory\\ProductTemplateFactory',
            'pim_catalog.factory.product_value.class' => 'Pim\\Component\\Catalog\\Factory\\ProductValueFactory',
            'pim_catalog.filter.chained.class' => 'Pim\\Bundle\\CatalogBundle\\Filter\\ChainedFilter',
            'pim_enrich.filter.product_value.locale.class' => 'Pim\\Bundle\\CatalogBundle\\Filter\\ProductValueLocaleFilter',
            'pim_enrich.filter.product_value.channel.class' => 'Pim\\Bundle\\CatalogBundle\\Filter\\ProductValueChannelFilter',
            'pim_catalog.comparator.filter.product.class' => 'Pim\\Component\\Catalog\\Comparator\\Filter\\ProductFilter',
            'pim_catalog.comparator.filter.product_association.class' => 'Pim\\Component\\Catalog\\Comparator\\Filter\\ProductAssociationFilter',
            'pim_catalog.helper.locale.class' => 'Pim\\Bundle\\CatalogBundle\\Helper\\LocaleHelper',
            'pim_catalog.localization.factory.date.class' => 'Akeneo\\Component\\Localization\\Factory\\DateFactory',
            'pim_catalog.localization.factory.datetime.class' => 'Akeneo\\Component\\Localization\\Factory\\DateTimeFactory',
            'pim_catalog.localization.factory.number.class' => 'Akeneo\\Component\\Localization\\Factory\\NumberFactory',
            'pim_catalog.localization.factory.date.formats' => array(
                'en_US' => 'MM/dd/yyyy',
                'fr_FR' => 'dd/MM/yyyy',
            ),
            'pim_catalog.localization.factory.datetime.formats' => array(
                'en_US' => 'MM/dd/yyyy hh:mm a',
                'fr_FR' => 'dd/MM/yyyy HH:mm',
            ),
            'pim_catalog.localization.factory.currency.formats' => array(
                'en_US' => '¤#,##0.00',
                'fr_FR' => '#,##0.00 ¤',
            ),
            'pim_catalog.localization.localizer.registry.class' => 'Pim\\Component\\Catalog\\Localization\\Localizer\\LocalizerRegistry',
            'pim_catalog.localization.localizer.number.class' => 'Akeneo\\Component\\Localization\\Localizer\\NumberLocalizer',
            'pim_catalog.localization.localizer.date.class' => 'Akeneo\\Component\\Localization\\Localizer\\DateLocalizer',
            'pim_catalog.localization.localizer.price.class' => 'Pim\\Component\\Catalog\\Localization\\Localizer\\PriceLocalizer',
            'pim_catalog.localization.localizer.metric.class' => 'Pim\\Component\\Catalog\\Localization\\Localizer\\MetricLocalizer',
            'pim_catalog.localization.localizer.converter.class' => 'Pim\\Component\\Catalog\\Localization\\Localizer\\AttributeConverter',
            'pim_catalog.localization.presenter.registry.class' => 'Pim\\Component\\Catalog\\Localization\\Presenter\\PresenterRegistry',
            'pim_catalog.localization.presenter.prices.class' => 'Pim\\Component\\Catalog\\Localization\\Presenter\\PricesPresenter',
            'pim_catalog.localization.presenter.metric.class' => 'Pim\\Component\\Catalog\\Localization\\Presenter\\MetricPresenter',
            'pim_catalog.localization.presenter.number.class' => 'Akeneo\\Component\\Localization\\Presenter\\NumberPresenter',
            'pim_catalog.localization.presenter.date.class' => 'Akeneo\\Component\\Localization\\Presenter\\DatePresenter',
            'pim_catalog.localization.presenter.boolean.class' => 'Akeneo\\Component\\Localization\\Presenter\\BooleanPresenter',
            'pim_catalog.localization.translator.proxy.class' => 'Akeneo\\Component\\Localization\\TranslatorProxy',
            'pim_catalog.localization.constraint.number_format.class' => 'Akeneo\\Component\\Localization\\Validator\\Constraints\\NumberFormat',
            'pim_catalog.localization.validator.constraint.number_format.class' => 'Akeneo\\Component\\Localization\\Validator\\Constraints\\NumberFormatValidator',
            'pim_catalog.localization.constraint.date_format.class' => 'Akeneo\\Component\\Localization\\Validator\\Constraints\\DateFormat',
            'pim_catalog.localization.validator.constraint.date_format.class' => 'Akeneo\\Component\\Localization\\Validator\\Constraints\\DateFormatValidator',
            'pim_catalog.manager.attribute_options_sorter.class' => 'Pim\\Component\\Catalog\\Manager\\AttributeOptionsSorter',
            'pim_catalog.manager.attribute_group.class' => 'Pim\\Component\\Catalog\\Manager\\AttributeGroupManager',
            'pim_catalog.manager.completeness.class' => 'Pim\\Component\\Catalog\\Manager\\CompletenessManager',
            'pim_catalog.manager.product_template_media.class' => 'Pim\\Component\\Catalog\\Manager\\ProductTemplateMediaManager',
            'pim_catalog.applier.product_template.class' => 'Pim\\Component\\Catalog\\Manager\\ProductTemplateApplier',
            'pim_catalog.resolver.variant_group_attributes.class' => 'Pim\\Component\\Catalog\\Manager\\VariantGroupAttributesResolver',
            'pim_catalog.resolver.attribute_values.class' => 'Pim\\Component\\Catalog\\Manager\\AttributeValuesResolver',
            'pim_catalog.model.product.interface' => 'Pim\\Component\\Catalog\\Model\\ProductInterface',
            'pim_catalog.model.product_value.interface' => 'Pim\\Component\\Catalog\\Model\\ProductValueInterface',
            'pim_catalog.model.association.interface' => 'Pim\\Component\\Catalog\\Model\\AssociationInterface',
            'pim_catalog.model.completeness.interface' => 'Pim\\Component\\Catalog\\Model\\CompletenessInterface',
            'pim_catalog.model.association_type.interface' => 'Pim\\Component\\Catalog\\Model\\AssociationTypeInterface',
            'pim_catalog.model.category.interface' => 'Pim\\Component\\Catalog\\Model\\CategoryInterface',
            'pim_catalog.model.group.interface' => 'Pim\\Component\\Catalog\\Model\\GroupInterface',
            'pim_catalog.model.group_type.interface' => 'Pim\\Component\\Catalog\\Model\\GroupTypeInterface',
            'pim_catalog.model.attribute.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeInterface',
            'pim_catalog.model.attribute_group.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeGroupInterface',
            'pim_catalog.model.attribute_option.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeOptionInterface',
            'pim_catalog.model.attribute_option_value.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeOptionValueInterface',
            'pim_catalog.model.attribute_requirement.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeRequirementInterface',
            'pim_catalog.model.family.interface' => 'Pim\\Component\\Catalog\\Model\\FamilyInterface',
            'pim_catalog.model.channel.interface' => 'Pim\\Component\\Catalog\\Model\\ChannelInterface',
            'pim_catalog.model.currency.interface' => 'Pim\\Component\\Catalog\\Model\\CurrencyInterface',
            'pim_catalog.model.locale.interface' => 'Pim\\Component\\Catalog\\Model\\LocaleInterface',
            'pim_catalog.model.metric.interface' => 'Pim\\Component\\Catalog\\Model\\MetricInterface',
            'pim_catalog.model.product_price.interface' => 'Pim\\Component\\Catalog\\Model\\ProductPriceInterface',
            'pim_catalog.model.product_template.interface' => 'Pim\\Component\\Catalog\\Model\\ProductTemplateInterface',
            'pim_catalog.model.category_translation.interface' => 'Pim\\Component\\Catalog\\Model\\CategoryTranslationInterface',
            'pim_catalog.model.family_translation.interface' => 'Pim\\Component\\Catalog\\Model\\FamilyTranslationInterface',
            'pim_catalog.model.association_type_translation.interface' => 'Pim\\Component\\Catalog\\Model\\AssociationTypeTranslationInterface',
            'pim_catalog.model.attribute_group_translation.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeGroupTranslationInterface',
            'pim_catalog.model.attribute_translation.interface' => 'Pim\\Component\\Catalog\\Model\\AttributeTranslationInterface',
            'pim_catalog.model.group_translation.interface' => 'Pim\\Component\\Catalog\\Model\\GroupTranslationInterface',
            'pim_catalog.model.group_type_translation.interface' => 'Pim\\Component\\Catalog\\Model\\GroupTypeTranslationInterface',
            'pim_catalog.model.channel_translation.interface' => 'Pim\\Component\\Catalog\\Model\\ChannelTranslationInterface',
            'pim_catalog.query.product_query_builder_factory.class' => 'Pim\\Component\\Catalog\\Query\\ProductQueryBuilderFactory',
            'pim_catalog.query.product_query_builder.class' => 'Pim\\Component\\Catalog\\Query\\ProductQueryBuilder',
            'pim_catalog.query.filter.registry.class' => 'Pim\\Component\\Catalog\\Query\\Filter\\FilterRegistry',
            'pim_catalog.query.sorter.registry.class' => 'Pim\\Component\\Catalog\\Query\\Sorter\\SorterRegistry',
            'pim_catalog.query.filter.field_dumper.class' => 'Pim\\Bundle\\CatalogBundle\\Command\\ProductQueryHelp\\FieldFilterDumper',
            'pim_catalog.query.filter.attribute_dumper.class' => 'Pim\\Bundle\\CatalogBundle\\Command\\ProductQueryHelp\\AttributeFilterDumper',
            'pim_catalog.doctrine.query.filter.category.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Filter\\CategoryFilter',
            'pim_catalog.doctrine.query.filter.object_id_resolver.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Filter\\ObjectIdResolver',
            'pim_catalog.doctrine.query.filter.object_code_resolver.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Filter\\ObjectCodeResolver',
            'pim_catalog.doctrine.query.filter.dummy.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Filter\\DummyFilter',
            'pim_catalog.remover.base.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Remover\\BaseRemover',
            'pim_catalog.remover.base_options_resolver.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Remover\\BaseRemovingOptionsResolver',
            'pim_catalog.repository.association_type.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AssociationTypeRepository',
            'pim_catalog.repository.attribute_group.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeGroupRepository',
            'pim_catalog.repository.attribute_option.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeOptionRepository',
            'pim_catalog.repository.attribute.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeRepository',
            'pim_catalog.repository.attribute_requirement.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AttributeRequirementRepository',
            'pim_catalog.repository.category.class' => 'Akeneo\\Bundle\\ClassificationBundle\\Doctrine\\ORM\\Repository\\CategoryRepository',
            'pim_catalog.repository.channel.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ChannelRepository',
            'pim_catalog.repository.currency.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\CurrencyRepository',
            'pim_catalog.repository.family.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\FamilyRepository',
            'pim_catalog.repository.group.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\GroupRepository',
            'pim_catalog.repository.group_type.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\GroupTypeRepository',
            'pim_catalog.repository.locale.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\LocaleRepository',
            'pim_catalog.repository.product_template.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductTemplateRepository',
            'pim_catalog.resolver.fqcn.class' => 'Pim\\Bundle\\CatalogBundle\\Resolver\\FQCNResolver',
            'pim_catalog.saver.base.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\Common\\Saver\\BaseSaver',
            'pim_catalog.saver.product.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Saver\\ProductSaver',
            'pim_catalog.saver.group_options_resolver.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Saver\\GroupSavingOptionsResolver',
            'pim_catalog.saver.group.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Saver\\GroupSaver',
            'pim_catalog.saver.family.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Saver\\FamilySaver',
            'pim_catalog.saver.attribute.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\Common\\Saver\\AttributeSaver',
            'pim_catalog.updater.product.class' => 'Pim\\Component\\Catalog\\Updater\\ProductUpdater',
            'pim_catalog.updater.product_property_setter.class' => 'Pim\\Component\\Catalog\\Updater\\ProductPropertySetter',
            'pim_catalog.updater.product_property_adder.class' => 'Pim\\Component\\Catalog\\Updater\\ProductPropertyAdder',
            'pim_catalog.updater.product_property_copier.class' => 'Pim\\Component\\Catalog\\Updater\\ProductPropertyCopier',
            'pim_catalog.updater.product_property_remover.class' => 'Pim\\Component\\Catalog\\Updater\\ProductPropertyRemover',
            'pim_catalog.updater.product_template.class' => 'Pim\\Component\\Catalog\\Updater\\ProductTemplateUpdater',
            'pim_catalog.updater.attribute_option.class' => 'Pim\\Component\\Catalog\\Updater\\AttributeOptionUpdater',
            'pim_catalog.updater.attribute.class' => 'Pim\\Component\\Catalog\\Updater\\AttributeUpdater',
            'pim_catalog.updater.variant_group.class' => 'Pim\\Component\\Catalog\\Updater\\VariantGroupUpdater',
            'pim_catalog.updater.group.class' => 'Pim\\Component\\Catalog\\Updater\\GroupUpdater',
            'pim_catalog.updater.association_type.class' => 'Pim\\Component\\Catalog\\Updater\\AssociationTypeUpdater',
            'pim_catalog.updater.family.class' => 'Pim\\Component\\Catalog\\Updater\\FamilyUpdater',
            'pim_catalog.updater.channel.class' => 'Pim\\Component\\Catalog\\Updater\\ChannelUpdater',
            'pim_catalog.updater.locale.class' => 'Pim\\Component\\Catalog\\Updater\\LocaleUpdater',
            'pim_catalog.updater.attribute_group.class' => 'Pim\\Component\\Catalog\\Updater\\AttributeGroupUpdater',
            'pim_catalog.updater.group_type.class' => 'Pim\\Component\\Catalog\\Updater\\GroupTypeUpdater',
            'pim_catalog.updater.currency.class' => 'Pim\\Component\\Catalog\\Updater\\CurrencyUpdater',
            'pim_catalog.updater.setter.registry.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\SetterRegistry',
            'pim_catalog.updater.setter.abstract.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\AbstractAttributeSetter',
            'pim_catalog.updater.setter.text_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\TextAttributeSetter',
            'pim_catalog.updater.setter.metric_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\MetricAttributeSetter',
            'pim_catalog.updater.setter.boolean_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\BooleanAttributeSetter',
            'pim_catalog.updater.setter.date_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\DateAttributeSetter',
            'pim_catalog.updater.setter.number_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\NumberAttributeSetter',
            'pim_catalog.updater.setter.category_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\CategoryFieldSetter',
            'pim_catalog.updater.setter.group_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\GroupFieldSetter',
            'pim_catalog.updater.setter.variant_group_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\VariantGroupFieldSetter',
            'pim_catalog.updater.setter.family_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\FamilyFieldSetter',
            'pim_catalog.updater.setter.association_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\AssociationFieldSetter',
            'pim_catalog.updater.setter.enabled_field.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\EnabledFieldSetter',
            'pim_catalog.updater.setter.simpleselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\SimpleSelectAttributeSetter',
            'pim_catalog.updater.setter.multiselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\MultiSelectAttributeSetter',
            'pim_catalog.updater.setter.price_collection_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\PriceCollectionAttributeSetter',
            'pim_catalog.updater.setter.media_value.class' => 'Pim\\Component\\Catalog\\Updater\\Setter\\MediaAttributeSetter',
            'pim_catalog.updater.copier.registry.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\CopierRegistry',
            'pim_catalog.updater.copier.abstract.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\AbstractAttributeCopier',
            'pim_catalog.updater.copier.text_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.textarea_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.boolean_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.number_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.date_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.image_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\MediaAttributeCopier',
            'pim_catalog.updater.copier.file_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\MediaAttributeCopier',
            'pim_catalog.updater.copier.metric_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\MetricAttributeCopier',
            'pim_catalog.updater.copier.simpleselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\BaseAttributeCopier',
            'pim_catalog.updater.copier.multiselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\MultiSelectAttributeCopier',
            'pim_catalog.updater.copier.price_collection_value.class' => 'Pim\\Component\\Catalog\\Updater\\Copier\\PriceCollectionAttributeCopier',
            'pim_catalog.updater.adder.registry.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\AdderRegistry',
            'pim_catalog.updater.adder.category_field.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\CategoryFieldAdder',
            'pim_catalog.updater.adder.association_field.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\AssociationFieldAdder',
            'pim_catalog.updater.adder.group_field.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\GroupFieldAdder',
            'pim_catalog.updater.adder.multiselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\MultiSelectAttributeAdder',
            'pim_catalog.updater.adder.price_collection_value.class' => 'Pim\\Component\\Catalog\\Updater\\Adder\\PriceCollectionAttributeAdder',
            'pim_catalog.updater.remover.registry.class' => 'Pim\\Component\\Catalog\\Updater\\Remover\\RemoverRegistry',
            'pim_catalog.updater.remover.category_field.class' => 'Pim\\Component\\Catalog\\Updater\\Remover\\CategoryFieldRemover',
            'pim_catalog.updater.remover.price_collection_value.class' => 'Pim\\Component\\Catalog\\Updater\\Remover\\PriceCollectionAttributeRemover',
            'pim_catalog.updater.remover.group_field.class' => 'Pim\\Component\\Catalog\\Updater\\Remover\\GroupFieldRemover',
            'pim_catalog.updater.remover.multiselect_value.class' => 'Pim\\Component\\Catalog\\Updater\\Remover\\MultiSelectAttributeRemover',
            'pim_catalog.updater.category_translatable.class' => 'Pim\\Component\\Catalog\\Localization\\CategoryUpdater',
            'pim_catalog.updater.channel_translatable.class' => 'Pim\\Component\\Catalog\\Localization\\ChannelUpdater',
            'symfony.validator.recursive.class' => 'Symfony\\Component\\Validator\\Validator\\RecursiveValidator',
            'pim_catalog.validator.helper.attribute.class' => 'Pim\\Component\\Catalog\\Validator\\AttributeValidatorHelper',
            'pim_catalog.validator.constraint.valid_metric.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\ValidMetricValidator',
            'pim_catalog.validator.constraint.currency.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\CurrencyValidator',
            'pim_catalog.validator.constraint.single_identifier.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\SingleIdentifierAttributeValidator',
            'pim_catalog.validator.constraint.unique_variant_axis.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\UniqueVariantAxisValidator',
            'pim_catalog.validator.constraint.unique_variant_group.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\UniqueVariantGroupValidator',
            'pim_catalog.validator.constraint.unique_value.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\UniqueValueValidator',
            'pim_catalog.validator.constraint.immutable.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\ImmutableValidator',
            'pim_catalog.validator.constraint.variant_group_values.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\VariantGroupValuesValidator',
            'pim_catalog.validator.constraint.variant_group_axis.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\VariantGroupAxisValidator',
            'pim_catalog.validator.constraint.has_variant_axes.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\HasVariantAxesValidator',
            'pim_catalog.validator.constraint.family_requirements.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\FamilyRequirementsValidator',
            'pim_catalog.validator.constraint.scopable_value.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\ScopableValueValidator',
            'pim_catalog.validator.constraint.localizable_value.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\LocalizableValueValidator',
            'pim_catalog.validator.constraint.attribute_type_for_option.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\AttributeTypeForOptionValidator',
            'pim_catalog.validator.constraint.is_reference_data_configured.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\IsReferenceDataConfiguredValidator',
            'pim_catalog.validator.constraint.unique_variant_group_type.class' => 'Pim\\Component\\Catalog\\Validator\\Constraints\\UniqueVariantGroupTypeValidator',
            'pim_catalog.validator.constraint_guesser.chained.class' => 'Pim\\Component\\Catalog\\Validator\\ChainedAttributeConstraintGuesser',
            'pim_catalog.validator.constraint_guesser.email.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\EmailGuesser',
            'pim_catalog.validator.constraint_guesser.file.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\FileGuesser',
            'pim_catalog.validator.constraint_guesser.length.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\LengthGuesser',
            'pim_catalog.validator.constraint_guesser.not_blank.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\NotBlankGuesser',
            'pim_catalog.validator.constraint_guesser.date.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\DateGuesser',
            'pim_catalog.validator.constraint_guesser.numeric.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\NumericGuesser',
            'pim_catalog.validator.constraint_guesser.string.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\StringGuesser',
            'pim_catalog.validator.constraint_guesser.boolean.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\BooleanGuesser',
            'pim_catalog.validator.constraint_guesser.range.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\RangeGuesser',
            'pim_catalog.validator.constraint_guesser.currency.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\CurrencyGuesser',
            'pim_catalog.validator.constraint_guesser.regex.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\RegexGuesser',
            'pim_catalog.validator.constraint_guesser.not_decimal.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\NotDecimalGuesser',
            'pim_catalog.validator.constraint_guesser.url.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\UrlGuesser',
            'pim_catalog.validator.constraint_guesser.unique_value.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\UniqueValueGuesser',
            'pim_catalog.validator.constraint_guesser.price_collection.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\PriceCollectionGuesser',
            'pim_catalog.validator.constraint_guesser.metric.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\MetricGuesser',
            'pim_catalog.validator.constraint_guesser.identifier.class' => 'Pim\\Component\\Catalog\\Validator\\ConstraintGuesser\\IdentifierGuesser',
            'pim_catalog.validator.mapping.delegating_class_metadata_factory.class' => 'Pim\\Component\\Catalog\\Validator\\Mapping\\DelegatingClassMetadataFactory',
            'pim_catalog.validator.mapping.product_value_metadata_factory.class' => 'Pim\\Component\\Catalog\\Validator\\Mapping\\ProductValueMetadataFactory',
            'pim_catalog.validator.unique_value_set.class' => 'Pim\\Component\\Catalog\\Validator\\UniqueValuesSet',
            'pim_catalog.version.class' => 'Pim\\Bundle\\CatalogBundle\\Version',
            'pim_catalog.version_provider.class' => 'Pim\\Bundle\\CatalogBundle\\VersionProvider',
            'pim_serializer.class' => 'Symfony\\Component\\Serializer\\Serializer',
            'pim_serializer.encoder.xml.class' => 'Symfony\\Component\\Serializer\\Encoder\\XmlEncoder',
            'pim_serializer.encoder.json.class' => 'Symfony\\Component\\Serializer\\Encoder\\JsonEncoder',
            'pim_catalog.denormalizer.standard.product_values.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValuesDenormalizer',
            'pim_catalog.denormalizer.standard.product_value.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValueDenormalizer',
            'pim_catalog.denormalizer.standard.base_value.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\BaseValueDenormalizer',
            'pim_catalog.denormalizer.standard.attribute_option.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\AttributeOptionDenormalizer',
            'pim_catalog.denormalizer.standard.attribute_options.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\AttributeOptionsDenormalizer',
            'pim_catalog.denormalizer.standard.prices.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\PricesDenormalizer',
            'pim_catalog.denormalizer.standard.metric.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\MetricDenormalizer',
            'pim_catalog.denormalizer.standard.number.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\NumberDenormalizer',
            'pim_catalog.denormalizer.standard.datetime.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\DateTimeDenormalizer',
            'pim_catalog.denormalizer.standard.file.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\FileDenormalizer',
            'pim_catalog.denormalizer.standard.boolean.class' => 'Pim\\Component\\Catalog\\Denormalizer\\Standard\\ProductValue\\BooleanDenormalizer',
            'pim_catalog.normalizer.standard.product.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\ProductNormalizer',
            'pim_catalog.normalizer.standard.product.properties.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\PropertiesNormalizer',
            'pim_catalog.normalizer.standard.product.associations.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\AssociationsNormalizer',
            'pim_catalog.normalizer.standard.product.product_values.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\ProductValuesNormalizer',
            'pim_catalog.normalizer.standard.product.product_value.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\ProductValueNormalizer',
            'pim_catalog.normalizer.standard.product.price.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\PriceNormalizer',
            'pim_catalog.normalizer.standard.product.metric.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\Product\\MetricNormalizer',
            'pim_catalog.normalizer.standard.datetime.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\DateTimeNormalizer',
            'pim_catalog.normalizer.standard.file.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\FileNormalizer',
            'pim_catalog.normalizer.standard.association_type.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\AssociationTypeNormalizer',
            'pim_catalog.normalizer.standard.attribute.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\AttributeNormalizer',
            'pim_catalog.normalizer.standard.attribute_group.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\AttributeGroupNormalizer',
            'pim_catalog.normalizer.standard.attribute_option.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\AttributeOptionNormalizer',
            'pim_catalog.normalizer.standard.category.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\CategoryNormalizer',
            'pim_catalog.normalizer.standard.channel.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\ChannelNormalizer',
            'pim_catalog.normalizer.standard.currency.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\CurrencyNormalizer',
            'pim_catalog.normalizer.standard.family.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\FamilyNormalizer',
            'pim_catalog.normalizer.standard.proxy_group.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\ProxyGroupNormalizer',
            'pim_catalog.normalizer.standard.group.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\GroupNormalizer',
            'pim_catalog.normalizer.standard.group_type.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\GroupTypeNormalizer',
            'pim_catalog.normalizer.standard.locale.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\LocaleNormalizer',
            'pim_catalog.normalizer.standard.translation.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\TranslationNormalizer',
            'pim_catalog.normalizer.standard.variant_group.class' => 'Pim\\Component\\Catalog\\Normalizer\\Standard\\VariantGroupNormalizer',
            'pim_catalog.normalizer.standard.job_instance.class' => 'Akeneo\\Component\\Batch\\Normalizer\\Standard\\JobInstanceNormalizer',
            'pim_catalog.converter.metric.class' => 'Pim\\Component\\Catalog\\Converter\\MetricConverter',
            'pim_catalog.repository.association.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\AssociationRepository',
            'pim_catalog.repository.product_value_counter.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductValueCounterRepository',
            'pim_catalog.repository.product.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductRepository',
            'pim_catalog.repository.completeness.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\CompletenessRepository',
            'pim_catalog.repository.product_mass_action.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductMassActionRepository',
            'pim_catalog.repository.product_category.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Repository\\ProductCategoryRepository',
            'pim_catalog.doctrine.completeness_generator.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\CompletenessGenerator',
            'pim_catalog.event_subscriber.orm.inject_product_reference.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ORM\\InjectProductReferenceSubscriber',
            'pim_catalog.event_subscriber.metric_base_values.class' => 'Pim\\Bundle\\CatalogBundle\\EventSubscriber\\ORM\\MetricBaseValuesSubscriber',
            'pim_catalog.doctrine.query.filter.product_id.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\ProductIdFilter',
            'pim_catalog.doctrine.query.filter.number.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\NumberFilter',
            'pim_catalog.doctrine.query.filter.string.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\StringFilter',
            'pim_catalog.doctrine.query.filter.boolean.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\BooleanFilter',
            'pim_catalog.doctrine.query.filter.family.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\FamilyFilter',
            'pim_catalog.doctrine.query.filter.groups.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\GroupsFilter',
            'pim_catalog.doctrine.query.filter.date.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\DateFilter',
            'pim_catalog.doctrine.query.filter.datetime.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\DateTimeFilter',
            'pim_catalog.doctrine.query.filter.completeness.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\CompletenessFilter',
            'pim_catalog.doctrine.query.filter.price.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\PriceFilter',
            'pim_catalog.doctrine.query.filter.metric.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\MetricFilter',
            'pim_catalog.doctrine.query.filter.option.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\OptionFilter',
            'pim_catalog.doctrine.query.filter.options.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\OptionsFilter',
            'pim_catalog.doctrine.query.filter.media.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Filter\\MediaFilter',
            'pim_catalog.doctrine.query.cursor.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\Cursor',
            'pim_catalog.doctrine.cursor_factory.product.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\CursorFactory',
            'pim_catalog.factory.product_cursor.page_size' => 1,
            'pim_catalog.doctrine.query.sorter.base.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\BaseSorter',
            'pim_catalog.doctrine.query.sorter.entity.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\EntitySorter',
            'pim_catalog.doctrine.query.sorter.family.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\FamilySorter',
            'pim_catalog.doctrine.query.sorter.completeness.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\CompletenessSorter',
            'pim_catalog.doctrine.query.sorter.in_group.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\InGroupSorter',
            'pim_catalog.doctrine.query.sorter.is_associated.class' => 'Pim\\Bundle\\CatalogBundle\\Doctrine\\ORM\\Sorter\\IsAssociatedSorter',
            'pim_datagrid.extension.action.type.tab_redirect.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Action\\Actions\\TabRedirectAction',
            'pim_datagrid.adapter.oro_to_pim_grid_filter.class' => 'Pim\\Bundle\\DataGridBundle\\Adapter\\OroToPimGridFilterAdapter',
            'pim_datagrid.product.attribute_type.pim_catalog_identifier' => array(
                'column' => array(
                    'type' => 'product_value_field',
                    'selector' => 'product_value_base',
                ),
                'filter' => array(
                    'type' => 'product_value_string',
                    'ftype' => 'string',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'choice_list' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_text' => array(
                'column' => array(
                    'type' => 'product_value_field',
                    'selector' => 'product_value_base',
                ),
                'filter' => array(
                    'type' => 'product_value_string',
                    'ftype' => 'string',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_textarea' => array(
                'column' => array(
                    'type' => 'product_value_field',
                    'selector' => 'product_value_base',
                ),
                'filter' => array(
                    'type' => 'product_value_string',
                    'ftype' => 'string',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_simpleselect' => array(
                'column' => array(
                    'type' => 'product_value_option',
                    'selector' => 'product_value_option',
                ),
                'filter' => array(
                    'type' => 'product_value_choice',
                    'ftype' => 'ajax_choice',
                    'options' => array(
                        'field_options' => array(
                            'multiple' => true,
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_multiselect' => array(
                'column' => array(
                    'type' => 'product_value_options',
                    'selector' => 'product_value_options',
                ),
                'filter' => array(
                    'type' => 'product_value_choice',
                    'ftype' => 'ajax_choice',
                    'options' => array(
                        'field_options' => array(
                            'multiple' => true,
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_number' => array(
                'column' => array(
                    'type' => 'product_value_number',
                    'selector' => 'product_value_base',
                ),
                'filter' => array(
                    'type' => 'product_value_number',
                    'ftype' => 'number',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_boolean' => array(
                'column' => array(
                    'type' => 'product_value_boolean',
                    'selector' => 'product_value_base',
                    'frontend_type' => 'html',
                    'template' => 'PimDataGridBundle:Property:boolean.html.twig',
                ),
                'filter' => array(
                    'type' => 'product_value_boolean',
                    'ftype' => 'boolean',
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_date' => array(
                'column' => array(
                    'type' => 'product_value_date',
                    'selector' => 'product_value_base',
                    'frontend_type' => 'date',
                ),
                'filter' => array(
                    'type' => 'product_value_date',
                    'ftype' => 'date',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value',
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_file' => array(
                'column' => array(
                    'type' => 'product_value_file',
                    'selector' => 'product_value_media',
                    'frontend_type' => 'string',
                ),
                'filter' => array(
                    'type' => 'product_value_string',
                    'ftype' => 'string',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_image' => array(
                'column' => array(
                    'type' => 'product_value_image',
                    'selector' => 'product_value_media',
                    'frontend_type' => 'html',
                    'template' => 'PimDataGridBundle:Property:image.html.twig',
                ),
                'filter' => array(
                    'type' => 'product_value_string',
                    'ftype' => 'string',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_price_collection' => array(
                'column' => array(
                    'type' => 'product_value_price',
                    'selector' => 'product_value_price',
                ),
                'filter' => array(
                    'type' => 'product_value_price',
                    'ftype' => 'price',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.product.attribute_type.pim_catalog_metric' => array(
                'column' => array(
                    'type' => 'product_value_metric',
                    'selector' => 'product_value_metric',
                    'frontend_type' => 'html',
                    'template' => 'PimDataGridBundle:Property:metric.html.twig',
                ),
                'filter' => array(
                    'type' => 'product_value_metric',
                    'ftype' => 'metric',
                    'options' => array(
                        'field_options' => array(
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.product.attribute_type.pim_reference_data_simpleselect' => array(
                'column' => array(
                    'type' => 'product_value_reference_data',
                    'selector' => 'product_value_reference_data',
                ),
                'filter' => array(
                    'type' => 'product_value_reference_data',
                    'ftype' => 'ajax_choice',
                    'options' => array(
                        'field_options' => array(
                            'multiple' => true,
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => 'product_value_reference_data',
            ),
            'pim_datagrid.product.attribute_type.pim_reference_data_multiselect' => array(
                'column' => array(
                    'type' => 'product_value_reference_data',
                    'selector' => 'product_value_reference_data',
                ),
                'filter' => array(
                    'type' => 'product_value_reference_data',
                    'ftype' => 'ajax_choice',
                    'options' => array(
                        'field_options' => array(
                            'multiple' => true,
                            'attr' => array(
                                'empty_choice' => true,
                            ),
                        ),
                    ),
                ),
                'sorter' => NULL,
            ),
            'pim_datagrid.datagrid.configuration.product.context_configurator.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\ContextConfigurator',
            'pim_datagrid.datagrid.configuration.product.columns_configurator.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\ColumnsConfigurator',
            'pim_datagrid.datagrid.configuration.product.filters_configurator.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\FiltersConfigurator',
            'pim_datagrid.datagrid.configuration.product.sorters_configurator.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\SortersConfigurator',
            'pim_datagrid.datagrid.configuration.product.group_columns_configurator.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\GroupColumnsConfigurator',
            'pim_datagrid.datagrid.request.parameters_extractor.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Request\\RequestParametersExtractor',
            'pim_datagrid.controller.datagrid.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\DatagridController',
            'pim_datagrid.controller.export.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\ExportController',
            'pim_datagrid.controller.product_export.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\ProductExportController',
            'pim_datagrid.controller.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\DatagridViewController',
            'pim_datagrid.controller.rest.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\Rest\\DatagridViewController',
            'pim_datagrid.controller.mass_action.class' => 'Pim\\Bundle\\DataGridBundle\\Controller\\MassActionController',
            'pim_datagrid.datasource.default.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\Datasource',
            'pim_datagrid.datasource.product.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ProductDatasource',
            'pim_datagrid.datasource.support_resolver.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\DatasourceSupportResolver',
            'pim_datagrid.datasource.adapter_resolver.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\DatasourceAdapterResolver',
            'pim_datagrid.entity.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Entity\\DatagridView',
            'pim_datagrid.event_listener.add_locale_code_to_grid.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\AddLocaleCodeToGridListener',
            'pim_datagrid.event_listener.add_parameters_to_grid.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\AddParametersToGridListener',
            'pim_datagrid.event_listener.add_parameters_to_product_grid.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\AddParametersToProductGridListener',
            'pim_datagrid.event_listener.add_parameters_to_variant_product_grid.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\AddParametersToVariantProductGridListener',
            'pim_datagrid.event_listener.configure_product_grid_listener.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\ConfigureProductGridListener',
            'pim_datagrid.event_listener.configure_sorters_listener.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\ConfigureSortersListener',
            'pim_datagrid.event_listener.configure_product_filters.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\ConfigureProductFiltersListener',
            'pim_datagrid.event_listener.configure_history_grid_listener.class' => 'Pim\\Bundle\\DataGridBundle\\EventListener\\ConfigureHistoryGridListener',
            'pim_datagrid.extension.filter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Filter\\FilterExtension',
            'pim_datagrid.extension.sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\SorterExtension',
            'pim_datagrid.extension.pager.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Pager\\PagerExtension',
            'pim_datagrid.extension.selector.orm_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\OrmSelectorExtension',
            'pim_datagrid.form.type.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Form\\Type\\DatagridViewType',
            'pim_datagrid.form.type.datagrid_filter_choice.class' => 'Pim\\Bundle\\DataGridBundle\\Form\\Type\\DatagridFilterChoiceType',
            'pim_datagrid.extension.formatter.property.product_value.field_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\FieldProperty',
            'pim_datagrid.extension.formatter.property.product_value.attribute_options_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\AttributeOptionsProperty',
            'pim_datagrid.extension.formatter.property.product_value.attribute_option_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\AttributeOptionProperty',
            'pim_datagrid.extension.formatter.property.product_value.price_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\PriceProperty',
            'pim_datagrid.extension.formatter.property.product_value.number_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\NumberProperty',
            'pim_datagrid.extension.formatter.property.product_value.image_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\ImageProperty',
            'pim_datagrid.extension.formatter.property.product_value.file_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\FileProperty',
            'pim_datagrid.extension.formatter.property.product_value.metric_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\MetricProperty',
            'pim_datagrid.extension.formatter.property.product_value.boolean_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\BooleanProperty',
            'pim_datagrid.extension.formatter.property.product_value.date_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\DateProperty',
            'pim_datagrid.extension.formatter.property.product_value.twig_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\ProductValue\\TwigProperty',
            'pim_datagrid.extension.formatter.property.product.groups_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\Product\\GroupsProperty',
            'pim_datagrid.extension.formatter.property.job.name_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\Job\\NameProperty',
            'pim_datagrid.extension.formatter.property.job.type_property.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Formatter\\Property\\Job\\TypeProperty',
            'pim_datagrid.datasource.result_record.hydrator.default.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ResultRecordHydrator',
            'pim_datagrid.datasource.result_record.hydrator.orm.object.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ObjectHydrator',
            'pim_datagrid.datasource.result_record.hydrator.orm.object_id.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ObjectIdHydrator',
            'pim_datagrid.manager.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Manager\\DatagridViewManager',
            'pim_datagrid.extension.mass_action.type.export.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Export\\ExportMassAction',
            'pim_datagrid.extension.mass_action.type.delete.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Actions\\Ajax\\DeleteMassAction',
            'pim_datagrid.extension.mass_action.handler.edit.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Handler\\EditMassActionHandler',
            'pim_datagrid.extension.mass_action.handler.export.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Handler\\ExportMassActionHandler',
            'pim_datagrid.extension.mass_action.handler.sequential_edit.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Handler\\SequentialEditActionHandler',
            'pim_datagrid.extension.mass_action.handler.delete.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Handler\\DeleteMassActionHandler',
            'pim_datagrid.extension.mass_action.handler.product_delete.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Handler\\DeleteProductsMassActionHandler',
            'pim_datagrid.extension.mass_action.dispatcher.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionDispatcher',
            'pim_datagrid.extension.mass_action.handler.registry.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\MassActionHandlerRegistry',
            'pim_datagrid.extension.mass_action.util.product_fields_builder.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\MassAction\\Util\\ProductFieldsBuilder',
            'pim_datagrid.extension.pager.orm.pager.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Pager\\Orm\\Pager',
            'pim_datagrid.extension.pager.pager_resolver.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Pager\\PagerResolver',
            'pim_datagrid.datagrid.configuration.product.configuration_registry.class' => 'Pim\\Bundle\\DataGridBundle\\Datagrid\\Configuration\\Product\\ConfigurationRegistry',
            'pim_datagrid.repository.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Repository\\DatagridViewRepository',
            'pim_datagrid.extension.selector.orm.product_value.base_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\BaseSelector',
            'pim_datagrid.extension.selector.orm.product_value.option_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\OptionSelector',
            'pim_datagrid.extension.selector.orm.product_value.options_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\OptionsSelector',
            'pim_datagrid.extension.selector.orm.product_value.prices_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\PricesSelector',
            'pim_datagrid.extension.selector.orm.product_value.metric_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\MetricSelector',
            'pim_datagrid.extension.selector.orm.product_value.media_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\ProductValue\\MediaSelector',
            'pim_datagrid.extension.selector.orm.product.label_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\Product\\LabelSelector',
            'pim_datagrid.extension.selector.orm.product.groups_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\Product\\GroupsSelector',
            'pim_datagrid.extension.selector.orm.product.completeness_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\Product\\CompletenessSelector',
            'pim_datagrid.extension.selector.orm.product.family_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\Product\\FamilySelector',
            'pim_datagrid.extension.selector.orm.product.in_group_selector.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Selector\\Orm\\Product\\InGroupSelector',
            'pim_datagrid.extension.sorter.orm.field_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Orm\\FieldSorter',
            'pim_datagrid.extension.sorter.product.field_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\FieldSorter',
            'pim_datagrid.extension.sorter.product.value_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\ValueSorter',
            'pim_datagrid.extension.sorter.product.completeness_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\CompletenessSorter',
            'pim_datagrid.extension.sorter.product.family_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\FamilySorter',
            'pim_datagrid.extension.sorter.product.in_group_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\InGroupSorter',
            'pim_datagrid.extension.sorter.product.is_associated_sorter.class' => 'Pim\\Bundle\\DataGridBundle\\Extension\\Sorter\\Product\\IsAssociatedSorter',
            'pim_datagrid.event_subscriber.default_view.class' => 'Pim\\Bundle\\DataGridBundle\\EventSubscriber\\DefaultViewSubscriber',
            'pim_datagrid.twig.filter_extension.class' => 'Pim\\Bundle\\DataGridBundle\\Twig\\FilterExtension',
            'pim_datagrid.updater.datagrid_view.class' => 'Pim\\Bundle\\DataGridBundle\\Updater\\DatagridViewUpdater',
            'pim_datagrid.datasource.result_record.hydrator.product.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ProductHydrator',
            'pim_datagrid.datasource.result_record.hydrator.associated_product.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ProductHydrator',
            'pim_datagrid.datasource.result_record.hydrator.object_id.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ObjectIdHydrator',
            'pim_datagrid.datasource.result_record.hydrator.object.class' => 'Pim\\Bundle\\DataGridBundle\\Datasource\\ResultRecord\\Orm\\ObjectHydrator',
            'pim_import_export.controller.import_profile.class' => 'Pim\\Bundle\\ImportExportBundle\\Controller\\ImportProfileController',
            'pim_import_export.controller.export_profile.class' => 'Pim\\Bundle\\ImportExportBundle\\Controller\\ExportProfileController',
            'pim_import_export.controller.import_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Controller\\ImportExecutionController',
            'pim_import_export.controller.export_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Controller\\ExportExecutionController',
            'pim_import_export.factory.job_notification.class' => 'Pim\\Bundle\\ImportExportBundle\\Factory\\NotificationFactory',
            'pim_import_export.form.type.job_instance.class' => 'Pim\\Bundle\\ImportExportBundle\\Form\\Type\\JobInstanceFormType',
            'pim_import_export.datagrid.provider.job.class' => 'Pim\\Bundle\\ImportExportBundle\\Datagrid\\JobDatagridProvider',
            'pim_import_export.job_label.translated_label_provider.class' => 'Pim\\Bundle\\ImportExportBundle\\JobLabel\\TranslatedLabelProvider',
            'pim_import_export.manager.job_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Manager\\JobExecutionManager',
            'pim_import_export.normalizer.job_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Normalizer\\JobExecutionNormalizer',
            'pim_import_export.normalizer.step_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Normalizer\\StepExecutionNormalizer',
            'pim_import_export.repository.job_instance.class' => 'Pim\\Bundle\\ImportExportBundle\\Entity\\Repository\\JobInstanceRepository',
            'pim_import_export.repository.job_execution.class' => 'Pim\\Bundle\\ImportExportBundle\\Entity\\Repository\\JobExecutionRepository',
            'pim_import_export.validator.constraints.filter_data_validator.class' => 'Pim\\Component\\Connector\\Validator\\Constraints\\FilterDataValidator',
            'pim_import_export.validator.constraints.filter_structure_locale_validator.class' => 'Pim\\Component\\Connector\\Validator\\Constraints\\FilterStructureLocaleValidator',
            'pim_import_export.validator.constraints.filter_structure_attribute_validator.class' => 'Pim\\Component\\Connector\\Validator\\Constraints\\FilterStructureAttributeValidator',
            'pim_versioning.builder.version.class' => 'Pim\\Bundle\\VersioningBundle\\Builder\\VersionBuilder',
            'pim_versioning.entity.version.class' => 'Akeneo\\Component\\Versioning\\Model\\Version',
            'pim_versioning.versionable_entities' => array(
                0 => 'Akeneo\\Component\\Batch\\Model\\JobInstance',
            ),
            'pim_versioning.event_subscriber.addversion.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddVersionSubscriber',
            'pim_versioning.event_subscriber.adduser.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddUserSubscriber',
            'pim_versioning.event_subscriber.addcontext.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddContextSubscriber',
            'pim_versioning.event_subscriber.add_remove_version.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\AddRemoveVersionSubscriber',
            'pim_versioning.event_subscriber.timestampable.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\TimestampableSubscriber',
            'pim_versioning.event_subscriber.purge_progress_bar_advancer.class' => 'Pim\\Bundle\\VersioningBundle\\EventSubscriber\\PurgeProgressBarAdvancerSubscriber',
            'pim_versioning.factory.version.class' => 'Pim\\Bundle\\VersioningBundle\\Factory\\VersionFactory',
            'pim_versioning.update_guesser.attribute_group.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\AttributeGroupUpdateGuesser',
            'pim_versioning.update_guesser.attribute_option.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\AttributeOptionUpdateGuesser',
            'pim_versioning.update_guesser.chained.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\ChainedUpdateGuesser',
            'pim_versioning.update_guesser.contains_products.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\ContainsProductsUpdateGuesser',
            'pim_versioning.update_guesser.variant_group.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\VariantGroupUpdateGuesser',
            'pim_versioning.update_guesser.product_value.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\ProductValueUpdateGuesser',
            'pim_versioning.update_guesser.translations.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\TranslationsUpdateGuesser',
            'pim_versioning.update_guesser.versionable.class' => 'Pim\\Bundle\\VersioningBundle\\UpdateGuesser\\VersionableUpdateGuesser',
            'pim_versioning.manager.version.class' => 'Pim\\Bundle\\VersioningBundle\\Manager\\VersionManager',
            'pim_versioning.context.version.class' => 'Pim\\Bundle\\VersioningBundle\\Manager\\VersionContext',
            'pim_versioning.purger.version.class' => 'Pim\\Bundle\\VersioningBundle\\Purger\\VersionPurger',
            'pim_versioning.purger.advisor.skip_first_version.class' => 'Pim\\Bundle\\VersioningBundle\\Purger\\SkipFirstVersionPurgerAdvisor',
            'pim_versioning.purger.advisor.skip_last_version.class' => 'Pim\\Bundle\\VersioningBundle\\Purger\\SkipLastVersionPurgerAdvisor',
            'pim_versioning.repository.version.class' => 'Pim\\Bundle\\VersioningBundle\\Doctrine\\ORM\\VersionRepository',
            'pim_versioning.doctrine.query.cursor.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\Cursor',
            'pim_versioning.doctrine.cursor_factory.version.class' => 'Akeneo\\Bundle\\StorageUtilsBundle\\Doctrine\\ORM\\Cursor\\CursorFactory',
            'pim_versioning.factory.version_cursor.page_size' => 1000,
            'pim_serializer.normalizer.flat.association_type.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\AssociationTypeNormalizer',
            'pim_serializer.normalizer.flat.attribute.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\AttributeNormalizer',
            'pim_serializer.normalizer.flat.attribute_group.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\AttributeGroupNormalizer',
            'pim_serializer.normalizer.flat.category.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\CategoryNormalizer',
            'pim_serializer.normalizer.flat.channel.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\ChannelNormalizer',
            'pim_serializer.normalizer.flat.family.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\FamilyNormalizer',
            'pim_serializer.normalizer.flat.proxy_group.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\ProxyGroupNormalizer',
            'pim_serializer.normalizer.flat.group.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\GroupNormalizer',
            'pim_serializer.normalizer.flat.variant_group.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\VariantGroupNormalizer',
            'pim_serializer.normalizer.flat.job_instance.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\JobInstanceNormalizer',
            'pim_serializer.normalizer.flat.label_translation.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\TranslationNormalizer',
            'pim_serializer.normalizer.flat.product.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\ProductNormalizer',
            'pim_serializer.normalizer.flat.product_value.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\ProductValueNormalizer',
            'pim_serializer.normalizer.flat.locale.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\LocaleNormalizer',
            'pim_serializer.normalizer.flat.collection.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\CollectionNormalizer',
            'pim_serializer.normalizer.flat.datetime.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\DateTimeNormalizer',
            'pim_serializer.normalizer.flat.metric.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\MetricNormalizer',
            'pim_serializer.normalizer.flat.option.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\AttributeOptionNormalizer',
            'pim_serializer.normalizer.flat.price.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\PriceNormalizer',
            'pim_serializer.normalizer.flat.file.class' => 'Pim\\Bundle\\VersioningBundle\\Normalizer\\Flat\\FileNormalizer',
            'pim_serializer.denormalizer.flat.product.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductDenormalizer',
            'pim_serializer.denormalizer.flat.family.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\FamilyDenormalizer',
            'pim_serializer.denormalizer.flat.category.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\CategoryDenormalizer',
            'pim_serializer.denormalizer.flat.group.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\GroupDenormalizer',
            'pim_serializer.denormalizer.flat.association.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\AssociationDenormalizer',
            'pim_serializer.denormalizer.flat.product_value.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValueDenormalizer',
            'pim_serializer.denormalizer.flat.product_values.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValuesDenormalizer',
            'pim_serializer.denormalizer.flat.base_value.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\BaseValueDenormalizer',
            'pim_serializer.denormalizer.flat.attribute_option.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\AttributeOptionDenormalizer',
            'pim_serializer.denormalizer.flat.attribute_options.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\AttributeOptionsDenormalizer',
            'pim_serializer.denormalizer.flat.prices.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\PricesDenormalizer',
            'pim_serializer.denormalizer.flat.metric.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\MetricDenormalizer',
            'pim_serializer.denormalizer.flat.datetime.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\DateTimeDenormalizer',
            'pim_serializer.denormalizer.flat.file.class' => 'Pim\\Bundle\\VersioningBundle\\Denormalizer\\Flat\\ProductValue\\FileDenormalizer',
            'pim_serializer.encoder.csv.class' => 'Pim\\Component\\Connector\\Encoder\\CsvEncoder',
            'pim_enrich_max_products_category_removal' => 100,
            'pim_enrich.attribute_icons' => array(
                'pim_catalog_identifier' => 'asterisk',
                'pim_catalog_text' => 'font',
                'pim_catalog_textarea' => 'file-text-alt',
                'pim_catalog_number' => 'sort-by-order',
                'pim_catalog_price_collection' => 'money',
                'pim_catalog_multiselect' => 'tags',
                'pim_catalog_simpleselect' => 'tag',
                'pim_catalog_file' => 'file',
                'pim_catalog_image' => 'camera-retro',
                'pim_catalog_boolean' => 'check',
                'pim_catalog_date' => 'calendar',
                'pim_catalog_metric' => 'beaker',
                'pim_reference_data_multiselect' => 'tags',
                'pim_reference_data_simpleselect' => 'tag',
            ),
            'pim_enrich.doctrine.counter.category_items.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\Counter\\CategoryItemsCounter',
            'pim_enrich.doctrine.counter.category_registry.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\Counter\\CategoryItemsCounterRegistry',
            'pim_enrich.colors' => array(
                'gray' => '238,232,213,1',
                'white' => '253,246,227,1',
                'yellow' => '181,137,0,1',
                'orange' => '203,75,22,1',
                'magenta' => '211,54,130,1',
                'violet' => '108,113,196,1',
                'blue' => '38,139,210,1',
                'cyan' => '42,161,152,1',
            ),
            'pim_enrich.paginator.paginator_factory.class' => 'Akeneo\\Component\\StorageUtils\\Cursor\\PaginatorFactory',
            'pim_enrich.paginator.class' => 'Akeneo\\Component\\StorageUtils\\Cursor\\Paginator',
            'pim_enrich.connector.item.mass_edit.temporary_file_cleaner.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Item\\MassEdit\\TemporaryFileCleaner',
            'pim_enrich.connector.processor.mass_edit.product.update_value.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Product\\UpdateProductValueProcessor',
            'pim_enrich.connector.processor.mass_edit.product.add_value.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Product\\AddProductValueProcessor',
            'pim_enrich.connector.processor.mass_edit.product.remove_value.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Product\\RemoveProductValueProcessor',
            'pim_enrich.connector.processor.mass_edit.product.edit_common_attributes.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Product\\EditCommonAttributesProcessor',
            'pim_enrich.connector.processor.mass_edit.product.add_to_variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Product\\AddProductToVariantGroupProcessor',
            'pim_enrich.connector.processor.mass_edit.family.set_requirements.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\MassEdit\\Family\\SetAttributeRequirements',
            'pim_enrich.connector.processor.quick_export.product.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Processor\\QuickExport\\ProductProcessor',
            'pim_enrich.connector.reader.mass_edit.family.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Reader\\MassEdit\\FilteredFamilyReader',
            'pim_enrich.connector.reader.mass_edit.variant_group_product.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Reader\\MassEdit\\FilteredVariantGroupProductReader',
            'pim_enrich.controller.attribute_group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\AttributeGroupController',
            'pim_enrich.controller.category_tree.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\CategoryTreeController',
            'pim_enrich.controller.channel.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\ChannelController',
            'pim_enrich.controller.currency.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\CurrencyController',
            'pim_enrich.controller.family.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\FamilyController',
            'pim_enrich.controller.locale.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\LocaleController',
            'pim_enrich.controller.attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\AttributeController',
            'pim_enrich.controller.attribute_option.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\AttributeOptionController',
            'pim_enrich.controller.product.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\ProductController',
            'pim_enrich.controller.product.mass_edit_action.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\MassEdit\\ProductController',
            'pim_enrich.controller.family.mass_edit_action.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\MassEdit\\FamilyController',
            'pim_enrich.controller.association.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\AssociationController',
            'pim_enrich.controller.group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\GroupController',
            'pim_enrich.controller.association_type.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\AssociationTypeController',
            'pim_enrich.controller.file.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\FileController',
            'pim_enrich.controller.variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\VariantGroupController',
            'pim_enrich.controller.group_type.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\GroupTypeController',
            'pim_enrich.controller.completeness.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\CompletenessController',
            'pim_enrich.controller.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\SequentialEditController',
            'pim_enrich.controller.job_tracker.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\JobTrackerController',
            'pim_enrich.controller.rest.association_type.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\AssociationTypeController',
            'pim_enrich.controller.rest.attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\AttributeController',
            'pim_enrich.controller.rest.attribute_group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\AttributeGroupController',
            'pim_enrich.controller.rest.category.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\CategoryController',
            'pim_enrich.controller.rest.channel.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\ChannelController',
            'pim_enrich.controller.rest.completeness.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\CompletenessController',
            'pim_enrich.controller.rest.currency.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\CurrencyController',
            'pim_enrich.controller.rest.family.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\FamilyController',
            'pim_enrich.controller.rest.form_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\FormExtensionController',
            'pim_enrich.controller.rest.group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\GroupController',
            'pim_enrich.controller.rest.locale.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\LocaleController',
            'pim_enrich.controller.rest.measures.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\MeasuresController',
            'pim_enrich.controller.rest.media.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\MediaController',
            'pim_enrich.controller.rest.navigation_history.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\NavigationHistoryController',
            'pim_enrich.controller.rest.product.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\ProductController',
            'pim_enrich.controller.rest.product_category.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\ProductCategoryController',
            'pim_enrich.controller.rest.product_comment.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\ProductCommentController',
            'pim_enrich.controller.rest.variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\VariantGroupController',
            'pim_enrich.controller.rest.variant_group_attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\VariantGroupAttributeController',
            'pim_enrich.controller.rest.versioning.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\VersioningController',
            'pim_enrich.controller.mass_edit.abstract' => 'Pim\\Bundle\\EnrichBundle\\Controller\\MassEdit\\AbstractMassEditController',
            'pim_enrich.controller.rest.attribute_option.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\AttributeOptionController',
            'pim_enrich.controller.rest.job_instance.class' => 'Pim\\Bundle\\EnrichBundle\\Controller\\Rest\\JobInstanceController',
            'pim_enrich.converter.standard_to_enrich.product_value.class' => 'Pim\\Component\\Enrich\\Converter\\StandardToEnrich\\ProductValueConverter',
            'pim_enrich.converter.enrich_to_standard.product_value.class' => 'Pim\\Component\\Enrich\\Converter\\EnrichToStandard\\ProductValueConverter',
            'pim_enrich.entity.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Entity\\SequentialEdit',
            'pim_enrich.entity.available_attributes.class' => 'Pim\\Component\\Enrich\\Model\\AvailableAttributes',
            'pim_enrich.event_listener.user_context.class' => 'Pim\\Bundle\\EnrichBundle\\EventListener\\UserContextListener',
            'pim_enrich.event_listener.request.class' => 'Pim\\Bundle\\EnrichBundle\\EventListener\\RequestListener',
            'pim_enrich.event_subscriber.translate_flash_messages.class' => 'Pim\\Bundle\\EnrichBundle\\EventListener\\TranslateFlashMessagesSubscriber',
            'pim_enrich.event_subscriber.storage.channel_locale.class' => 'Pim\\Bundle\\EnrichBundle\\EventListener\\Storage\\ChannelLocaleSubscriber',
            'pim_enrich.event_listener.add_locale.class' => 'Pim\\Bundle\\EnrichBundle\\EventListener\\AddLocaleListener',
            'pim_enrich.factory.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Factory\\SequentialEditFactory',
            'pim_enrich.factory.mass_edit_notification.class' => 'Pim\\Bundle\\EnrichBundle\\Factory\\MassEditNotificationFactory',
            'pim_enrich.transformer.identifiable_model.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\DataTransformer\\IdentifiableModelTransformer',
            'pim_enrich.guesser.file_type.class' => 'Pim\\Bundle\\EnrichBundle\\File\\FileTypeGuesser',
            'pim_enrich.provider.default_image.class' => 'Pim\\Bundle\\EnrichBundle\\File\\DefaultImageProvider',
            'pim_enrich.provider.default_image.images' => array(
                'pim_enrich_file_document' => array(
                    'path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/text_default.png'),
                    'mime_type' => 'image/png',
                    'extension' => 'png',
                ),
                'pim_enrich_file_image' => array(
                    'path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/image_default.png'),
                    'mime_type' => 'image/png',
                    'extension' => 'png',
                ),
                'pim_enrich_file_video' => array(
                    'path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/video_default.png'),
                    'mime_type' => 'image/png',
                    'extension' => 'png',
                ),
                'pim_enrich_file_misc' => array(
                    'path' => ($this->targetDirs[2].'/../web/bundles/pimenrich/img/misc_default.png'),
                    'mime_type' => 'image/png',
                    'extension' => 'png',
                ),
            ),
            'pim_enrich.filter.product_edit_data.class' => 'Pim\\Bundle\\EnrichBundle\\Filter\\ProductEditDataFilter',
            'pim_enrich.filter.product_values_edit_data.class' => 'Pim\\Bundle\\EnrichBundle\\Filter\\ProductValuesEditDataFilter',
            'pim_enrich.filter.variant_group_edit_data.class' => 'Pim\\Bundle\\EnrichBundle\\Filter\\VariantGroupEditDataFilter',
            'pim_enrich.form.subscriber.add_attribute_type.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\AddAttributeTypeRelatedFieldsSubscriber',
            'pim_enrich.form.subscriber.add_attribute_requirements.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\AddAttributeRequirementsSubscriber',
            'pim_enrich.form.subscriber.family_disable_fields_subscriber.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\DisableFamilyFieldsSubscriber',
            'pim_enrich.form.subscriber.family_attribute_label_subscriber.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\AddAttributeAsLabelSubscriber',
            'pim_enrich.form.subscriber.set_attribute_group_sort_order.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\SetAttributeGroupSortOrderSubscriber',
            'pim_enrich.form.subscriber.add_variant_group_axes.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Subscriber\\AddVariantGroupAxesSubscriber',
            'pim_enrich.form.type.attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeType',
            'pim_enrich.form.type.channel.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\ChannelType',
            'pim_enrich.form.type.group.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\GroupType',
            'pim_enrich.form.type.variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\VariantGroupType',
            'pim_enrich.form.type.family.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\FamilyType',
            'pim_enrich.form.type.category.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\CategoryType',
            'pim_enrich.form.type.group_type.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\GroupTypeType',
            'pim_enrich.form.type.attribute_group.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeGroupType',
            'pim_enrich.form.type.association.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AssociationType',
            'pim_enrich.form.type.association_type.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AssociationTypeType',
            'pim_enrich.form.type.media.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MediaType',
            'pim_enrich.form.type.product_grid_filter_choice.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\ProductGridFilterChoiceType',
            'pim_enrich.form.type.conversion_units.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\ConversionUnitsType',
            'pim_enrich.form.type.attribute_option.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeOptionType',
            'pim_enrich.form.type.attribute_option_create.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeOptionCreateType',
            'pim_enrich.form.type.attribute_option_value.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeOptionValueType',
            'pim_enrich.form.type.available_attributes.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AvailableAttributesType',
            'pim_enrich.form.type.attribute_property_scopable.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeProperty\\ScopableType',
            'pim_enrich.form.type.attribute_property_available_locale.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeProperty\\AvailableLocalesType',
            'pim_enrich.form.type.attribute_property_options.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeProperty\\OptionsType',
            'pim_enrich.form.type.attribute_requirement.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\AttributeRequirementType',
            'pim_enrich.form.type.localized_collection.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\LocalizedCollectionType',
            'pim_enrich.form.type.light_entity.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\LightEntityType',
            'pim_enrich.form.type.object_identifier.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\ObjectIdentifierType',
            'pim_enrich.form.type.choose_action.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditChooseActionType',
            'pim_enrich.form.type.edit_common_attributes.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\EditCommonAttributesType',
            'pim_enrich.form.type.add_to_groups.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\AddToGroupsType',
            'pim_enrich.form.type.add_to_variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\AddToVariantGroupType',
            'pim_enrich.form.type.change_family.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\ChangeFamilyType',
            'pim_enrich.form.type.change_status.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\ChangeStatusType',
            'pim_enrich.form.type.classify.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\ClassifyType',
            'pim_enrich.form.type.set_attribute_requirements.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\MassEditAction\\SetAttributeRequirementsType',
            'pim_enrich.form.type.translatable_field.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\TranslatableFieldType',
            'pim_enrich.type.entity_identifier.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Type\\EntityIdentifierType',
            'pim_enrich.form.handler.base.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Handler\\BaseHandler',
            'pim_enrich.form.handler.group.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\Handler\\GroupHandler',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_mass_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductMassEdit',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.product_quick_export.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductQuickExport',
            'pim_enrich.connector.job.job_parameters.constraint_collection_provider.simple_mass_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleMassEdit',
            'pim_enrich.connector.job.job_parameters.default_values_provider.product_mass_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductMassEdit',
            'pim_enrich.connector.job.job_parameters.default_values_provider.product_quick_export.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductQuickExport',
            'pim_enrich.connector.job.job_parameters.default_values_provider.simple_mass_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleMassEdit',
            'pim_enrich.connector_name.mass_edit' => 'Akeneo Mass Edit Connector',
            'pim_enrich.job_name.csv_product_quick_export' => 'csv_product_quick_export',
            'pim_enrich.job_name.csv_product_grid_context_quick_export' => 'csv_product_grid_context_quick_export',
            'pim_enrich.job_name.xlsx_product_quick_export' => 'xlsx_product_quick_export',
            'pim_enrich.job_name.xlsx_product_grid_context_quick_export' => 'xlsx_product_grid_context_quick_export',
            'pim_enrich.job.name.update_product_value' => 'update_product_value',
            'pim_enrich.job.name.add_product_value' => 'add_product_value',
            'pim_enrich.job.name.remove_product_value' => 'remove_product_value',
            'pim_enrich.job.name.edit_common_attributes' => 'edit_common_attributes',
            'pim_enrich.job.name.set_attribute_requirements' => 'set_attribute_requirements',
            'pim_enrich.job.name.add_to_variant_group' => 'add_to_variant_group',
            'pim_enrich.job.simple_job.class' => 'Akeneo\\Component\\Batch\\Job\\Job',
            'pim_enrich.step.item_step.class' => 'Akeneo\\Component\\Batch\\Step\\ItemStep',
            'pim_enrich.job.quick_export_type' => 'quick_export',
            'pim_enrich.job.mass_edit_type' => 'mass_edit',
            'pim_enrich.manager.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Manager\\SequentialEditManager',
            'pim_enrich.mass_edit_action.operation.registry.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\OperationRegistry',
            'pim_enrich.mass_edit_action.change_status.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\ChangeStatus',
            'pim_enrich.mass_edit_action.edit_common_attributes.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\EditCommonAttributes',
            'pim_enrich.mass_edit_action.classify.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\Classify',
            'pim_enrich.mass_edit_action.change_family.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\ChangeFamily',
            'pim_enrich.mass_edit_action.add_to_groups.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\AddToGroups',
            'pim_enrich.mass_edit_action.add_to_variant_group.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\AddToVariantGroup',
            'pim_enrich.mass_edit_action.set_attribute_requirements.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\Operation\\SetAttributeRequirements',
            'pim_enrich.mass_edit_action.form_resolver.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\MassEditFormResolver',
            'pim_enrich.mass_edit_action.operation_job_launcher.class' => 'Pim\\Bundle\\EnrichBundle\\MassEditAction\\OperationJobLauncher',
            'pim_enrich.normalizer.attribute_option_value_collection.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\AttributeOptionValueCollectionNormalizer',
            'pim_enrich.normalizer.attribute_option.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\AttributeOptionNormalizer',
            'pim_enrich.normalizer.attribute_option_value.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\AttributeOptionValueNormalizer',
            'pim_enrich.normalizer.product.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\ProductNormalizer',
            'pim_enrich.normalizer.completeness.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\CompletenessNormalizer',
            'pim_enrich.normalizer.completeness_collection.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\CompletenessCollectionNormalizer',
            'pim_enrich.normalizer.version.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\VersionNormalizer',
            'pim_enrich.normalizer.collection.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\CollectionNormalizer',
            'pim_enrich.normalizer.association_type.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\AssociationTypeNormalizer',
            'pim_enrich.normalizer.attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\AttributeNormalizer',
            'pim_enrich.normalizer.locale.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\LocaleNormalizer',
            'pim_enrich.normalizer.channel.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\ChannelNormalizer',
            'pim_enrich.normalizer.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\SequentialEditNormalizer',
            'pim_enrich.normalizer.group.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\GroupNormalizer',
            'pim_enrich.normalizer.file.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\FileNormalizer',
            'pim_enrich.normalizer.product_violation.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\ProductViolationNormalizer',
            'pim_enrich.normalizer.variant_group_violation.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\VariantGroupViolationNormalizer',
            'pim_enrich.normalizer.datagrid_view.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\DatagridViewNormalizer',
            'pim_enrich.normalizer.category.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\CategoryNormalizer',
            'pim_enrich.normalizer.structured.attribute_option.class' => 'Pim\\Bundle\\EnrichBundle\\Normalizer\\StructuredAttributeOptionNormalizer',
            'pim_enrich.provider.form_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\FormExtensionProvider',
            'pim_enrich.provider.field.chained.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Field\\FieldChainedProvider',
            'pim_enrich.provider.field.base.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Field\\BaseFieldProvider',
            'pim_enrich.provider.field.wysiwyg.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Field\\WysiwygFieldProvider',
            'pim_enrich.provider.filter.chained.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Filter\\FilterChainedProvider',
            'pim_enrich.provider.filter.base.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Filter\\BaseFilterProvider',
            'pim_enrich.provider.empty_value.chained.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\EmptyValue\\EmptyValueChainedProvider',
            'pim_enrich.provider.empty_value.base.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\EmptyValue\\BaseEmptyValueProvider',
            'pim_enrich.provider.form.chained.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Form\\FormChainedProvider',
            'pim_enrich.provider.form.product.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Form\\ProductFormProvider',
            'pim_enrich.provider.form.job_instance.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\Form\\JobInstanceFormProvider',
            'pim_enrich.provider.structure_version.class' => 'Pim\\Bundle\\EnrichBundle\\Provider\\StructureVersion\\StructureVersionProvider',
            'pim_enrich.repository.sequential_edit.class' => 'Pim\\Bundle\\EnrichBundle\\Entity\\Repository\\SequentialEditRepository',
            'pim_enrich.repository.family.search.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\FamilySearchableRepository',
            'pim_enrich.repository.attribute.search.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\AttributeSearchableRepository',
            'pim_enrich.repository.attribute_option.search.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\AttributeOptionSearchableRepository',
            'pim_enrich.repository.category.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\CategoryRepository',
            'pim_enrich.repository.group.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\GroupRepository',
            'pim_enrich.repository.group_type.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\GroupTypeRepository',
            'pim_enrich.repository.attribute.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\AttributeRepository',
            'pim_enrich.repository.family.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\FamilyRepository',
            'pim_enrich.repository.attribute_group.class' => 'Pim\\Bundle\\EnrichBundle\\Doctrine\\ORM\\Repository\\AttributeGroupRepository',
            'pim_enrich.imagine.loader.flysystem.class' => 'Pim\\Bundle\\EnrichBundle\\Imagine\\Loader\\FlysystemLoader',
            'pim_enrich.resolver.locale.class' => 'Pim\\Bundle\\EnrichBundle\\Resolver\\LocaleResolver',
            'pim_internal_api_serializer.class' => 'Symfony\\Component\\Serializer\\Serializer',
            'pim_enrich.encoder.json.class' => 'Symfony\\Component\\Serializer\\Encoder\\JsonEncoder',
            'pim_enrich.step.mass_edit.step.class' => 'Pim\\Bundle\\EnrichBundle\\Connector\\Step\\MassEditStep',
            'pim_enrich.twig.locale_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\LocaleExtension',
            'pim_enrich.twig.category_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\CategoryExtension',
            'pim_enrich.twig.view_element_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\ViewElementExtension',
            'pim_enrich.twig.attribute_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\AttributeExtension',
            'pim_enrich.twig.object_class_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\ObjectClassExtension',
            'pim_enrich.twig.version_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\VersionExtension',
            'pim_enrich.twig.translations_extension.class' => 'Pim\\Bundle\\EnrichBundle\\Twig\\TranslationsExtension',
            'pim_enrich.view_element.registry.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\ViewElementRegistry',
            'pim_enrich.view_element.base.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\BaseViewElement',
            'pim_enrich.view_element.visibility_checker.acl.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\Checker\\AclVisibilityChecker',
            'pim_enrich.view_element.visibility_checker.voter.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\Checker\\VoterVisibilityChecker',
            'pim_enrich.view_element.visibility_checker.edit_form.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\Checker\\EditFormVisibilityChecker',
            'pim_enrich.view_element.visibility_checker.non_empty_property.class' => 'Pim\\Bundle\\EnrichBundle\\ViewElement\\Checker\\NonEmptyPropertyVisibilityChecker',
            'pim_enrich.view_element.association_type.tab.property.template' => 'PimEnrichBundle:AssociationType:Tab/property.html.twig',
            'pim_enrich.view_element.association_type.tab.history.template' => 'PimEnrichBundle:Form:Tab/history.html.twig',
            'pim_enrich.view_element.attribute.tab.parameter.template' => 'PimEnrichBundle:Attribute:Tab/parameter.html.twig',
            'pim_enrich.view_element.attribute.tab.value.template' => 'PimEnrichBundle:Attribute:Tab/value.html.twig',
            'pim_enrich.view_element.attribute.tab.history.template' => 'PimEnrichBundle:Form:Tab/history.html.twig',
            'pim_enrich.attribute.general_parameters.allowed_form_types' => array(
                0 => 'code',
                1 => 'attributeType',
                2 => 'scopable',
                3 => 'reference_data_name',
                4 => 'localizable',
                5 => 'unique',
                6 => 'availableLocales',
            ),
            'pim_enrich.attribute.backend_parameters.allowed_form_types' => array(
                0 => 'group',
                1 => 'useableAsGridFilter',
            ),
            'pim_enrich.view_element.attribute_group.tab.property.template' => 'PimEnrichBundle:AttributeGroup:Tab/property.html.twig',
            'pim_enrich.view_element.attribute_group.tab.attribute.template' => 'PimEnrichBundle:AttributeGroup:Tab/attribute.html.twig',
            'pim_enrich.view_element.attribute_group.tab.history.template' => 'PimEnrichBundle:Form:Tab/history.html.twig',
            'pim_enrich.view_element.category.tab.property.template' => 'PimEnrichBundle:CategoryTree:Tab/property.html.twig',
            'pim_enrich.view_element.category.tab.history.template' => 'PimEnrichBundle:Form:Tab/history.html.twig',
            'pim_enrich.view_element.channel.tab.property.template' => 'PimEnrichBundle:Channel:Tab/property.html.twig',
            'pim_enrich.view_element.channel.tab.history.template' => 'PimEnrichBundle:Form:Tab/history.html.twig',
            'pim_enrich.view_element.family.tab.property.template' => 'PimEnrichBundle:Family:Tab/property.html.twig',
            'pim_enrich.view_element.family.tab.attribute.template' => 'PimEnrichBundle:Family:Tab/attribute.html.twig',
            'pim_enrich.view_element.family.tab.history.template' => 'PimEnrichBundle:Family:Tab/history.html.twig',
            'pim_enrich.view_element.group.tab.product.template' => 'PimEnrichBundle:Group:Tab/product.html.twig',
            'pim_enrich.view_element.group.tab.property.template' => 'PimEnrichBundle:Group:Tab/property.html.twig',
            'pim_enrich.view_element.group.tab.history.template' => 'PimEnrichBundle:Group:Tab/history.html.twig',
            'pim_enrich.view_element.group_type.tab.property.template' => 'PimEnrichBundle:GroupType:Tab/property.html.twig',
            'pim_enrich.view_element.mass_edit.warning.template' => 'PimEnrichBundle:MassEditAction:warning.html.twig',
            'pim_enrich.form.view.view_updater.registry.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\View\\ViewUpdater\\ViewUpdaterRegistry',
            'pim_enrich.form.view.view_updater.variant.class' => 'Pim\\Bundle\\EnrichBundle\\Form\\View\\ViewUpdater\\VariantViewUpdater',
            'pim_comment.builder.comment.class' => 'Pim\\Bundle\\CommentBundle\\Builder\\CommentBuilder',
            'pim_comment.controller.comment.class' => 'Pim\\Bundle\\CommentBundle\\Controller\\CommentController',
            'pim_comment.entity.comment.class' => 'Pim\\Bundle\\CommentBundle\\Entity\\Comment',
            'pim_comment.form.type.comment.class' => 'Pim\\Bundle\\CommentBundle\\Form\\Type\\CommentType',
            'pim_comment.normalizer.standard.comment.class' => 'Pim\\Bundle\\CommentBundle\\Normalizer\\Standard\\CommentNormalizer',
            'pim_comment.repository.comment.class' => 'Pim\\Bundle\\CommentBundle\\Repository\\CommentRepository',
            'pim_pdf_generator.builder.dompdf.class' => 'Pim\\Bundle\\PdfGeneratorBundle\\Builder\\DompdfBuilder',
            'pim_pdf_generator.controller.product.class' => 'Pim\\Bundle\\PdfGeneratorBundle\\Controller\\ProductController',
            'pim_pdf_generator.renderer.product_pdf.class' => 'Pim\\Bundle\\PdfGeneratorBundle\\Renderer\\ProductPdfRenderer',
            'pim_pdf_generator.renderer.registry.class' => 'Pim\\Bundle\\PdfGeneratorBundle\\Renderer\\RendererRegistry',
            'pim_datagrid.twig.image_extension.class' => 'Pim\\Bundle\\PdfGeneratorBundle\\Twig\\ImageExtension',
            'pim_pdf_generator_font' => NULL,
            'pim_reference_data.configurations' => array(
                'fabrics' => array(
                    'class' => 'Acme\\Bundle\\AppBundle\\Entity\\Fabric',
                    'type' => 'multi',
                ),
                'color' => array(
                    'class' => 'Acme\\Bundle\\AppBundle\\Entity\\Color',
                    'type' => 'simple',
                ),
            ),
            'pim_reference_data.attribute_type.simpleselect.class' => 'Pim\\Bundle\\ReferenceDataBundle\\AttributeType\\ReferenceDataSimpleSelectType',
            'pim_reference_data.attribute_type.multiselect.class' => 'Pim\\Bundle\\ReferenceDataBundle\\AttributeType\\ReferenceDataMultiSelectType',
            'pim_reference_data.controller.configuration_rest.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Controller\\ConfigurationRestController',
            'pim_reference_data.filter.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\DataGrid\\Filter\\ReferenceDataFilter',
            'pim_reference_data.extension.formatter.property.reference_data_property.class' => 'Pim\\Bundle\\ReferenceDataBundle\\DataGrid\\Extension\\Formatter\\Property\\ReferenceDataProperty',
            'pim_reference_data.extension.selector.orm.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\DataGrid\\Extension\\Selector\\ORM\\ReferenceDataSelector',
            'pim_reference_data.extension.sorter.reference_data_sorter.class' => 'Pim\\Bundle\\ReferenceDataBundle\\DataGrid\\Extension\\Sorter\\ReferenceDataSorter',
            'pim_reference_data.model.abstract_reference_data.class' => 'Pim\\Component\\ReferenceData\\Model\\AbstractReferenceData',
            'pim_reference_data.model.reference_data.interface' => 'Pim\\Component\\ReferenceData\\Model\\ReferenceDataInterface',
            'pim_reference_data.enrich.provider.field.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Enrich\\Provider\\Field\\ReferenceDataFieldProvider',
            'pim_reference_data.enrich.provider.filter.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Enrich\\Provider\\Filter\\ReferenceDataFilterProvider',
            'pim_reference_data.enrich.provider.empty_value.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Enrich\\Provider\\EmptyValue\\ReferenceDataEmptyValueProvider',
            'pim_reference_data.normalizer.configuration.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Normalizer\\ConfigurationNormalizer',
            'pim_reference_data.normalizer.flat.reference_data.class' => 'Pim\\Component\\ReferenceData\\Normalizer\\Flat\\ReferenceDataNormalizer',
            'pim_reference_data.denormalizer.reference_data.class' => 'Pim\\Component\\ReferenceData\\Denormalizer\\Standard\\ProductValue\\ReferenceDataDenormalizer',
            'pim_reference_data.denormalizer.reference_data_collection.class' => 'Pim\\Component\\ReferenceData\\Denormalizer\\Standard\\ProductValue\\ReferenceDataCollectionDenormalizer',
            'pim_reference_data.denormalizer.flat.reference_data.class' => 'Pim\\Component\\ReferenceData\\Denormalizer\\Flat\\ProductValue\\ReferenceDataDenormalizer',
            'pim_reference_data.denormalizer.flat.reference_data_collection.class' => 'Pim\\Component\\ReferenceData\\Denormalizer\\Flat\\ProductValue\\ReferenceDataCollectionDenormalizer',
            'pim_reference_data.registry.class' => 'Pim\\Component\\ReferenceData\\ConfigurationRegistry',
            'pim_reference_data.method_guesser.class' => 'Pim\\Component\\ReferenceData\\MethodNameGuesser',
            'pim_reference_data.repository_resolver.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Doctrine\\ReferenceDataRepositoryResolver',
            'pim_reference_data.id_resolver.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Doctrine\\ReferenceDataIdResolver',
            'pim_reference_data.label_renderer.class' => 'Pim\\Component\\ReferenceData\\LabelRenderer',
            'pim_reference_data.updater.setter.reference_data_value.class' => 'Pim\\Component\\ReferenceData\\Updater\\Setter\\ReferenceDataSetter',
            'pim_reference_data.updater.setter.reference_data_collection_value.class' => 'Pim\\Component\\ReferenceData\\Updater\\Setter\\ReferenceDataCollectionSetter',
            'pim_reference_data.updater.copier.reference_data_value.class' => 'Pim\\Component\\ReferenceData\\Updater\\Copier\\ReferenceDataAttributeCopier',
            'pim_reference_data.updater.copier.reference_data_collection_value.class' => 'Pim\\Component\\ReferenceData\\Updater\\Copier\\ReferenceDataCollectionAttributeCopier',
            'pim_reference_data.doctrine.query.filter.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Doctrine\\ORM\\Filter\\ReferenceDataFilter',
            'pim_reference_data.doctrine.query.sorter.reference_data.class' => 'Pim\\Bundle\\ReferenceDataBundle\\Doctrine\\ORM\\Sorter\\ReferenceDataSorter',
            'pim_connector.analyzer.product.class' => 'Pim\\Component\\Connector\\Analyzer\\ProductAnalyzer',
            'pim_connector.event_listener.archivist.class' => 'Pim\\Bundle\\ConnectorBundle\\EventListener\\JobExecutionArchivist',
            'pim_connector.event_listener.invalid_items_collector.class' => 'Pim\\Bundle\\ConnectorBundle\\EventListener\\InvalidItemsCollector',
            'pim_connector.factory.zip_filesystem.class' => 'Pim\\Component\\Connector\\Archiver\\ZipFilesystemFactory',
            'pim_connector.archiver.file_reader_archiver.class' => 'Pim\\Component\\Connector\\Archiver\\FileReaderArchiver',
            'pim_connector.archiver.file_writer_archiver.class' => 'Pim\\Component\\Connector\\Archiver\\FileWriterArchiver',
            'pim_connector.archiver.archivable_file_writer_archiver.class' => 'Pim\\Component\\Connector\\Archiver\\ArchivableFileWriterArchiver',
            'pim_connector.archiver.invalid_item_csv_writer.class' => 'Pim\\Component\\Connector\\Archiver\\CsvInvalidItemWriter',
            'pim_connector.archiver.invalid_item_xlsx_writer.class' => 'Pim\\Component\\Connector\\Archiver\\XlsxInvalidItemWriter',
            'pim_connector.array_converter.flat_to_standard.attribute_option.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\AttributeOption',
            'pim_connector.array_converter.flat_to_standard.attribute.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Attribute',
            'pim_connector.array_converter.flat_to_standard.product.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product',
            'pim_connector.array_converter.flat_to_standard.product_value.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\ProductValue',
            'pim_connector.array_converter.flat_to_standard.product_delocalized.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\ProductDelocalized',
            'pim_connector.array_converter.flat_to_standard.product_association.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\ProductAssociation',
            'pim_connector.array_converter.flat_to_standard.variant_group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\VariantGroup',
            'pim_connector.array_converter.flat_to_standard.group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Group',
            'pim_connector.array_converter.flat_to_standard.category.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Category',
            'pim_connector.array_converter.flat_to_standard.association_type.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\AssociationType',
            'pim_connector.array_converter.flat_to_standard.family.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Family',
            'pim_connector.array_converter.flat_to_standard.channel.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Channel',
            'pim_connector.array_converter.flat_to_standard.attribute_group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\AttributeGroup',
            'pim_connector.array_converter.flat_to_standard.group_type.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\GroupType',
            'pim_connector.array_converter.flat_to_standard.currency.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Currency',
            'pim_connector.array_converter.flat_to_standard.user.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\User',
            'pim_connector.array_converter.flat_to_standard.locale.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Locale',
            'pim_connector.array_converter.standard_to_flat.association_type.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\AssociationType',
            'pim_connector.array_converter.standard_to_flat.attribute.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Attribute',
            'pim_connector.array_converter.standard_to_flat.attribute_group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\AttributeGroup',
            'pim_connector.array_converter.standard_to_flat.attribute_option.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\AttributeOption',
            'pim_connector.array_converter.standard_to_flat.category.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Category',
            'pim_connector.array_converter.standard_to_flat.channel.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Channel',
            'pim_connector.array_converter.standard_to_flat.locale.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Locale',
            'pim_connector.array_converter.standard_to_flat.currency.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Currency',
            'pim_connector.array_converter.standard_to_flat.family.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Family',
            'pim_connector.array_converter.standard_to_flat.group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Group',
            'pim_connector.array_converter.standard_to_flat.group_type.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\GroupType',
            'pim_connector.array_converter.standard_to_flat.product.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product',
            'pim_connector.array_converter.standard_to_flat.product_localized.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\ProductLocalized',
            'pim_connector.array_converter.standard_to_flat.user.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\User',
            'pim_connector.array_converter.standard_to_flat.variant_group.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\VariantGroup',
            'pim_connector.array_converter.standard_to_flat.product.product_value_converter.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ProductValueConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.registry.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\ValueConverterRegistry',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.abstract.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\AbstractValueConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.price.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\PriceConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.metric.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\MetricConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.multiselect.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\MultiSelectConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.simpleselect.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\SimpleSelectConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.media.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\MediaConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.text.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\TextConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.boolean.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\BooleanConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.number.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\NumberConverter',
            'pim_connector.array_converter.flat_to_standard.product.value_converter.date.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ValueConverter\\DateConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.registry.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\ValueConverterRegistry',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.price.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\PriceConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.metric.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\MetricConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.multiselect.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\MultiSelectConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.simpleselect.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\SimpleSelectConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.media.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\MediaConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.text.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\TextConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.boolean.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\BooleanConverter',
            'pim_connector.array_converter.standard_to_flat.product.value_converter.date.class' => 'Pim\\Component\\Connector\\ArrayConverter\\StandardToFlat\\Product\\ValueConverter\\DateConverter',
            'pim_connector.array_converter.flat_to_standard.product.field_converter.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\FieldConverter',
            'pim_connector.array_converter.flat_to_standard.product.attribute_columns_resolver.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\AttributeColumnsResolver',
            'pim_connector.array_converter.flat_to_standard.product.association_columns_resolver.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\AssociationColumnsResolver',
            'pim_connector.array_converter.flat_to_standard.product.columns_merger.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ColumnsMerger',
            'pim_connector.array_converter.flat_to_standard.product.columns_mapper.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\ColumnsMapper',
            'pim_connector.array_converter.flat_to_standard.product.attribute_column_info_extractor.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\AttributeColumnInfoExtractor',
            'pim_connector.array_converter.flat_to_standard.product.field_splitter.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FlatToStandard\\Product\\FieldSplitter',
            'pim_connector.array_convertor.checker.fields_requirement.class' => 'Pim\\Component\\Connector\\ArrayConverter\\FieldsRequirementChecker',
            'pim_connector.array_converter.dummy.class' => 'Pim\\Component\\Connector\\ArrayConverter\\DummyConverter',
            'pim_connector.factory.flat_item_buffer.class' => 'Pim\\Component\\Connector\\Writer\\File\\FlatItemBuffer',
            'pim_connector.validator.item.charset_validator.class' => 'Pim\\Component\\Connector\\Item\\CharsetValidator',
            'pim_connector.connector_name.csv' => 'Akeneo CSV Connector',
            'pim_connector.connector_name.xlsx' => 'Akeneo XLSX Connector',
            'pim_connector.job_name.csv_attribute_export' => 'csv_attribute_export',
            'pim_connector.job_name.csv_attribute_import' => 'csv_attribute_import',
            'pim_connector.job_name.csv_attribute_option_export' => 'csv_attribute_option_export',
            'pim_connector.job_name.csv_attribute_option_import' => 'csv_attribute_option_import',
            'pim_connector.job_name.csv_association_type_export' => 'csv_association_type_export',
            'pim_connector.job_name.csv_association_type_import' => 'csv_association_type_import',
            'pim_connector.job_name.csv_family_export' => 'csv_family_export',
            'pim_connector.job_name.csv_family_import' => 'csv_family_import',
            'pim_connector.job_name.csv_group_export' => 'csv_group_export',
            'pim_connector.job_name.csv_group_import' => 'csv_group_import',
            'pim_connector.job_name.csv_product_export' => 'csv_product_export',
            'pim_connector.job_name.csv_product_import' => 'csv_product_import',
            'pim_connector.job_name.csv_category_export' => 'csv_category_export',
            'pim_connector.job_name.csv_category_import' => 'csv_category_import',
            'pim_connector.job_name.csv_variant_group_export' => 'csv_variant_group_export',
            'pim_connector.job_name.csv_variant_group_import' => 'csv_variant_group_import',
            'pim_connector.job_name.csv_channel_export' => 'csv_channel_export',
            'pim_connector.job_name.csv_channel_import' => 'csv_channel_import',
            'pim_connector.job_name.csv_locale_export' => 'csv_locale_export',
            'pim_connector.job_name.csv_locale_import' => 'csv_locale_import',
            'pim_connector.job_name.csv_attribute_group_export' => 'csv_attribute_group_export',
            'pim_connector.job_name.csv_attribute_group_import' => 'csv_attribute_group_import',
            'pim_connector.job_name.csv_currency_export' => 'csv_currency_export',
            'pim_connector.job_name.csv_currency_import' => 'csv_currency_import',
            'pim_connector.job_name.csv_group_type_export' => 'csv_group_type_export',
            'pim_connector.job_name.csv_group_type_import' => 'csv_group_type_import',
            'pim_connector.job_name.xlsx_attribute_export' => 'xlsx_attribute_export',
            'pim_connector.job_name.xlsx_attribute_import' => 'xlsx_attribute_import',
            'pim_connector.job_name.xlsx_attribute_option_export' => 'xlsx_attribute_option_export',
            'pim_connector.job_name.xlsx_attribute_option_import' => 'xlsx_attribute_option_import',
            'pim_connector.job_name.xlsx_association_type_export' => 'xlsx_association_type_export',
            'pim_connector.job_name.xlsx_association_type_import' => 'xlsx_association_type_import',
            'pim_connector.job_name.xlsx_family_export' => 'xlsx_family_export',
            'pim_connector.job_name.xlsx_family_import' => 'xlsx_family_import',
            'pim_connector.job_name.xlsx_group_export' => 'xlsx_group_export',
            'pim_connector.job_name.xlsx_group_import' => 'xlsx_group_import',
            'pim_connector.job_name.xlsx_product_export' => 'xlsx_product_export',
            'pim_connector.job_name.xlsx_product_import' => 'xlsx_product_import',
            'pim_connector.job_name.xlsx_category_export' => 'xlsx_category_export',
            'pim_connector.job_name.xlsx_category_import' => 'xlsx_category_import',
            'pim_connector.job_name.xlsx_variant_group_export' => 'xlsx_variant_group_export',
            'pim_connector.job_name.xlsx_variant_group_import' => 'xlsx_variant_group_import',
            'pim_connector.job_name.xlsx_channel_export' => 'xlsx_channel_export',
            'pim_connector.job_name.xlsx_channel_import' => 'xlsx_channel_import',
            'pim_connector.job_name.xlsx_locale_export' => 'xlsx_locale_export',
            'pim_connector.job_name.xlsx_locale_import' => 'xlsx_locale_import',
            'pim_connector.job_name.xlsx_attribute_group_export' => 'xlsx_attribute_group_export',
            'pim_connector.job_name.xlsx_attribute_group_import' => 'xlsx_attribute_group_import',
            'pim_connector.job_name.xlsx_currency_export' => 'xlsx_currency_export',
            'pim_connector.job_name.xlsx_currency_import' => 'xlsx_currency_import',
            'pim_connector.job_name.xlsx_group_type_export' => 'xlsx_group_type_export',
            'pim_connector.job_name.xlsx_group_type_import' => 'xlsx_group_type_import',
            'pim_connector.job.simple_job.class' => 'Akeneo\\Component\\Batch\\Job\\Job',
            'pim_connector.step.item_step.class' => 'Akeneo\\Component\\Batch\\Step\\ItemStep',
            'pim_connector.job.import_type' => 'import',
            'pim_connector.job.export_type' => 'export',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleCsvExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleXlsxExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_yaml_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleYamlExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductCsvExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductXlsxExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\VariantGroupCsvExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\VariantGroupXlsxExport',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleCsvImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleXlsxImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.simple_yaml_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\SimpleYamlImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductCsvImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.product_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\ProductCsvImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\VariantGroupCsvImport',
            'pim_connector.job.job_parameters.constraint_collection_provider.variant_group_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\ConstraintCollectionProvider\\VariantGroupCsvImport',
            'pim_connector.job.job_parameters.default_values_provider.simple_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleCsvExport',
            'pim_connector.job.job_parameters.default_values_provider.simple_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleXlsxExport',
            'pim_connector.job.job_parameters.default_values_provider.simple_yaml_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleYamlExport',
            'pim_connector.job.job_parameters.default_values_provider.product_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductCsvExport',
            'pim_connector.job.job_parameters.default_values_provider.product_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductXlsxExport',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_csv_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\VariantGroupCsvExport',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_export.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\VariantGroupXlsxExport',
            'pim_connector.job.job_parameters.default_values_provider.simple_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleCsvImport',
            'pim_connector.job.job_parameters.default_values_provider.simple_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleXlsxImport',
            'pim_connector.job.job_parameters.default_values_provider.simple_yaml_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\SimpleYamlImport',
            'pim_connector.job.job_parameters.default_values_provider.product_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductCsvImport',
            'pim_connector.job.job_parameters.default_values_provider.product_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\ProductCsvImport',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_csv_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\VariantGroupCsvImport',
            'pim_connector.job.job_parameters.default_values_provider.variant_group_xlsx_import.class' => 'Pim\\Component\\Connector\\Job\\JobParameters\\DefaultValuesProvider\\VariantGroupXlsxImport',
            'pim_connector.processor.dummy_item.class' => 'Pim\\Component\\Connector\\Processor\\DummyItemProcessor',
            'pim_connector.processor.denormalization.class' => 'Pim\\Component\\Connector\\Processor\\Denormalization\\Processor',
            'pim_connector.processor.denormalization.product.class' => 'Pim\\Component\\Connector\\Processor\\Denormalization\\ProductProcessor',
            'pim_connector.processor.denormalization.product_association.class' => 'Pim\\Component\\Connector\\Processor\\Denormalization\\ProductAssociationProcessor',
            'pim_connector.processor.denormalization.variant_group.class' => 'Pim\\Component\\Connector\\Processor\\Denormalization\\VariantGroupProcessor',
            'pim_connector.processor.denormalization.job_instance.class' => 'Pim\\Component\\Connector\\Processor\\Denormalization\\JobInstanceProcessor',
            'pim_connector.processor.normalization.class' => 'Pim\\Component\\Connector\\Processor\\Normalization\\Processor',
            'pim_connector.processor.normalization.product.class' => 'Pim\\Component\\Connector\\Processor\\Normalization\\ProductProcessor',
            'pim_connector.processor.normalization.variant_group.class' => 'Pim\\Component\\Connector\\Processor\\Normalization\\VariantGroupProcessor',
            'pim_connector.processor.bulk_media_fetcher.class' => 'Pim\\Component\\Connector\\Processor\\BulkMediaFetcher',
            'pim_connector.reader.dummy_item.class' => 'Pim\\Component\\Connector\\Reader\\DummyItemReader',
            'pim_connector.reader.database.class' => 'Pim\\Component\\Connector\\Reader\\Database\\Reader',
            'pim_connector.reader.database.product.class' => 'Pim\\Component\\Connector\\Reader\\Database\\ProductReader',
            'pim_connector.reader.database.atribute_option.class' => 'Pim\\Component\\Connector\\Reader\\Database\\AttributeOptionReader',
            'pim_connector.reader.database.category.class' => 'Pim\\Component\\Connector\\Reader\\Database\\CategoryReader',
            'pim_connector.reader.database.group.class' => 'Pim\\Component\\Connector\\Reader\\Database\\GroupReader',
            'pim_connector.reader.database.variant_group.class' => 'Pim\\Component\\Connector\\Reader\\Database\\VariantGroupReader',
            'pim_connector.reader.file.csv.class' => 'Pim\\Component\\Connector\\Reader\\File\\Csv\\Reader',
            'pim_connector.reader.file.csv_variant_group.class' => 'Pim\\Component\\Connector\\Reader\\File\\Csv\\VariantGroupReader',
            'pim_connector.reader.file.csv_association.class' => 'Pim\\Component\\Connector\\Reader\\File\\Csv\\ProductAssociationReader',
            'pim_connector.reader.file.csv_product.class' => 'Pim\\Component\\Connector\\Reader\\File\\Csv\\ProductReader',
            'pim_connector.reader.file.xlsx.class' => 'Pim\\Component\\Connector\\Reader\\File\\Xlsx\\Reader',
            'pim_connector.reader.file.xlsx_product.class' => 'Pim\\Component\\Connector\\Reader\\File\\Xlsx\\ProductReader',
            'pim_connector.reader.file.yaml.class' => 'Pim\\Component\\Connector\\Reader\\File\\Yaml\\Reader',
            'pim_connector.reader.file.flat_file_iterator.class' => 'Pim\\Component\\Connector\\Reader\\File\\FlatFileIterator',
            'pim_connector.reader.file.file_iterator_factory.class' => 'Pim\\Component\\Connector\\Reader\\File\\FileIteratorFactory',
            'pim_connector.reader.file.media_path_transformer.class' => 'Pim\\Component\\Connector\\Reader\\File\\MediaPathTransformer',
            'pim_connector.reader.file.array_reader.class' => 'Pim\\Component\\Connector\\Reader\\File\\ArrayReader',
            'pim_connector.step.validator.class' => 'Pim\\Component\\Connector\\Step\\ValidatorStep',
            'pim_connector.step.tasklet.class' => 'Pim\\Component\\Connector\\Step\\TaskletStep',
            'pim_connector.validator.constraints.channel_validator.class' => 'Pim\\Component\\Connector\\Validator\\Constraints\\ChannelValidator',
            'pim_connector.writer.dummy_item.class' => 'Pim\\Component\\Connector\\Writer\\DummyItemWriter',
            'pim_connector.writer.database.class' => 'Pim\\Component\\Connector\\Writer\\Database\\Writer',
            'pim_connector.writer.database.product.class' => 'Pim\\Component\\Connector\\Writer\\Database\\ProductWriter',
            'pim_connector.writer.database.product_association.class' => 'Pim\\Component\\Connector\\Writer\\Database\\ProductAssociationWriter',
            'pim_connector.writer.database.variant_group.class' => 'Pim\\Component\\Connector\\Writer\\Database\\VariantGroupWriter',
            'pim_connector.writer.database.attribute_group.class' => 'Pim\\Component\\Connector\\Writer\\Database\\AttributeGroupWriter',
            'pim_connector.writer.file.abstract.class' => 'Pim\\Component\\Connector\\Writer\\File\\AbstractFileWriter',
            'pim_connector.writer.file.csv.class' => 'Pim\\Component\\Connector\\Writer\\File\\Csv\\Writer',
            'pim_connector.writer.file.csv_product.class' => 'Pim\\Component\\Connector\\Writer\\File\\Csv\\ProductWriter',
            'pim_connector.writer.file.csv_variant_group.class' => 'Pim\\Component\\Connector\\Writer\\File\\Csv\\VariantGroupWriter',
            'pim_connector.writer.file.yaml.class' => 'Pim\\Component\\Connector\\Writer\\File\\Yaml\\Writer',
            'pim_connector.writer.file.media_exporter_path_generator.class' => 'Pim\\Component\\Connector\\Writer\\File\\MediaExporterPathGenerator',
            'pim_connector.writer.file.xlsx_product.class' => 'Pim\\Component\\Connector\\Writer\\File\\Xlsx\\ProductWriter',
            'pim_connector.writer.file.xlsx.class' => 'Pim\\Component\\Connector\\Writer\\File\\Xlsx\\Writer',
            'pim_connector.writer.file.xlsx_variant_group.class' => 'Pim\\Component\\Connector\\Writer\\File\\Xlsx\\VariantGroupWriter',
            'pim_connector.writer.file.default.column_sorter.class' => 'Pim\\Component\\Connector\\Writer\\File\\DefaultColumnSorter',
            'pim_connector.writer.file.product.column_sorter.class' => 'Pim\\Component\\Connector\\Writer\\File\\ProductColumnSorter',
            'pim_connector.writer.file.flat_item_buffer_flusher.class' => 'Pim\\Component\\Connector\\Writer\\File\\FlatItemBufferFlusher',
            'pim_localization.controller.locale.class' => 'Pim\\Bundle\\LocalizationBundle\\Controller\\LocaleController',
            'pim_localization.controller.format.class' => 'Pim\\Bundle\\LocalizationBundle\\Controller\\FormatController',
            'pim_localization.form.type.locale.class' => 'Pim\\Bundle\\LocalizationBundle\\Form\\Type\\LocaleType',
            'pim_localization.provider.ui_locale.class' => 'Pim\\Bundle\\LocalizationBundle\\Provider\\UiLocaleProvider',
            'pim_localization.provider.ui_locale.min_percentage' => 0.80000000000000004,
            'pim_localization.twig.locale_extension.class' => 'Pim\\Bundle\\LocalizationBundle\\Twig\\LocaleExtension',
            'pim_localization.twig.attribute_option_extension.class' => 'Pim\\Bundle\\LocalizationBundle\\Twig\\AttributeOptionExtension',
            'pim_localization.twig.attribute_extension.class' => 'Pim\\Bundle\\LocalizationBundle\\Twig\\AttributeExtension',
            'pim_localization.updater.translatable.class' => 'Akeneo\\Component\\Localization\\TranslatableUpdater',
            'akeneo_classification.factory.category.class' => 'Akeneo\\Component\\Classification\\Factory\\CategoryFactory',
            'akeneo_classification.repository.abstract_item_category.class' => 'Akeneo\\Bundle\\ClassificationBundle\\Doctrine\\ORM\\Repository\\AbstractItemCategoryRepository',
            'akeneo_classification.updater.category.class' => 'Akeneo\\Component\\Classification\\Updater\\CategoryUpdater',
            'web_profiler.controller.profiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController',
            'web_profiler.controller.router.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\RouterController',
            'web_profiler.controller.exception.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ExceptionController',
            'twig.extension.webprofiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension',
            'web_profiler.debug_toolbar.position' => 'bottom',
            'web_profiler.debug_toolbar.class' => 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener',
            'web_profiler.debug_toolbar.intercept_redirects' => false,
            'web_profiler.debug_toolbar.mode' => 2,
            'sensio_distribution.webconfigurator.class' => 'Sensio\\Bundle\\DistributionBundle\\Configurator\\Configurator',
            'sensio_distribution.webconfigurator.doctrine_step.class' => 'Sensio\\Bundle\\DistributionBundle\\Configurator\\Step\\DoctrineStep',
            'sensio_distribution.webconfigurator.secret_step.class' => 'Sensio\\Bundle\\DistributionBundle\\Configurator\\Step\\SecretStep',
            'sensio_distribution.security_checker.class' => 'SensioLabs\\Security\\SecurityChecker',
            'sensio_distribution.security_checker.command.class' => 'SensioLabs\\Security\\Command\\SecurityCheckerCommand',
            'data_collector.templates' => array(
                'data_collector.config' => array(
                    0 => 'config',
                    1 => '@WebProfiler/Collector/config.html.twig',
                ),
                'data_collector.request' => array(
                    0 => 'request',
                    1 => '@WebProfiler/Collector/request.html.twig',
                ),
                'data_collector.ajax' => array(
                    0 => 'ajax',
                    1 => '@WebProfiler/Collector/ajax.html.twig',
                ),
                'data_collector.exception' => array(
                    0 => 'exception',
                    1 => '@WebProfiler/Collector/exception.html.twig',
                ),
                'data_collector.events' => array(
                    0 => 'events',
                    1 => '@WebProfiler/Collector/events.html.twig',
                ),
                'data_collector.logger' => array(
                    0 => 'logger',
                    1 => '@WebProfiler/Collector/logger.html.twig',
                ),
                'data_collector.time' => array(
                    0 => 'time',
                    1 => '@WebProfiler/Collector/time.html.twig',
                ),
                'data_collector.memory' => array(
                    0 => 'memory',
                    1 => '@WebProfiler/Collector/memory.html.twig',
                ),
                'data_collector.router' => array(
                    0 => 'router',
                    1 => '@WebProfiler/Collector/router.html.twig',
                ),
                'data_collector.form' => array(
                    0 => 'form',
                    1 => '@WebProfiler/Collector/form.html.twig',
                ),
                'data_collector.translation' => array(
                    0 => 'translation',
                    1 => '@WebProfiler/Collector/translation.html.twig',
                ),
                'data_collector.twig' => array(
                    0 => 'twig',
                    1 => '@WebProfiler/Collector/twig.html.twig',
                ),
                'data_collector.security' => array(
                    0 => 'security',
                    1 => '@Security/Collector/security.html.twig',
                ),
                'swiftmailer.data_collector' => array(
                    0 => 'swiftmailer',
                    1 => '@Swiftmailer/Collector/swiftmailer.html.twig',
                ),
                'data_collector.doctrine' => array(
                    0 => 'db',
                    1 => 'DoctrineBundle:Collector:db',
                ),
                'pim_catalog.data_collector.database' => array(
                    0 => 'database',
                    1 => 'PimCatalogBundle:Collector:database',
                ),
                'data_collector.dump' => array(
                    0 => 'dump',
                    1 => '@Debug/Profiler/dump.html.twig',
                ),
            ),
            'console.command.ids' => array(
                0 => 'sensio_distribution.security_checker.command',
            ),
        );
    }
}
